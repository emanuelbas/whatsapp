THERE_BE_DRAGONS_HERE
Instance of WalkingBrushRobot did not understand #move
21 December 2017 4:02:17.562824 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

WalkingBrushRobot(Object)>>doesNotUnderstand: #move
	Receiver: Robot at (25@25), direction 0
	Arguments and temporary variables: 
		aMessage: 	move
		exception: 	MessageNotUnderstood: WalkingBrushRobot>>move
		resumeValue: 	nil
	Receiver's instance variables: 
		id: 	#robotech
		body: 	a BGSRobotBodyWithFrontRangeSensor
		commands: 	an OrderedCollection()
		semaphore: 	a Semaphore()
		battery: 	a Battery
		brush: 	a Brush


WalkingBrushRobot>>DoIt
	Receiver: Robot at (25@25), direction 0
	Arguments and temporary variables: 

	Receiver's instance variables: 
		id: 	#robotech
		body: 	a BGSRobotBodyWithFrontRangeSensor
		commands: 	an OrderedCollection()
		semaphore: 	a Semaphore()
		battery: 	a Battery
		brush: 	a Brush


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'self move.'
		itsSelection: 	a Text for 'self move.'
		itsSelectionString: 	'self move.'
	Receiver's instance variables: 
		ast: 	DoIt
	^ self move
		source: 	a ReadStream
		context: 	nil
		receiver: 	Robot at (25@25), direction 0
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	Robot at (25@25), direction 0
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(1030726656)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(1030726656)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(73667584)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(1030726656)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (570@50)
		owner: 	a TransformWithLayoutMorph(747943168)
		submorphs: 	an Array(a RubPrimarySelectionMorph(911616256) a RubCursor(54518272)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (35760384) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(385559808)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(54518272)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(803363072))
		getMenuPolicy: 	a RubEditingArea(1030726656)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(73667584)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (976@665)
		canvas: 	a FormCanvas on: DisplayScreen(976x665x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(1026546944))(a FadingMor...etc...
		lastStepTime: 	2187193
		lastStepMessage: 	nil
		lastCycleTime: 	2187190
		alarms: 	a Heap()
		lastAlarmTime: 	2187167
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (976@665)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a FadingMorph(1026546944) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (439636736) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (976@665)
		canvas: 	a FormCanvas on: DisplayScreen(976x665x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(1026546944))(a FadingMor...etc...
		lastStepTime: 	2187193
		lastStepMessage: 	nil
		lastCycleTime: 	2187190
		alarms: 	a Heap()
		lastAlarmTime: 	2187167
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (976@665)
		canvas: 	a FormCanvas on: DisplayScreen(976x665x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(1026546944))(a FadingMor...etc...
		lastStepTime: 	2187193
		lastStepMessage: 	nil
		lastCycleTime: 	2187190
		alarms: 	a Heap()
		lastAlarmTime: 	2187167
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (976@665)
		canvas: 	a FormCanvas on: DisplayScreen(976x665x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(1026546944))(a FadingMor...etc...
		lastStepTime: 	2187193
		lastStepMessage: 	nil
		lastCycleTime: 	2187190
		alarms: 	a Heap()
		lastAlarmTime: 	2187167
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (976@665)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a FadingMorph(1026546944) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (439636736) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(631242240)
	Arguments and temporary variables: 
		aPoint: 	(71@290)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(1030726656)
	Receiver's instance variables: 
		bounds: 	(69.0@282.0) corner: (276.0@516.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(484697856)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(69.0@282.0) corner: (276.0@516.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (547383040) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(913271296)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(631242240)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(69.0@282.0) corner: (276.0@516.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(484697856)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(69.0@282.0) corner: (276.0@516.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (547383040) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(913271296)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(631242240)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(69.0@282.0) corner: (276.0@516.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(484697856)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(69.0@282.0) corner: (276.0@516.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (547383040) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(913271296)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(1030726656)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(631242240)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (570@50)
		owner: 	a TransformWithLayoutMorph(747943168)
		submorphs: 	an Array(a RubPrimarySelectionMorph(911616256) a RubCursor(54518272)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (35760384) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(385559808)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(54518272)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(803363072))
		getMenuPolicy: 	a RubEditingArea(1030726656)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(1030726656)
	Arguments and temporary variables: 
		evt: 	[(20.0@42.0) mouseDown yellow 153781265 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (570@50)
		owner: 	a TransformWithLayoutMorph(747943168)
		submorphs: 	an Array(a RubPrimarySelectionMorph(911616256) a RubCursor(54518272)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (35760384) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(385559808)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(54518272)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(803363072))
		getMenuPolicy: 	a RubEditingArea(1030726656)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(1030726656)
	Arguments and temporary variables: 
		anEvent: 	[(20.0@42.0) mouseDown yellow 153781265 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (570@50)
		owner: 	a TransformWithLayoutMorph(747943168)
		submorphs: 	an Array(a RubPrimarySelectionMorph(911616256) a RubCursor(54518272)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (35760384) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(385559808)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(54518272)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(803363072))
		getMenuPolicy: 	a RubEditingArea(1030726656)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MouseButtonEvent>>sentTo:
	Receiver: [(20.0@42.0) mouseDown yellow 153781265 nil]
	Arguments and temporary variables: 
		anObject: 	a RubEditingArea(1030726656)
	Receiver's instance variables: 
		timeStamp: 	153781265
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(20.0@42.0)
		handler: 	a RubEditingArea(1030726656)
		wasHandled: 	true
		whichButton: 	2


RubEditingArea(Morph)>>handleEvent:
	Receiver: a RubEditingArea(1030726656)
	Arguments and temporary variables: 
		anEvent: 	[(20.0@42.0) mouseDown yellow 153781265 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (570@50)
		owner: 	a TransformWithLayoutMorph(747943168)
		submorphs: 	an Array(a RubPrimarySelectionMorph(911616256) a RubCursor(54518272)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (35760384) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(385559808)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(54518272)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(803363072))
		getMenuPolicy: 	a RubEditingArea(1030726656)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
Error: Unable to resolve WebApp
21 December 2017 4:23:30.332824 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

GoferPackageReference(Object)>>error:
	Receiver: a GoferPackageReference name: 'WebApp'
	Arguments and temporary variables: 
		aString: 	'Unable to resolve WebApp'
	Receiver's instance variables: 
		name: 	'WebApp'


GoferPackageReference(GoferReference)>>resolveWith:
	Receiver: a GoferPackageReference name: 'WebApp'
	Arguments and temporary variables: 
		aGofer: 	a Gofer
		references: 	#()
	Receiver's instance variables: 
		name: 	'WebApp'


[ :each | each resolveWith: self ] in Gofer>>resolved
	Receiver: a Gofer
	Arguments and temporary variables: 
		each: 	a GoferPackageReference name: 'WebApp'
	Receiver's instance variables: 
		references: 	an OrderedCollection(a GoferPackageReference name: 'WebApp')
		repositories: 	an OrderedCollection(a MCSmalltalkhubRepository(http://smalltalkh...etc...
		errorBlock: 	[ :error | error pass ]
		packageCacheRepository: 	a MCCacheRepository(C:\Users\User-PC\Desktop\Facultad\O...etc...
		resolvedReferencesCache: 	a Dictionary(a MCCacheRepository(C:\Users\User-PC\Desk...etc...


Array(SequenceableCollection)>>collect:
	Receiver: an Array(a GoferPackageReference name: 'WebApp')
	Arguments and temporary variables: 
		aBlock: 	[ :each | each resolveWith: self ]
		newCollection: 	#(nil)
		index: 	1
	Receiver's instance variables: 
an Array(a GoferPackageReference name: 'WebApp')

Gofer>>resolved
	Receiver: a Gofer
	Arguments and temporary variables: 

	Receiver's instance variables: 
		references: 	an OrderedCollection(a GoferPackageReference name: 'WebApp')
		repositories: 	an OrderedCollection(a MCSmalltalkhubRepository(http://smalltalkh...etc...
		errorBlock: 	[ :error | error pass ]
		packageCacheRepository: 	a MCCacheRepository(C:\Users\User-PC\Desktop\Facultad\O...etc...
		resolvedReferencesCache: 	a Dictionary(a MCCacheRepository(C:\Users\User-PC\Desk...etc...


GoferLoad>>initializeOn:
	Receiver: a GoferLoad
	Arguments and temporary variables: 
		aGofer: 	a Gofer
	Receiver's instance variables: 
		gofer: 	a Gofer
		model: 	a MCVersionLoader


GoferLoad class(GoferOperation class)>>on:
	Receiver: GoferLoad
	Arguments and temporary variables: 
		aGofer: 	a Gofer
	Receiver's instance variables: 
		superclass: 	GoferOperation
		methodDict: 	a MethodDictionary(#addResolved:->GoferLoad>>#addResolved: #default...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GoferMetacelloLoad. MetacelloGoferLoad}
		name: 	#GoferLoad
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Gofer-Core'
		traitComposition: 	{}
		localSelectors: 	nil


Gofer>>execute:do:
	Receiver: a Gofer
	Arguments and temporary variables: 
		anOperationClass: 	GoferLoad
		aBlock: 	nil
		operation: 	nil
	Receiver's instance variables: 
		references: 	an OrderedCollection(a GoferPackageReference name: 'WebApp')
		repositories: 	an OrderedCollection(a MCSmalltalkhubRepository(http://smalltalkh...etc...
		errorBlock: 	[ :error | error pass ]
		packageCacheRepository: 	a MCCacheRepository(C:\Users\User-PC\Desktop\Facultad\O...etc...
		resolvedReferencesCache: 	nil


Gofer>>execute:
	Receiver: a Gofer
	Arguments and temporary variables: 
		anOperationClass: 	GoferLoad
	Receiver's instance variables: 
		references: 	an OrderedCollection(a GoferPackageReference name: 'WebApp')
		repositories: 	an OrderedCollection(a MCSmalltalkhubRepository(http://smalltalkh...etc...
		errorBlock: 	[ :error | error pass ]
		packageCacheRepository: 	a MCCacheRepository(C:\Users\User-PC\Desktop\Facultad\O...etc...
		resolvedReferencesCache: 	nil


Gofer>>load
	Receiver: a Gofer
	Arguments and temporary variables: 

	Receiver's instance variables: 
		references: 	an OrderedCollection(a GoferPackageReference name: 'WebApp')
		repositories: 	an OrderedCollection(a MCSmalltalkhubRepository(http://smalltalkh...etc...
		errorBlock: 	[ :error | error pass ]
		packageCacheRepository: 	a MCCacheRepository(C:\Users\User-PC\Desktop\Facultad\O...etc...
		resolvedReferencesCache: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'Gofer new
url: ''http://smalltalkhub.com/mc/r14r/MyFirstWebApp...etc...
		itsSelection: 	a Text for 'Gofer new
url: ''http://smalltalkhub.com/mc/r14r/MyFi...etc...
		itsSelectionString: 	'Gofer new
url: ''http://smalltalkhub.com/mc/r14r/MyFirstWe...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	Gofer new
		url: 'http://smalltalkhub.com/mc/r14r/MyFirstWebApp/main...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(723142656)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(723142656)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(975136512)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(723142656)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@164)
		owner: 	a TransformWithLayoutMorph(176795904)
		submorphs: 	an Array(a RubCursor(1037255936) a RubPrimarySelectionMorph(83575500...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (515471872) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(139586304)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(1037255936)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(588599040))
		getMenuPolicy: 	a RubEditingArea(723142656)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(975136512)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (976@665)
		canvas: 	a FormCanvas on: DisplayScreen(976x665x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(200909568))(a FadingMorp...etc...
		lastStepTime: 	3458895
		lastStepMessage: 	nil
		lastCycleTime: 	3458888
		alarms: 	a Heap()
		lastAlarmTime: 	3458866
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (976@665)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a FadingMorph(200909568) a GLMSys...etc...
		fullBounds: 	(0@0) corner: (976@665)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (439636736) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (976@665)
		canvas: 	a FormCanvas on: DisplayScreen(976x665x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(200909568))(a FadingMorp...etc...
		lastStepTime: 	3458895
		lastStepMessage: 	nil
		lastCycleTime: 	3458888
		alarms: 	a Heap()
		lastAlarmTime: 	3458866
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (976@665)
		canvas: 	a FormCanvas on: DisplayScreen(976x665x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(200909568))(a FadingMorp...etc...
		lastStepTime: 	3458895
		lastStepMessage: 	nil
		lastCycleTime: 	3458888
		alarms: 	a Heap()
		lastAlarmTime: 	3458866
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (976@665)
		canvas: 	a FormCanvas on: DisplayScreen(976x665x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(200909568))(a FadingMorp...etc...
		lastStepTime: 	3458895
		lastStepMessage: 	nil
		lastCycleTime: 	3458888
		alarms: 	a Heap()
		lastAlarmTime: 	3458866
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (976@665)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a FadingMorph(200909568) a GLMSys...etc...
		fullBounds: 	(0@0) corner: (976@665)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (439636736) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(629307136)
	Arguments and temporary variables: 
		aPoint: 	(416@282)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(723142656)
	Receiver's instance variables: 
		bounds: 	(414.0@274.0) corner: (621.0@508.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(914477056)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(414.0@274.0) corner: (621.0@508.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (844697088) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(77293824)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(629307136)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(414.0@274.0) corner: (621.0@508.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(914477056)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(414.0@274.0) corner: (621.0@508.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (844697088) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(77293824)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(629307136)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(414.0@274.0) corner: (621.0@508.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(914477056)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(414.0@274.0) corner: (621.0@508.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (844697088) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(77293824)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(723142656)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(629307136)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@164)
		owner: 	a TransformWithLayoutMorph(176795904)
		submorphs: 	an Array(a RubCursor(1037255936) a RubPrimarySelectionMorph(83575500...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (515471872) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(139586304)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(1037255936)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(588599040))
		getMenuPolicy: 	a RubEditingArea(723142656)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(723142656)
	Arguments and temporary variables: 
		evt: 	[(130@85) mouseDown yellow 155053203 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@164)
		owner: 	a TransformWithLayoutMorph(176795904)
		submorphs: 	an Array(a RubCursor(1037255936) a RubPrimarySelectionMorph(83575500...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (515471872) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(139586304)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(1037255936)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(588599040))
		getMenuPolicy: 	a RubEditingArea(723142656)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(723142656)
	Arguments and temporary variables: 
		anEvent: 	[(130@85) mouseDown yellow 155053203 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@164)
		owner: 	a TransformWithLayoutMorph(176795904)
		submorphs: 	an Array(a RubCursor(1037255936) a RubPrimarySelectionMorph(83575500...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (515471872) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(139586304)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(1037255936)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(588599040))
		getMenuPolicy: 	a RubEditingArea(723142656)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MouseButtonEvent>>sentTo:
	Receiver: [(130@85) mouseDown yellow 155053203 nil]
	Arguments and temporary variables: 
		anObject: 	a RubEditingArea(723142656)
	Receiver's instance variables: 
		timeStamp: 	155053203
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(130@85)
		handler: 	a RubEditingArea(723142656)
		wasHandled: 	true
		whichButton: 	2


RubEditingArea(Morph)>>handleEvent:
	Receiver: a RubEditingArea(723142656)
	Arguments and temporary variables: 
		anEvent: 	[(130@85) mouseDown yellow 155053203 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@164)
		owner: 	a TransformWithLayoutMorph(176795904)
		submorphs: 	an Array(a RubCursor(1037255936) a RubPrimarySelectionMorph(83575500...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (515471872) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(139586304)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(1037255936)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(588599040))
		getMenuPolicy: 	a RubEditingArea(723142656)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(130@85) mouseDown yellow 155053203 nil]
		aMorph: 	a RubEditingArea(723142656)
		globalPt: 	(130@85)
		localEvt: 	[(130@85) mouseDown yellow 155053203 nil]
		index: 	3
		child: 	a RubPrimarySelectionMorph(835755008)
		morphs: 	an Array(a RubCursor(1037255936) a RubPrimarySelectionMorph(835755008))...etc...
		handler: 	a RubEditingArea(723142656)
		inside: 	false
		lastHandler: 	a RubScrolledTextMorph(975136512)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(130@85) mouseDown yellow 155053203 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(130@85) mouseDown yellow 155053203 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	155053203
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(130@85)
		handler: 	a RubEditingArea(723142656)
		wasHandled: 	true
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(130@85) mouseDown yellow 155053203 nil]
		aMorph: 	a RubEditingArea(723142656)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(130@85) mouseDown yellow 155053203 nil]
		aMorph: 	a RubEditingArea(723142656)
	Receiver's instance variables: 
		morph: 	nil


RubEditingArea(Morph)>>processEvent:using:
	Receiver: a RubEditingArea(723142656)
	Arguments and temporary variables: 
		anEvent: 	[(130@85) mouseDown yellow 155053203 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@164)
		owner: 	a TransformWithLayoutMorph(176795904)
		submorphs: 	an Array(a RubCursor(1037255936) a RubPrimarySelectionMorph(83575500...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (515471872) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(139586304)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(1037255936)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(588599040))
		getMenuPolicy: 	a RubEditingArea(723142656)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(416@282) mouseDown yellow 155053203 nil]
		aMorph: 	a TransformWithLayoutMorph(176795904)
		globalPt: 	(416@282)
		localEvt: 	[(130@85) mouseDown yellow 155053203 nil]
		index: 	1
		child: 	a RubEditingArea(723142656)
		morphs: 	an Array(a RubEditingArea(723142656))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(975136512)
	Receiver's instance variables: 
		morph: 	nil



--- The full stack ---
GoferPackageReference(Object)>>error:
GoferPackageReference(GoferReference)>>resolveWith:
[ :each | each resolveWith: self ] in Gofer>>resolved
Array(SequenceableCollection)>>collect:
Gofer>>resolved
GoferLoad>>initializeOn:
GoferLoad class(GoferOperation class)>>on:
Gofer>>execute:do:
Gofer>>execute:
Gofer>>load
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldState>>doOneSubCycleFor:
WorldMorph>>doOneSubCycle
MenuMorph>>invokeModalAt:in:allowKeyboard:
MenuMorph>>invokeModal:
MenuMorph>>invoTHERE_BE_DRAGONS_HERE
Error: Unable to resolve WebApp
21 December 2017 4:24:18.434824 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

GoferPackageReference(Object)>>error:
	Receiver: a GoferPackageReference name: 'WebApp'
	Arguments and temporary variables: 
		aString: 	'Unable to resolve WebApp'
	Receiver's instance variables: 
		name: 	'WebApp'


GoferPackageReference(GoferReference)>>resolveWith:
	Receiver: a GoferPackageReference name: 'WebApp'
	Arguments and temporary variables: 
		aGofer: 	a Gofer
		references: 	#()
	Receiver's instance variables: 
		name: 	'WebApp'


[ :each | each resolveWith: self ] in Gofer>>resolved
	Receiver: a Gofer
	Arguments and temporary variables: 
		each: 	a GoferPackageReference name: 'WebApp'
	Receiver's instance variables: 
		references: 	an OrderedCollection(a GoferPackageReference name: 'WebApp')
		repositories: 	an OrderedCollection(a MCSmalltalkhubRepository(http://smalltalkh...etc...
		errorBlock: 	[ :error | error pass ]
		packageCacheRepository: 	a MCCacheRepository(C:\Users\User-PC\Desktop\Facultad\O...etc...
		resolvedReferencesCache: 	a Dictionary(a MCCacheRepository(C:\Users\User-PC\Desk...etc...


Array(SequenceableCollection)>>collect:
	Receiver: an Array(a GoferPackageReference name: 'WebApp')
	Arguments and temporary variables: 
		aBlock: 	[ :each | each resolveWith: self ]
		newCollection: 	#(nil)
		index: 	1
	Receiver's instance variables: 
an Array(a GoferPackageReference name: 'WebApp')

Gofer>>resolved
	Receiver: a Gofer
	Arguments and temporary variables: 

	Receiver's instance variables: 
		references: 	an OrderedCollection(a GoferPackageReference name: 'WebApp')
		repositories: 	an OrderedCollection(a MCSmalltalkhubRepository(http://smalltalkh...etc...
		errorBlock: 	[ :error | error pass ]
		packageCacheRepository: 	a MCCacheRepository(C:\Users\User-PC\Desktop\Facultad\O...etc...
		resolvedReferencesCache: 	a Dictionary(a MCCacheRepository(C:\Users\User-PC\Desk...etc...


GoferLoad>>initializeOn:
	Receiver: a GoferLoad
	Arguments and temporary variables: 
		aGofer: 	a Gofer
	Receiver's instance variables: 
		gofer: 	a Gofer
		model: 	a MCVersionLoader


GoferLoad class(GoferOperation class)>>on:
	Receiver: GoferLoad
	Arguments and temporary variables: 
		aGofer: 	a Gofer
	Receiver's instance variables: 
		superclass: 	GoferOperation
		methodDict: 	a MethodDictionary(#addResolved:->GoferLoad>>#addResolved: #default...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GoferMetacelloLoad. MetacelloGoferLoad}
		name: 	#GoferLoad
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Gofer-Core'
		traitComposition: 	{}
		localSelectors: 	nil


Gofer>>execute:do:
	Receiver: a Gofer
	Arguments and temporary variables: 
		anOperationClass: 	GoferLoad
		aBlock: 	nil
		operation: 	nil
	Receiver's instance variables: 
		references: 	an OrderedCollection(a GoferPackageReference name: 'WebApp')
		repositories: 	an OrderedCollection(a MCSmalltalkhubRepository(http://smalltalkh...etc...
		errorBlock: 	[ :error | error pass ]
		packageCacheRepository: 	a MCCacheRepository(C:\Users\User-PC\Desktop\Facultad\O...etc...
		resolvedReferencesCache: 	nil


Gofer>>execute:
	Receiver: a Gofer
	Arguments and temporary variables: 
		anOperationClass: 	GoferLoad
	Receiver's instance variables: 
		references: 	an OrderedCollection(a GoferPackageReference name: 'WebApp')
		repositories: 	an OrderedCollection(a MCSmalltalkhubRepository(http://smalltalkh...etc...
		errorBlock: 	[ :error | error pass ]
		packageCacheRepository: 	a MCCacheRepository(C:\Users\User-PC\Desktop\Facultad\O...etc...
		resolvedReferencesCache: 	nil


Gofer>>load
	Receiver: a Gofer
	Arguments and temporary variables: 

	Receiver's instance variables: 
		references: 	an OrderedCollection(a GoferPackageReference name: 'WebApp')
		repositories: 	an OrderedCollection(a MCSmalltalkhubRepository(http://smalltalkh...etc...
		errorBlock: 	[ :error | error pass ]
		packageCacheRepository: 	a MCCacheRepository(C:\Users\User-PC\Desktop\Facultad\O...etc...
		resolvedReferencesCache: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'Gofer new
url: ''http://smalltalkhub.com/mc/r14r/MyFirstWebApp...etc...
		itsSelection: 	a Text for 'Gofer new
url: ''http://smalltalkhub.com/mc/r14r/MyFi...etc...
		itsSelectionString: 	'Gofer new
url: ''http://smalltalkhub.com/mc/r14r/MyFirstWe...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	Gofer new
		url: 'http://smalltalkhub.com/mc/r14r/MyFirstWebApp/main...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(723142656)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(723142656)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(975136512)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(723142656)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@164)
		owner: 	a TransformWithLayoutMorph(176795904)
		submorphs: 	an Array(a RubPrimarySelectionMorph(73152256) a RubCursor(1037255936...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (515471872) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(139586304)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(1037255936)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(645308928))
		getMenuPolicy: 	a RubEditingArea(723142656)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(975136512)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (976@665)
		canvas: 	a FormCanvas on: DisplayScreen(976x665x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	3463085
		lastStepMessage: 	nil
		lastCycleTime: 	3507495
		alarms: 	a Heap()
		lastAlarmTime: 	3507473
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (976@665)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(652413696) an I...etc...
		fullBounds: 	(0@0) corner: (976@665)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (439636736) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (976@665)
		canvas: 	a FormCanvas on: DisplayScreen(976x665x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	3463085
		lastStepMessage: 	nil
		lastCycleTime: 	3507495
		alarms: 	a Heap()
		lastAlarmTime: 	3507473
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (976@665)
		canvas: 	a FormCanvas on: DisplayScreen(976x665x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	3463085
		lastStepMessage: 	nil
		lastCycleTime: 	3507495
		alarms: 	a Heap()
		lastAlarmTime: 	3507473
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (976@665)
		canvas: 	a FormCanvas on: DisplayScreen(976x665x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	3463085
		lastStepMessage: 	nil
		lastCycleTime: 	3507495
		alarms: 	a Heap()
		lastAlarmTime: 	3507473
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (976@665)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(652413696) an I...etc...
		fullBounds: 	(0@0) corner: (976@665)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (439636736) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(183523584)
	Arguments and temporary variables: 
		aPoint: 	(252@318)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(723142656)
	Receiver's instance variables: 
		bounds: 	(250.0@310.0) corner: (457.0@544.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(69702144)'Do it and go' a ToggleMenuI...etc...
		fullBounds: 	(250.0@310.0) corner: (457.0@544.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (916612864) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(33486592)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(183523584)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(250.0@310.0) corner: (457.0@544.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(69702144)'Do it and go' a ToggleMenuI...etc...
		fullBounds: 	(250.0@310.0) corner: (457.0@544.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (916612864) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(33486592)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(183523584)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(250.0@310.0) corner: (457.0@544.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(69702144)'Do it and go' a ToggleMenuI...etc...
		fullBounds: 	(250.0@310.0) corner: (457.0@544.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (916612864) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(33486592)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(723142656)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(183523584)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@164)
		owner: 	a TransformWithLayoutMorph(176795904)
		submorphs: 	an Array(a RubPrimarySelectionMorph(73152256) a RubCursor(1037255936...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (515471872) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(139586304)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(1037255936)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(645308928))
		getMenuPolicy: 	a RubEditingArea(723142656)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(723142656)
	Arguments and temporary variables: 
		evt: 	[(165.0@99.0) mouseDown yellow 155100890 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@164)
		owner: 	a TransformWithLayoutMorph(176795904)
		submorphs: 	an Array(a RubPrimarySelectionMorph(73152256) a RubCursor(1037255936...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (515471872) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(139586304)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(1037255936)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(645308928))
		getMenuPolicy: 	a RubEditingArea(723142656)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(723142656)
	Arguments and temporary variables: 
		anEvent: 	[(165.0@99.0) mouseDown yellow 155100890 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@164)
		owner: 	a TransformWithLayoutMorph(176795904)
		submorphs: 	an Array(a RubPrimarySelectionMorph(73152256) a RubCursor(1037255936...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (515471872) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(139586304)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(1037255936)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(645308928))
		getMenuPolicy: 	a RubEditingArea(723142656)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MouseButtonEvent>>sentTo:
	Receiver: [(165.0@99.0) mouseDown yellow 155100890 nil]
	Arguments and temporary variables: 
		anObject: 	a RubEditingArea(723142656)
	Receiver's instance variables: 
		timeStamp: 	155100890
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(165.0@99.0)
		handler: 	a RubEditingArea(723142656)
		wasHandled: 	true
		whichButton: 	2


RubEditingArea(Morph)>>handleEvent:
	Receiver: a RubEditingArea(723142656)
	Arguments and temporary variables: 
		anEvent: 	[(165.0@99.0) mouseDown yellow 155100890 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@164)
		owner: 	a TransformWithLayoutMorph(176795904)
		submorphs: 	an Array(a RubPrimarySelectionMorph(73152256) a RubCursor(1037255936...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (515471872) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(139586304)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(1037255936)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(645308928))
		getMenuPolicy: 	a RubEditingArea(723142656)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(165.0@99.0) mouseDown yellow 155100890 nil]
		aMorph: 	a RubEditingArea(723142656)
		globalPt: 	(165.0@99.0)
		localEvt: 	[(165.0@99.0) mouseDown yellow 155100890 nil]
		index: 	3
		child: 	a RubPrimarySelectionMorph(73152256)
		morphs: 	an Array(a RubPrimarySelectionMorph(73152256) a RubCursor(1037255936))
		handler: 	a RubEditingArea(723142656)
		inside: 	false
		lastHandler: 	a RubScrolledTextMorph(975136512)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(165.0@99.0) mouseDown yellow 155100890 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(165.0@99.0) mouseDown yellow 155100890 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	155100890
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(165.0@99.0)
		handler: 	a RubEditingArea(723142656)
		wasHandled: 	true
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(165.0@99.0) mouseDown yellow 155100890 nil]
		aMorph: 	a RubEditingArea(723142656)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(165.0@99.0) mouseDown yellow 155100890 nil]
		aMorph: 	a RubEditingArea(723142656)
	Receiver's instance variables: 
		morph: 	nil


RubEditingArea(Morph)>>processEvent:using:
	Receiver: a RubEditingArea(723142656)
	Arguments and temporary variables: 
		anEvent: 	[(165.0@99.0) mouseDown yellow 155100890 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (580@164)
		owner: 	a TransformWithLayoutMorph(176795904)
		submorphs: 	an Array(a RubPrimarySelectionMorph(73152256) a RubCursor(1037255936...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (515471872) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(139586304)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(1037255936)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(645308928))
		getMenuPolicy: 	a RubEditingArea(723142656)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(252@318) mouseDown yellow 155100890 nil]
		aMorph: 	a TransformWithLayoutMorph(176795904)
		globalPt: 	(252@318)
		localEvt: 	[(165.0@99.0) mouseDown yellow 155100890 nil]
		index: 	1
		child: 	a RubEditingArea(723142656)
		morphs: 	an Array(a RubEditingArea(723142656))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(975136512)
	Receiver's instance variables: 
		morph: 	nil



--- The full stack ---
GoferPackageReference(Object)>>error:
GoferPackageReference(GoferReference)>>resolveWith:
[ :each | each resolveWith: self ] in Gofer>>resolved
Array(SequenceableCollection)>>collect:
Gofer>>resolved
GoferLoad>>initializeOn:
GoferLoad class(GoferOperation class)>>on:
Gofer>>execute:do:
Gofer>>execute:
Gofer>>load
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldState>>doOneSubCycleFor:
WorldMorph>>doOneSubCycle
MenuMorph>>invokeModalAt:in:allowKeyboard:
MenuMorph>>invokeModal:
MenuMorph>>invokeModal
RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
RubEditingArea(RubAbstractTextArea)>>mouseDown:
RubEditingArea(Morph)>>handleMouseDown:
MouseButtonEvent>>sentTo:
RubEditingArea(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubEditingArea(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
TransformWithLayoutMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubTextScrollPane(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubScrolledTextMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
LazyTabGroupMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMMorphBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:THERE_BE_DRAGONS_HERETHERE_BE_DRAGONS_HERE
Instance of Counter class did not understand #a
23 December 2017 4:34:47.223318 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

Counter class(Object)>>doesNotUnderstand: #a
	Receiver: Counter
	Arguments and temporary variables: 
		aMessage: 	a
		exception: 	MessageNotUnderstood: Counter class>>a
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#add:->Counter>>#add: )
		format: 	65537
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Counter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-User-Examples'
		traitComposition: 	{}
		localSelectors: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'Counter a new.'
		itsSelection: 	a Text for 'Counter a new.'
		itsSelectionString: 	'Counter a new.'
	Receiver's instance variables: 
		ast: 	DoIt
	^ Counter a new
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(29300992)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(29300992)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(475828992)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(29300992)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@31)
		owner: 	a TransformWithLayoutMorph(691781888)
		submorphs: 	an Array(a RubPrimarySelectionMorph(742586624) a RubCursor(439740160...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (151659264) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(138278656)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(439740160)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(948439296))
		getMenuPolicy: 	a RubEditingArea(29300992)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(475828992)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(741632))(a FadingMorph(7...etc...
		lastStepTime: 	1682813
		lastStepMessage: 	nil
		lastCycleTime: 	1682835
		alarms: 	a Heap()
		lastAlarmTime: 	1682813
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a FadingMorph(741632) a GLMSystem...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(741632))(a FadingMorph(7...etc...
		lastStepTime: 	1682813
		lastStepMessage: 	nil
		lastCycleTime: 	1682835
		alarms: 	a Heap()
		lastAlarmTime: 	1682813
		menuBuildTHERE_BE_DRAGONS_HERE
#+ was sent to nil
23 December 2017 4:35:27.050318 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

UndefinedObject(Object)>>doesNotUnderstand: #+
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	+ 5
		exception: 	MessageNotUnderstood: receiver of "+" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

Counter>>add:
	Receiver: a Counter
	Arguments and temporary variables: 
		cantidad: 	5
	Receiver's instance variables: 
		count: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'a add:5.'
		itsSelection: 	a Text for 'a add:5.'
		itsSelectionString: 	'a add:5.'
	Receiver's instance variables: 
		ast: 	DoIt
	^ a add: 5
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(29300992)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(29300992)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(475828992)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(29300992)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(691781888)
		submorphs: 	an Array(a RubPrimarySelectionMorph(333233920) a RubCursor(439740160...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (151659264) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(138278656)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(439740160)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(852814080))
		getMenuPolicy: 	a RubEditingArea(29300992)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(475828992)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(673368320))(a SearchMorp...etc...
		lastStepTime: 	1722687
		lastStepMessage: 	nil
		lastCycleTime: 	1722710
		alarms: 	a Heap()
		lastAlarmTime: 	1722687
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a FadingMorph(940913408) a GLMSys...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(673368320))(a SearchMorp...etc...
		lastStepTime: 	1722687
		lastStepMessage: 	nil
		lastCycleTime: 	1722710
		alarms: 	a Heap()
		lastAlarmTime: 	1722687
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(673368320))(a SearchMorp...etc...
		lastStepTime: 	1722687
		lastStepMessage: 	nil
		lastCycleTime: 	1722710
		alarms: 	a Heap()
		lastAlarmTime: 	1722687
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(673368320))(a SearchMorp...etc...
		lastStepTime: 	1722687
		lastStepMessage: 	nil
		lastCycleTime: 	1722710
		alarms: 	a Heap()
		lastAlarmTime: 	1722687
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a FadingMorph(940913408) a GLMSys...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(669107456)
	Arguments and temporary variables: 
		aPoint: 	(619@354)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(29300992)
	Receiver's instance variables: 
		bounds: 	(617.0@346.0) corner: (824.0@580.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(989057792)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(617.0@346.0) corner: (824.0@580.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (627385600) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(497670400)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(669107456)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(617.0@346.0) corner: (824.0@580.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(989057792)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(617.0@346.0) corner: (824.0@580.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (627385600) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(497670400)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(669107456)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(617.0@346.0) corner: (824.0@580.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(989057792)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(617.0@346.0) corner: (824.0@580.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (627385600) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(497670400)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(29300992)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(669107456)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(691781888)
		submorphs: 	an Array(a RubPrimarySelectionMorph(333233920) a RubCursor(439740160...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (151659264) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(138278656)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(439740160)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(852814080))
		getMenuPolicy: 	a RubEditingArea(29300992)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(29300992)
	Arguments and temporary variables: 
		evt: 	[(56.0@40.0) mouseDown yellow 285372828 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(691781888)
		submorphs: 	an Array(a RubPrimarySelectionMorph(333233920) a RubCursor(439740160...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (151659264) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(138278656)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(439740160)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(852814080))
		getMenuPolicy: 	a RubEditingArea(29300992)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(29300992)
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
#new was sent to nil
23 December 2017 4:41:40.883318 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

UndefinedObject(Object)>>doesNotUnderstand: #new
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	new
		exception: 	MessageNotUnderstood: receiver of "new" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'cont := Count new.'
		itsSelection: 	a Text for 'cont := Count new.'
		itsSelectionString: 	'cont := Count new.'
	Receiver's instance variables: 
		ast: 	DoIt
	^ cont := Count new
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(801348352)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | 
textMorph shoutStyler style: textMorph text.
GLMPrintPoppe...etc...
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(801348352)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 

	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(386355456)
		textModel: 	a GLMRubricSmalltalkTextModel


MorphicAlarm(MessageSend)>>value
	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		receiver: 	a GLMMorphicPharoScriptRenderer
		selector: 	#popupPrint
		arguments: 	#()
		scheduledTime: 	2096509
		numArgs: 	0


MorphicAlarm>>value:
	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)
	Arguments and temporary variables: 
		anArgument: 	2096511
		nArgs: 	0
	Receiver's instance variables: 
		receiver: 	a GLMMorphicPharoScriptRenderer
		selector: 	#popupPrint
		arguments: 	#()
		scheduledTime: 	2096509
		numArgs: 	0


WorldState>>triggerAlarmsBefore:
	Receiver: a WorldState
	Arguments and temporary variables: 
		nowTime: 	2096511
		pending: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(83827456)))
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(142544640))(a FadingMorp...etc...
		lastStepTime: 	2096508
		lastStepMessage: 	nil
		lastCycleTime: 	2096511
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(83827456)))
		lastAlarmTime: 	2096508
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>runLocalStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		now: 	2096511
		morphToStep: 	nil
		stepTime: 	nil
		priorWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(142544640))(a FadingMorp...etc...
		lastStepTime: 	2096508
		lastStepMessage: 	nil
		lastCycleTime: 	2096511
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(83827456)))
		lastAlarmTime: 	2096508
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	nil
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(142544640))(a FadingMorp...etc...
		lastStepTime: 	2096508
		lastStepMessage: 	nil
		lastCycleTime: 	2096511
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(83827456)))
		lastAlarmTime: 	2096508
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a FadingMorph(142544640) a GLMSys...etc...
		fullBounds: 	(0@0) corner: (1264@721)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(142544640))(a FadingMorp...etc...
		lastStepTime: 	2096508
		lastStepMessage: 	nil
		lastCycleTime: 	2096511
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(83827456)))
		lastAlarmTime: 	2096508
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(142544640))(a FadingMorp...etc...
		lastStepTime: 	2096508
		lastStepMessage: 	nil
		lastCycleTime: 	2096511
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(83827456)))
		lastAlarmTime: 	2096508
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a FadingMorph(142544640) a GLMSys...etc...
		fullBounds: 	(0@0) corner: (1264@721)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65549
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#ExtraWorldList->#() )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #new
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint
MorphicAlarm(MessageSend)>>value
MorphicAlarm>>value:
WorldState>>triggerAlarmsBefore:
WorldState>>runLocalStepMethodsIn:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphTHERE_BE_DRAGONS_HERE
#+ was sent to nil
23 December 2017 4:42:16.039318 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

UndefinedObject(Object)>>doesNotUnderstand: #+
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	+ 5
		exception: 	MessageNotUnderstood: receiver of "+" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

Counter>>contador:
	Receiver: a Counter
	Arguments and temporary variables: 
		unValor: 	5
	Receiver's instance variables: 
		count: 	nil
		contador: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'cont contador: 5'
		itsSelection: 	a Text for 'cont contador: 5'
		itsSelectionString: 	'cont contador: 5'
	Receiver's instance variables: 
		ast: 	DoIt
	^ cont contador: 5
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(801348352)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(801348352)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(386355456)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(945779456))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(386355456)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(673368320))(a SearchMorp...etc...
		lastStepTime: 	2131678
		lastStepMessage: 	nil
		lastCycleTime: 	2131700
		alarms: 	a Heap()
		lastAlarmTime: 	2131678
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(700845824) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(673368320))(a SearchMorp...etc...
		lastStepTime: 	2131678
		lastStepMessage: 	nil
		lastCycleTime: 	2131700
		alarms: 	a Heap()
		lastAlarmTime: 	2131678
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(673368320))(a SearchMorp...etc...
		lastStepTime: 	2131678
		lastStepMessage: 	nil
		lastCycleTime: 	2131700
		alarms: 	a Heap()
		lastAlarmTime: 	2131678
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(673368320))(a SearchMorp...etc...
		lastStepTime: 	2131678
		lastStepMessage: 	nil
		lastCycleTime: 	2131700
		alarms: 	a Heap()
		lastAlarmTime: 	2131678
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(700845824) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(249764608)
	Arguments and temporary variables: 
		aPoint: 	(338@235)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		bounds: 	(336.0@227.0) corner: (543.0@461.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(90045696)'Do it and go' a ToggleMenuI...etc...
		fullBounds: 	(336.0@227.0) corner: (543.0@461.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (41892096) [other:  (basicColor -> Color veryDarkGr...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(499547392)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(249764608)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(336.0@227.0) corner: (543.0@461.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(90045696)'Do it and go' a ToggleMenuI...etc...
		fullBounds: 	(336.0@227.0) corner: (543.0@461.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (41892096) [other:  (basicColor -> Color veryDarkGr...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(499547392)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(249764608)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(336.0@227.0) corner: (543.0@461.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(90045696)'Do it and go' a ToggleMenuI...etc...
		fullBounds: 	(336.0@227.0) corner: (543.0@461.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (41892096) [other:  (basicColor -> Color veryDarkGr...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(499547392)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(249764608)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(945779456))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		evt: 	[(54@38) mouseDown yellow 285781890 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(945779456))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		anEvent: 	[(54@38) mouseDown yellow 285781890 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(945779456))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MouseButtonEvent>>sentTo:
	Receiver: [(54@38) mouseDown yellow 285781890 nil]
	Arguments and temporary variables: 
		anObject: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		timeStamp: 	285781890
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(54@38)
		handler: 	a RubEditingArea(801348352)
		wasHandled: 	true
		whichButton: 	2


RubEditingArea(Morph)>>handleEvent:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		anEvent: 	[(54@38) mouseDown yellow 285781890 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(945779456))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(54@38) mouseDown yellow 285781890 nil]
		aMorph: 	a RubEditingArea(801348352)
		globalPt: 	(54@38)
		localEvt: 	[(54@38) mouseDown yellow 285781890 nil]
		index: 	3
		child: 	a RubPrimarySelectionMorph(583179008)
		morphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456))
		handler: 	a RubEditingArea(801348352)
		inside: 	false
		lastHandler: 	a RubScrolledTextMorph(386355456)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(54@38) mouseDown yellow 285781890 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(54@38) mouseDown yellow 285781890 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	285781890
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(54@38)
		handler: 	a RubEditingArea(801348352)
		wasHandled: 	true
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(54@38) mouseDown yellow 285781890 nil]
		aMorph: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(54@38) mouseDown yellow 285781890 nil]
		aMorph: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		morph: 	nil


RubEditingArea(Morph)>>processEvent:using:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
#+ was sent to nil
23 December 2017 4:42:20.599318 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

UndefinedObject(Object)>>doesNotUnderstand: #+
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	+ 5
		exception: 	MessageNotUnderstood: receiver of "+" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

Message>>sentTo:
	Receiver: + 5
	Arguments and temporary variables: 
		receiver: 	nil
	Receiver's instance variables: 
		selector: 	#+
		args: 	#(5)
		lookupClass: 	UndefinedObject


UndefinedObject(Object)>>doesNotUnderstand: #+
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	+ 5
		exception: 	MessageNotUnderstood: receiver of "+" is nil
		resumeValue: 	MessageNotUnderstood: receiver of "+" is nil
	Receiver's instance variables: 
nil

Counter>>contador:
	Receiver: a Counter
	Arguments and temporary variables: 
		unValor: 	5
	Receiver's instance variables: 
		count: 	nil
		contador: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'cont contador: 5'
		itsSelection: 	a Text for 'cont contador: 5'
		itsSelectionString: 	'cont contador: 5'
	Receiver's instance variables: 
		ast: 	DoIt
	^ cont contador: 5
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(801348352)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(801348352)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(386355456)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	(0@0) corner: (652@50)
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(945779456))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(386355456)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(673368320))(a SearchMorp...etc...
		lastStepTime: 	2136246
		lastStepMessage: 	nil
		lastCycleTime: 	2136268
		alarms: 	a Heap()
		lastAlarmTime: 	2136246
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(700845824) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(673368320))(a SearchMorp...etc...
		lastStepTime: 	2136246
		lastStepMessage: 	nil
		lastCycleTime: 	2136268
		alarms: 	a Heap()
		lastAlarmTime: 	2136246
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(673368320))(a SearchMorp...etc...
		lastStepTime: 	2136246
		lastStepMessage: 	nil
		lastCycleTime: 	2136268
		alarms: 	a Heap()
		lastAlarmTime: 	2136246
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(673368320))(a SearchMorp...etc...
		lastStepTime: 	2136246
		lastStepMessage: 	nil
		lastCycleTime: 	2136268
		alarms: 	a Heap()
		lastAlarmTime: 	2136246
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(700845824) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(249764608)
	Arguments and temporary variables: 
		aPoint: 	(338@235)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		bounds: 	(336.0@227.0) corner: (543.0@461.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(90045696)'Do it and go' a ToggleMenuI...etc...
		fullBounds: 	(336.0@227.0) corner: (543.0@461.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (41892096) [other:  (basicColor -> Color veryDarkGr...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(499547392)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(249764608)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(336.0@227.0) corner: (543.0@461.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(90045696)'Do it and go' a ToggleMenuI...etc...
		fullBounds: 	(336.0@227.0) corner: (543.0@461.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (41892096) [other:  (basicColor -> Color veryDarkGr...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(499547392)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(249764608)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(336.0@227.0) corner: (543.0@461.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(90045696)'Do it and go' a ToggleMenuI...etc...
		fullBounds: 	(336.0@227.0) corner: (543.0@461.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (41892096) [other:  (basicColor -> Color veryDarkGr...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(499547392)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(249764608)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	(0@0) corner: (652@50)
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(945779456))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		evt: 	[(54@38) mouseDown yellow 285781890 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	(0@0) corner: (652@50)
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(945779456))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		anEvent: 	[(54@38) mouseDown yellow 285781890 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	(0@0) corner: (652@50)
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(945779456))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MouseButtonEvent>>sentTo:
	Receiver: [(54@38) mouseDown yellow 285781890 nil]
	Arguments and temporary variables: 
		anObject: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		timeStamp: 	285781890
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(54@38)
		handler: 	a RubEditingArea(801348352)
		wasHandled: 	true
		whichButton: 	2


RubEditingArea(Morph)>>handleEvent:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		anEvent: 	[(54@38) mouseDown yellow 285781890 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	(0@0) corner: (652@50)
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(945779456))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(54@38) mouseDown yellow 285781890 nil]
		aMorph: 	a RubEditingArea(801348352)
		globalPt: 	(54@38)
		localEvt: 	[(54@38) mouseDown yellow 285781890 nil]
		index: 	3
		child: 	a RubPrimarySelectionMorph(583179008)
		morphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456))
		handler: 	a RubEditingArea(801348352)
		inside: 	false
		lastHandler: 	a RubScrolledTextMorph(386355456)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(54@38) mouseDown yellow 285781890 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(54@38) mouseDown yellow 285781890 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	285781890
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(54@38)
		handler: 	a RubEditingArea(801348352)
		wasHandled: 	true
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(54@38) mouseDown yellow 285781890 nil]
		aMorph: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(54@38) mouseDown yellow 285781890 nil]
		aMorph: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		morph: 	nil


RubEditingArea(Morph)>>processEvent:using:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		anEvent: 	[(54@38) mouseDown yellow 285781890 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	(0@0) corner: (652@50)
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(945779456))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(338@235) mouseDown yellow 285781890 nil]
		aMorph: 	a TransformWithLayoutMorph(318322432)
		globalPt: 	(338@235)
		localEvt: 	[(54@38) mouseDown yellow 285781890 nil]
		index: 	1
		child: 	a RubEditingArea(801348352)
		morphs: 	an Array(a RubEditingArea(801348352))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(386355456)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(338@235) mouseDown yellow 285781890 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(338@235) mouseDown yellow 285781890 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	285781890
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(338@235)
		handler: 	a RubScrolledTextMorph(386355456)
		wasHandled: 	false
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(338@235) mouseDown yellow 285781890 nil]
		aMorph: 	a TransformWithLayoutMorph(318322432)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(338@235) mouseDown yellow 285781890 nil]
		aMorph: 	a TransformWithLayoutMorph(318322432)
	Receiver's instance variables: 
		morph: 	nil


TransformWithLayoutMorph(Morph)>>processEvent:using:
	Receiver: a TransformWithLayoutMorph(318322432)
	Arguments and temporary variables: 
		anEvent: 	[(338@235) mouseDown yellow 285781890 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(284@197) corner: (936@532)
		owner: 	a RubTextScrollPane(298053888)
		submorphs: 	an Array(a RubEditingArea(801348352))
		fullBounds: 	(284@197) corner: (936@532)
		color: 	Color transparent
		extension: 	a MorphExtension (763954944) [other:  (kmDispatcher -> a KMDispatche...etc...
		transform: 	a MorphicTransform(angle = 0.0; scale = 1.0; offset = (-284@ -197))
		smoothing: 	1
		localBounds: 	nil



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #+
Message>>sentTo:
UndefinedObject(Object)>>doesNotUnderstand: #+
Counter>>contador:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldState>>doOneSubCycleFor:
WorldMorph>>doOneSubCycle
MenuMorph>>invokeModalAt:in:allowKeyboard:
MenuMorph>>invokeModal:
MenuMorph>>invokeModal
RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
RubEditingArea(RubAbstractTextArea)>>mouseDown:
RubEditingArea(Morph)>>handleMouseDown:
MouseButtonEvent>>sentTo:
RubEditingArea(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubEditingArea(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
TransformWithLayoutMorph(Morph)>>processEvent:using:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensuTHERE_BE_DRAGONS_HERE
#+ was sent to nil
23 December 2017 4:42:22.110318 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

UndefinedObject(Object)>>doesNotUnderstand: #+
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	+ 5
		exception: 	MessageNotUnderstood: receiver of "+" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

Message>>sentTo:
	Receiver: + 5
	Arguments and temporary variables: 
		receiver: 	nil
	Receiver's instance variables: 
		selector: 	#+
		args: 	#(5)
		lookupClass: 	UndefinedObject


UndefinedObject(Object)>>doesNotUnderstand: #+
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	+ 5
		exception: 	MessageNotUnderstood: receiver of "+" is nil
		resumeValue: 	MessageNotUnderstood: receiver of "+" is nil
	Receiver's instance variables: 
nil

Message>>sentTo:
	Receiver: + 5
	Arguments and temporary variables: 
		receiver: 	nil
	Receiver's instance variables: 
		selector: 	#+
		args: 	#(5)
		lookupClass: 	UndefinedObject


UndefinedObject(Object)>>doesNotUnderstand: #+
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	+ 5
		exception: 	MessageNotUnderstood: receiver of "+" is nil
		resumeValue: 	MessageNotUnderstood: receiver of "+" is nil
	Receiver's instance variables: 
nil

Counter>>contador:
	Receiver: a Counter
	Arguments and temporary variables: 
		unValor: 	5
	Receiver's instance variables: 
		count: 	nil
		contador: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'cont contador: 5'
		itsSelection: 	a Text for 'cont contador: 5'
		itsSelectionString: 	'cont contador: 5'
	Receiver's instance variables: 
		ast: 	DoIt
	^ cont contador: 5
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(801348352)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(801348352)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(386355456)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	(0@0) corner: (652@50)
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(945779456))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(386355456)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(607189760))(a DropList...etc...
		lastStepTime: 	2137757
		lastStepMessage: 	nil
		lastCycleTime: 	2137779
		alarms: 	a Heap()
		lastAlarmTime: 	2137757
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(700845824) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(607189760))(a DropList...etc...
		lastStepTime: 	2137757
		lastStepMessage: 	nil
		lastCycleTime: 	2137779
		alarms: 	a Heap()
		lastAlarmTime: 	2137757
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(607189760))(a DropList...etc...
		lastStepTime: 	2137757
		lastStepMessage: 	nil
		lastCycleTime: 	2137779
		alarms: 	a Heap()
		lastAlarmTime: 	2137757
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(607189760))(a DropList...etc...
		lastStepTime: 	2137757
		lastStepMessage: 	nil
		lastCycleTime: 	2137779
		alarms: 	a Heap()
		lastAlarmTime: 	2137757
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(700845824) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(249764608)
	Arguments and temporary variables: 
		aPoint: 	(338@235)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		bounds: 	(336.0@227.0) corner: (543.0@461.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(90045696)'Do it and go' a ToggleMenuI...etc...
		fullBounds: 	(336.0@227.0) corner: (543.0@461.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (41892096) [other:  (basicColor -> Color veryDarkGr...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(499547392)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(249764608)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(336.0@227.0) corner: (543.0@461.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(90045696)'Do it and go' a ToggleMenuI...etc...
		fullBounds: 	(336.0@227.0) corner: (543.0@461.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (41892096) [other:  (basicColor -> Color veryDarkGr...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(499547392)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(249764608)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(336.0@227.0) corner: (543.0@461.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(90045696)'Do it and go' a ToggleMenuI...etc...
		fullBounds: 	(336.0@227.0) corner: (543.0@461.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (41892096) [other:  (basicColor -> Color veryDarkGr...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(499547392)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(249764608)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	(0@0) corner: (652@50)
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(945779456))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		evt: 	[(54@38) mouseDown yellow 285781890 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	(0@0) corner: (652@50)
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(945779456))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		anEvent: 	[(54@38) mouseDown yellow 285781890 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	(0@0) corner: (652@50)
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(945779456))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MouseButtonEvent>>sentTo:
	Receiver: [(54@38) mouseDown yellow 285781890 nil]
	Arguments and temporary variables: 
		anObject: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		timeStamp: 	285781890
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(54@38)
		handler: 	a RubEditingArea(801348352)
		wasHandled: 	true
		whichButton: 	2


RubEditingArea(Morph)>>handleEvent:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		anEvent: 	[(54@38) mouseDown yellow 285781890 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	(0@0) corner: (652@50)
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(945779456))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(54@38) mouseDown yellow 285781890 nil]
		aMorph: 	a RubEditingArea(801348352)
		globalPt: 	(54@38)
		localEvt: 	[(54@38) mouseDown yellow 285781890 nil]
		index: 	3
		child: 	a RubPrimarySelectionMorph(583179008)
		morphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456))
		handler: 	a RubEditingArea(801348352)
		inside: 	false
		lastHandler: 	a RubScrolledTextMorph(386355456)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(54@38) mouseDown yellow 285781890 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(54@38) mouseDown yellow 285781890 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	285781890
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(54@38)
		handler: 	a RubEditingArea(801348352)
		wasHandled: 	true
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(54@38) mouseDown yellow 285781890 nil]
		aMorph: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(54@38) mouseDown yellow 285781890 nil]
		aMorph: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		morph: 	nil


RubEditingArea(Morph)>>processEvent:using:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		anEvent: 	[(54@38) mouseDown yellow 285781890 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	(0@0) corner: (652@50)
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(945779456))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(338@235) mouseDown yellow 285781890 nil]
		aMorph: 	a TransformWithLayoutMorph(318322432)
		globalPt: 	(338@235)
		localEvt: 	[(54@38) mouseDown yellow 285781890 nil]
		index: 	1
		child: 	a RubEditingArea(801348352)
		morphs: 	an Array(a RubEditingArea(801348352))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(386355456)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(338@235) mouseDown yellow 285781890 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(338@235) mouseDown yellow 285781890 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	285781890
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(338@235)
		handler: 	a RubScrolledTextMorph(386355456)
		wasHandled: 	false
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(338@235) mouseDown yellow 285781890 nil]
		aMorph: 	a TransformWithLayoutMorph(318322432)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #+
Message>>sentTo:
UndefinedObject(Object)>>doesNotUnderstand: #+
Message>>sentTo:
UndefinedObject(Object)>>doesNotUnderstand: #+
Counter>>contador:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldState>>doOneSubCycleFor:
WorldMorph>>doOneSubCycle
MenuMorph>>invokeModalAt:in:allowKeyboard:
MenuMorph>>invokeModal:
MenuMorph>>invokeModal
RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
RubEditingArea(RubAbstractTextArea)>>mouseDown:
RubEditingArea(Morph)>>handleMouseDown:
MouseButtonEvent>>sentTo:
RubEditingArea(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubEditingArea(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
MorphicEventDispatcher>>dispatchEvent:with:
TransformWithLayoutMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubTextScrollPane(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubScrolledTextMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
LazyTabGroupMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMMorphBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMScrollPaneBandBrick(Morph)>>processEvent:using:
MorphicEventDTHERE_BE_DRAGONS_HERE
Instance of Counter class did not understand #newC
23 December 2017 4:51:59.001318 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

Counter class(Object)>>doesNotUnderstand: #newC
	Receiver: Counter
	Arguments and temporary variables: 
		aMessage: 	newC
		exception: 	MessageNotUnderstood: Counter class>>newC
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#add:->Counter>>#add: #contador:->Counter>>#cont...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Counter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-User-Examples'
		traitComposition: 	{}
		localSelectors: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'cont := Counter newC.
cont contador: 5'
		itsSelection: 	a Text for 'cont := Counter newC.
cont contador: 5'
		itsSelectionString: 	'cont := Counter newC.
cont contador: 5'
	Receiver's instance variables: 
		ast: 	DoIt
	cont := Counter newC.
	^ cont contador: 5
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(801348352)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(801348352)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(386355456)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(923212544))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(386355456)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(673368320))(a SearchMorp...etc...
		lastStepTime: 	2714637
		lastStepMessage: 	nil
		lastCycleTime: 	2714659
		alarms: 	a Heap()
		lastAlarmTime: 	2714637
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(700845824) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(673368320))(a SearchMorp...etc...
		lastStepTime: 	2714637
		lastStepMessage: 	nil
		lastCycleTime: 	2714659
		alarms: 	a Heap()
		lastAlarmTime: 	2714637
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(673368320))(a SearchMorp...etc...
		lastStepTime: 	2714637
		lastStepMessage: 	nil
		lastCycleTime: 	2714659
		alarms: 	a Heap()
		lastAlarmTime: 	2714637
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(673368320))(a SearchMorp...etc...
		lastStepTime: 	2714637
		lastStepMessage: 	nil
		lastCycleTime: 	2714659
		alarms: 	a Heap()
		lastAlarmTime: 	2714637
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(700845824) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(594861312)
	Arguments and temporary variables: 
		aPoint: 	(370@226)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		bounds: 	(368.0@218.0) corner: (575.0@452.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(344563456)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(368.0@218.0) corner: (575.0@452.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (867634944) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(392112896)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(594861312)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(368.0@218.0) corner: (575.0@452.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(344563456)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(368.0@218.0) corner: (575.0@452.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (867634944) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(392112896)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(594861312)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(368.0@218.0) corner: (575.0@452.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(344563456)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(368.0@218.0) corner: (575.0@452.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (867634944) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(392112896)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(594861312)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(923212544))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		evt: 	[(86@29) mouseDown yellow 286364734 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(923212544))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		anEvent: 	[(86@29) mouseDown yellow 286364734 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(923212544))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MouseButtonEvent>>sentTo:
	Receiver: [(86@29) mouseDown yellow 286364734 nil]
	Arguments and temporary variables: 
		anObject: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		timeStamp: 	286364734
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(86@29)
		handler: 	a RubEditingArea(801348352)
		wasHandled: 	true
		whichButton: 	2


RubEditingArea(Morph)>>handleEvent:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		anEvent: 	[(86@29) mouseDown yellow 286364734 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(923212544))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(86@29) mouseDown yellow 286364734 nil]
		aMorph: 	a RubEditingArea(801348352)
		globalPt: 	(86@29)
		localEvt: 	[(86@29) mouseDown yellow 286364734 nil]
		index: 	3
		child: 	a RubPrimarySelectionMorph(583179008)
		morphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456))
		handler: 	a RubEditingArea(801348352)
		inside: 	false
		lastHandler: 	a RubScrolledTextMorph(386355456)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(86@29) mouseDown yellow 286364734 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(86@29) mouseDown yellow 286364734 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	286364734
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(86@29)
		handler: 	a RubEditingArea(801348352)
		wasHandled: 	true
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(86@29) mouseDown yellow 286364734 nil]
		aMorph: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(86@29) mouseDown yellow 286364734 nil]
		aMorph: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		morph: 	nil


RubEditingArea(Morph)>>processEvent:using:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		anEvent: 	[(86@29) mouseDown yellow 286364734 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(923212544))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(370@226) mouseDown yellow 286364734 nil]
		aMorph: 	a TransformWithLayoutMorph(318322432)
		globalPt: 	(370@226)
		localEvt: 	[(86@29) mouseDown yellow 286364734 nil]
		index: 	1
		child: 	a RubEditingArea(801348352)
		morphs: 	an Array(a RubEditingArea(801348352))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(386355456)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(370@226) mouseDown yellow 286364734 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(370@226) mouseDown yellow 286364734 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	286364734
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(370@226)
		handler: 	a RubScrolledTextMorph(386355456)
		wasHandled: 	false
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(370@226) mouseDown yellow 286364734 nil]
		aMorph: 	a TransformWithLayoutMorph(318322432)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(370@226) mouseDown yellow 286364734 nil]
		aMorph: 	a TransformWithLayoutMorph(318322432)
	Receiver's instance variables: 
		morph: 	nil


TransformWithLayoutMorph(Morph)>>processEvent:using:
	Receiver: a TransformWithLayoutMorph(318322432)
	Arguments and temporary variables: 
		anEvent: 	[(370@226) mouseDown yellow 286364734 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(284@197) corner: (936@532)
		owner: 	a RubTextScrollPane(298053888)
		submorphs: 	an Array(a RubEditingArea(801348352))
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (763954944) [other:  (kmDispatcher -> a KMDispatche...etc...
		transform: 	a MorphicTransform(angle = 0.0; scale = 1.0; offset = (-284@ -197))
		smoothing: 	1
		localBounds: 	nil


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(370@226) mouseDown yellow 286364734 nil]
		aMorph: 	a RubTextScrollPane(298053888)
		globalPt: 	(370@226)
		localEvt: 	[(370@226) mouseDown yellow 286364734 nil]
		index: 	1
		child: 	a TransformWithLayoutMorph(318322432)
		morphs: 	an Array(a TransformWithLayoutMorph(318322432))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(386355456)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(370@226) mouseDown yellow 286364734 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(370@226) mouseDown yellow 286364734 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	286364734
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(370@226)
		handler: 	a RubScrolledTextMorph(386355456)
		wasHandled: 	false
		whichButton: 	2



--- The full stack ---
Counter class(Object)>>doesNotUnderstand: #newC
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldState>>doOneSubCycleFor:
WorldMorph>>doOneSubCycle
MenuMorph>>invokeModalAt:in:allowKeyboard:
MenuMorph>>invokeModal:
MenuMorph>>invokeModal
RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
RubEditingArea(RubAbstractTextArea)>>mouseDown:
RubEditingArea(Morph)>>handleMouseDown:
MouseButtonEvent>>sentTo:
RubEditingArea(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubEditingArea(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
TransformWithLayoutMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubTextScrollPane(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubScrolledTextMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
LazyTabGroupMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphTHERE_BE_DRAGONS_HERE
Instance of Counter class did not understand #newC
23 December 2017 4:52:08.558318 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

Counter class(Object)>>doesNotUnderstand: #newC
	Receiver: Counter
	Arguments and temporary variables: 
		aMessage: 	newC
		exception: 	MessageNotUnderstood: Counter class>>newC
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#add:->Counter>>#add: #contador:->Counter>>#cont...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Counter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-User-Examples'
		traitComposition: 	{}
		localSelectors: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'cont := Counter newC.
cont contador: 5'
		itsSelection: 	a Text for 'cont := Counter newC.
cont contador: 5'
		itsSelectionString: 	'cont := Counter newC.
cont contador: 5'
	Receiver's instance variables: 
		ast: 	DoIt
	cont := Counter newC.
	^ cont contador: 5
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(801348352)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(801348352)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(386355456)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(874477312))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(386355456)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(673368320))(a SearchMorp...etc...
		lastStepTime: 	2724194
		lastStepMessage: 	nil
		lastCycleTime: 	2724217
		alarms: 	a Heap()
		lastAlarmTime: 	2724194
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(700845824) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(673368320))(a SearchMorp...etc...
		lastStepTime: 	2724194
		lastStepMessage: 	nil
		lastCycleTime: 	2724217
		alarms: 	a Heap()
		lastAlarmTime: 	2724194
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(673368320))(a SearchMorp...etc...
		lastStepTime: 	2724194
		lastStepMessage: 	nil
		lastCycleTime: 	2724217
		alarms: 	a Heap()
		lastAlarmTime: 	2724194
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(673368320))(a SearchMorp...etc...
		lastStepTime: 	2724194
		lastStepMessage: 	nil
		lastCycleTime: 	2724217
		alarms: 	a Heap()
		lastAlarmTime: 	2724194
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(700845824) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(482105088)
	Arguments and temporary variables: 
		aPoint: 	(374@224)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		bounds: 	(372.0@216.0) corner: (579.0@450.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(635592960)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(372.0@216.0) corner: (579.0@450.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (1039602432) [other:  (basicColor -> Color veryDark...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(827751168)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(482105088)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(372.0@216.0) corner: (579.0@450.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(635592960)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(372.0@216.0) corner: (579.0@450.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (1039602432) [other:  (basicColor -> Color veryDark...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(827751168)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(482105088)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(372.0@216.0) corner: (579.0@450.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(635592960)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(372.0@216.0) corner: (579.0@450.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (1039602432) [other:  (basicColor -> Color veryDark...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(827751168)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(482105088)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(874477312))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		evt: 	[(90@27) mouseDown yellow 286374390 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(874477312))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		anEvent: 	[(90@27) mouseDown yellow 286374390 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(874477312))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MouseButtonEvent>>sentTo:
	Receiver: [(90@27) mouseDown yellow 286374390 nil]
	Arguments and temporary variables: 
		anObject: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		timeStamp: 	286374390
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(90@27)
		handler: 	a RubEditingArea(801348352)
		wasHandled: 	true
		whichButton: 	2


RubEditingArea(Morph)>>handleEvent:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		anEvent: 	[(90@27) mouseDown yellow 286374390 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(874477312))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(90@27) mouseDown yellow 286374390 nil]
		aMorph: 	a RubEditingArea(801348352)
		globalPt: 	(90@27)
		localEvt: 	[(90@27) mouseDown yellow 286374390 nil]
		index: 	4
		child: 	a RubPrimarySelectionMorph(583179008)
		morphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456) a ...etc...
		handler: 	a RubEditingArea(801348352)
		inside: 	false
		lastHandler: 	a RubScrolledTextMorph(386355456)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(90@27) mouseDown yellow 286374390 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(90@27) mouseDown yellow 286374390 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	286374390
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(90@27)
		handler: 	a RubEditingArea(801348352)
		wasHandled: 	true
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(90@27) mouseDown yellow 286374390 nil]
		aMorph: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(90@27) mouseDown yellow 286374390 nil]
		aMorph: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		morph: 	nil


RubEditingArea(Morph)>>processEvent:using:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		anEvent: 	[(90@27) mouseDown yellow 286374390 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(874477312))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(374@224) mouseDown yellow 286374390 nil]
		aMorph: 	a TransformWithLayoutMorph(318322432)
		globalPt: 	(374@224)
		localEvt: 	[(90@27) mouseDown yellow 286374390 nil]
		index: 	1
		child: 	a RubEditingArea(801348352)
		morphs: 	an Array(a RubEditingArea(801348352))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(386355456)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(374@224) mouseDown yellow 286374390 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(374@224) mouseDown yellow 286374390 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	286374390
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(374@224)
		handler: 	a RubScrolledTextMorph(386355456)
		wasHandled: 	false
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(374@224) mouseDown yellow 286374390 nil]
		aMorph: 	a TransformWithLayoutMorph(318322432)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(374@224) mouseDown yellow 286374390 nil]
		aMorph: 	a TransformWithLayoutMorph(318322432)
	Receiver's instance variables: 
		morph: 	nil


TransformWithLayoutMorph(Morph)>>processEvent:using:
	Receiver: a TransformWithLayoutMorph(318322432)
	Arguments and temporary variables: 
		anEvent: 	[(374@224) mouseDown yellow 286374390 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(284@197) corner: (936@532)
		owner: 	a RubTextScrollPane(298053888)
		submorphs: 	an Array(a RubEditingArea(801348352))
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (763954944) [other:  (kmDispatcher -> a KMDispatche...etc...
		transform: 	a MorphicTransform(angle = 0.0; scale = 1.0; offset = (-284@ -197))
		smoothing: 	1
		localBounds: 	nil


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(374@224) mouseDown yellow 286374390 nil]
		aMorph: 	a RubTextScrollPane(298053888)
		globalPt: 	(374@224)
		localEvt: 	[(374@224) mouseDown yellow 286374390 nil]
		index: 	1
		child: 	a TransformWithLayoutMorph(318322432)
		morphs: 	an Array(a TransformWithLayoutMorph(318322432))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(386355456)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(374@224) mouseDown yellow 286374390 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(374@224) mouseDown yellow 286374390 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	286374390
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(374@224)
		handler: 	a RubScrolledTextMorph(386355456)
		wasHandled: 	false
		whichButton: 	2



--- The full stack ---
Counter class(Object)>>doesNotUnderstand: #newC
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldState>>doOneSubCycleFor:
WorldMorph>>doOneSubCycle
MenuMorph>>invokeModalAt:in:allowKeyboard:
MenuMorph>>invokeModal:
MenuMorph>>invokeModal
RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
RubEditingArea(RubAbstractTextArea)>>mouseDown:
RubEditingArea(Morph)>>handleMouseDown:
MouseButtonEvent>>sentTo:
RubEditingArea(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubEditingArea(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
TransformWithLayoutMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubTextScrollPane(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubScrolledTextMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
LazyTabGroupMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:witTHERE_BE_DRAGONS_HERE
Instance of Counter class did not understand #newC
23 December 2017 4:52:43.448318 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

Counter class(Object)>>doesNotUnderstand: #newC
	Receiver: Counter
	Arguments and temporary variables: 
		aMessage: 	newC
		exception: 	MessageNotUnderstood: Counter class>>newC
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#add:->Counter>>#add: #contador:->Counter>>#cont...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Counter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-User-Examples'
		traitComposition: 	{}
		localSelectors: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'cont := Counter newC.'
		itsSelection: 	a Text for 'cont := Counter newC.'
		itsSelectionString: 	'cont := Counter newC.'
	Receiver's instance variables: 
		ast: 	DoIt
	^ cont := Counter newC
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(801348352)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | 
textMorph shoutStyler style: textMorph text.
GLMPrintPoppe...etc...
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(801348352)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 

	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(386355456)
		textModel: 	a GLMRubricSmalltalkTextModel


MorphicAlarm(MessageSend)>>value
	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		receiver: 	a GLMMorphicPharoScriptRenderer
		selector: 	#popupPrint
		arguments: 	#()
		scheduledTime: 	2759104
		numArgs: 	0


MorphicAlarm>>value:
	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)
	Arguments and temporary variables: 
		anArgument: 	2759117
		nArgs: 	0
	Receiver's instance variables: 
		receiver: 	a GLMMorphicPharoScriptRenderer
		selector: 	#popupPrint
		arguments: 	#()
		scheduledTime: 	2759104
		numArgs: 	0


WorldState>>triggerAlarmsBefore:
	Receiver: a WorldState
	Arguments and temporary variables: 
		nowTime: 	2759117
		pending: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(83827456)))
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(709961984))(a FadingMorp...etc...
		lastStepTime: 	2759095
		lastStepMessage: 	nil
		lastCycleTime: 	2759117
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(83827456)))
		lastAlarmTime: 	2759095
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>runLocalStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		now: 	2759117
		morphToStep: 	nil
		stepTime: 	nil
		priorWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(709961984))(a FadingMorp...etc...
		lastStepTime: 	2759095
		lastStepMessage: 	nil
		lastCycleTime: 	2759117
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(83827456)))
		lastAlarmTime: 	2759095
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	nil
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(709961984))(a FadingMorp...etc...
		lastStepTime: 	2759095
		lastStepMessage: 	nil
		lastCycleTime: 	2759117
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(83827456)))
		lastAlarmTime: 	2759095
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a FadingMorph(709961984) a GLMSys...etc...
		fullBounds: 	(0@0) corner: (1264@721)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(709961984))(a FadingMorp...etc...
		lastStepTime: 	2759095
		lastStepMessage: 	nil
		lastCycleTime: 	2759117
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(83827456)))
		lastAlarmTime: 	2759095
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a FadingMorph(709961984))(a FadingMorp...etc...
		lastStepTime: 	2759095
		lastStepMessage: 	nil
		lastCycleTime: 	2759117
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(83827456)))
		lastAlarmTime: 	2759095
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a FadingMorph(709961984) a GLMSys...etc...
		fullBounds: 	(0@0) corner: (1264@721)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65549
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#ExtraWorldList->#() )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
Counter class(Object)>>doesNotUnderstand: #newC
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint
MorphicAlarm(MessageSend)>>value
MorphicAlarm>>value:
WorldState>>triggerAlarmsBefore:
WorldState>>runLocalStepMethodsIn:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#+ was sent to nil
23 December 2017 5:10:42.114318 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

UndefinedObject(Object)>>doesNotUnderstand: #+
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	+ 0
		exception: 	MessageNotUnderstood: receiver of "+" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

Counter>>contador:
	Receiver: a Counter
	Arguments and temporary variables: 
		unValor: 	0
	Receiver's instance variables: 
		contador: 	nil


Counter>>initialize
	Receiver: a Counter
	Arguments and temporary variables: 

	Receiver's instance variables: 
		contador: 	nil


Counter class(Behavior)>>new
	Receiver: Counter
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#add:->Counter>>#add: #contador:->Counter>>#cont...etc...
		format: 	65537
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Counter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-User-Examples'
		traitComposition: 	{}
		localSelectors: 	nil
		contador: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'cont := Counter new.'
		itsSelection: 	a Text for 'cont := Counter new.'
		itsSelectionString: 	'cont := Counter new.'
	Receiver's instance variables: 
		ast: 	DoIt
	^ cont := Counter new
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(801348352)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(801348352)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(386355456)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(457590016))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(386355456)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(576993024))(a DropList...etc...
		lastStepTime: 	3837751
		lastStepMessage: 	nil
		lastCycleTime: 	3837774
		alarms: 	a Heap()
		lastAlarmTime: 	3837751
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(700845824) a Na...etc...
		fullBounds: 	(0@0) corner: (1264@721)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(576993024))(a DropList...etc...
		lastStepTime: 	3837751
		lastStepMessage: 	nil
		lastCycleTime: 	3837774
		alarms: 	a Heap()
		lastAlarmTime: 	3837751
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(576993024))(a DropList...etc...
		lastStepTime: 	3837751
		lastStepMessage: 	nil
		lastCycleTime: 	3837774
		alarms: 	a Heap()
		lastAlarmTime: 	3837751
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(576993024))(a DropList...etc...
		lastStepTime: 	3837751
		lastStepMessage: 	nil
		lastCycleTime: 	3837774
		alarms: 	a Heap()
		lastAlarmTime: 	3837751
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(700845824) a Na...etc...
		fullBounds: 	(0@0) corner: (1264@721)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(817985280)
	Arguments and temporary variables: 
		aPoint: 	(387@215)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		bounds: 	(385.0@207.0) corner: (592.0@441.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(266233088)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(385.0@207.0) corner: (592.0@441.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (563106560) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(297867008)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(817985280)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(385.0@207.0) corner: (592.0@441.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(266233088)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(385.0@207.0) corner: (592.0@441.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (563106560) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(297867008)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(817985280)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(385.0@207.0) corner: (592.0@441.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(266233088)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(385.0@207.0) corner: (592.0@441.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (563106560) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(297867008)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(817985280)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(457590016))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		evt: 	[(103@18) mouseDown yellow 287487609 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(457590016))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		anEvent: 	[(103@18) mouseDown yellow 287487609 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(457590016))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MouseButtonEvent>>sentTo:
	Receiver: [(103@18) mouseDown yellow 287487609 nil]
	Arguments and temporary variables: 
		anObject: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		timeStamp: 	287487609
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(103@18)
		handler: 	a RubEditingArea(801348352)
		wasHandled: 	true
		whichButton: 	2


RubEditingArea(Morph)>>handleEvent:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		anEvent: 	[(103@18) mouseDown yellow 287487609 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(457590016))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(103@18) mouseDown yellow 287487609 nil]
		aMorph: 	a RubEditingArea(801348352)
		globalPt: 	(103@18)
		localEvt: 	[(103@18) mouseDown yellow 287487609 nil]
		index: 	3
		child: 	a RubPrimarySelectionMorph(583179008)
		morphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456))
		handler: 	a RubEditingArea(801348352)
		inside: 	false
		lastHandler: 	a RubScrolledTextMorph(386355456)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(103@18) mouseDown yellow 287487609 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(103@18) mouseDown yellow 287487609 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	287487609
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(103@18)
		handler: 	a RubEditingArea(801348352)
		wasHandled: 	true
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(103@18) mouseDown yellow 287487609 nil]
		aMorph: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(103@18) mouseDown yellow 287487609 nil]
		aMorph: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		morph: 	nil


RubEditingArea(Morph)>>processEvent:using:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		anEvent: 	[(103@18) mouseDown yellow 287487609 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		meTHERE_BE_DRAGONS_HERE
#+ was sent to nil
23 December 2017 5:14:39.645318 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

UndefinedObject(Object)>>doesNotUnderstand: #+
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	+ 0
		exception: 	MessageNotUnderstood: receiver of "+" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

Counter>>contador:
	Receiver: a Counter
	Arguments and temporary variables: 
		unValor: 	0
	Receiver's instance variables: 
		contador: 	nil


Counter>>initialize
	Receiver: a Counter
	Arguments and temporary variables: 

	Receiver's instance variables: 
		contador: 	nil


Counter class(Behavior)>>new
	Receiver: Counter
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#add:->Counter>>#add: #contador:->Counter>>#cont...etc...
		format: 	65537
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Counter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-User-Examples'
		traitComposition: 	{}
		localSelectors: 	nil
		contador: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'cont := Counter new.
cont contador: 5'
		itsSelection: 	a Text for 'cont := Counter new.
cont contador: 5'
		itsSelectionString: 	'cont := Counter new.
cont contador: 5'
	Receiver's instance variables: 
		ast: 	DoIt
	cont := Counter new.
	^ cont contador: 5
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(801348352)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(801348352)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(386355456)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(243078912))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(386355456)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(917140224))(a SearchMorp...etc...
		lastStepTime: 	4075280
		lastStepMessage: 	nil
		lastCycleTime: 	4075302
		alarms: 	a Heap()
		lastAlarmTime: 	4075280
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(700845824) a Na...etc...
		fullBounds: 	(0@0) corner: (1264@721)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(917140224))(a SearchMorp...etc...
		lastStepTime: 	4075280
		lastStepMessage: 	nil
		lastCycleTime: 	4075302
		alarms: 	a Heap()
		lastAlarmTime: 	4075280
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(917140224))(a SearchMorp...etc...
		lastStepTime: 	4075280
		lastStepMessage: 	nil
		lastCycleTime: 	4075302
		alarms: 	a Heap()
		lastAlarmTime: 	4075280
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(917140224))(a SearchMorp...etc...
		lastStepTime: 	4075280
		lastStepMessage: 	nil
		lastCycleTime: 	4075302
		alarms: 	a Heap()
		lastAlarmTime: 	4075280
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(700845824) a Na...etc...
		fullBounds: 	(0@0) corner: (1264@721)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(330954496)
	Arguments and temporary variables: 
		aPoint: 	(327@220)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		bounds: 	(325.0@212.0) corner: (532.0@446.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(695933184)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(325.0@212.0) corner: (532.0@446.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (812398848) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(283099392)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(330954496)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(325.0@212.0) corner: (532.0@446.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(695933184)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(325.0@212.0) corner: (532.0@446.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (812398848) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(283099392)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(330954496)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(325.0@212.0) corner: (532.0@446.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(695933184)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(325.0@212.0) corner: (532.0@446.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (812398848) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(283099392)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(330954496)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(243078912))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		evt: 	[(43@23) mouseDown yellow 287725156 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(243078912))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		anEvent: 	[(43@23) mouseDown yellow 287725156 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(243078912))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MouseButtonEvent>>sentTo:
	Receiver: [(43@23) mouseDown yellow 287725156 nil]
	Arguments and temporary variables: 
		anObject: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		timeStamp: 	287725156
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(43@23)
		handler: 	a RubEditingArea(801348352)
		wasHandled: 	true
		whichButton: 	2


RubEditingArea(Morph)>>handleEvent:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		anEvent: 	[(43@23) mouseDown yellow 287725156 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(243078912))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(43@23) mouseDown yellow 287725156 nil]
		aMorph: 	a RubEditingArea(801348352)
		globalPt: 	(43@23)
		localEvt: 	[(43@23) mouseDown yellow 287725156 nil]
		index: 	3
		child: 	a RubPrimarySelectionMorph(583179008)
		morphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456))
		handler: 	a RubEditingArea(801348352)
		inside: 	false
		lastHandler: 	a RubScrolledTextMorph(386355456)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(43@23) mouseDown yellow 287725156 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(43@23) mouseDown yellow 287725156 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	287725156
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(43@23)
		handler: 	a RubEditingArea(801348352)
		wasHandled: 	true
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(43@23) mouseDown yellow 287725156 nil]
		aMorph: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(43@23) mouseDown yellow 287725156 nil]
		aMorph: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		morph: 	nil


RubEditingArea(Morph)>>processEvent:using:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		anEvent: 	[(43@23) mouseDown yellow 287725156 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(243078912))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(327@220) mouseDown yellow 287725156 nil]
		aMorph: 	a TransformWithLayoutMorph(318322432)
		globalPt: 	(327@220)
		localEvt: 	[(43@23) mouseDown yellow 287725156 nil]
		index: 	1
		child: 	a RubEditingArea(801348352)
		morphs: 	an Array(a RubEditingArea(801348352))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(386355456)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(327@220) mouseDown yellow 287725156 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(327@220) mouseDown yellow 287725156 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	287725156
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(327@220)
		handler: 	a RubScrolledTextMorph(386355456)
		wasHandled: 	false
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(327@220) mouseDown yellow 287725156 nil]
		aMorph: 	a TransformWithLayoutMorph(318322432)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(327@220) mouseDown yellow 287725156 nil]
		aMorph: 	a TransformWithLayoutMorph(318322432)
	Receiver's instance variables: 
		morph: 	nil


TransformWithLayoutMorph(Morph)>>processEvent:using:
	Receiver: a TransformWithLayoutMorph(318322432)
	Arguments and temporary variables: 
		anEvent: 	[(327@220) mouseDown yellow 287725156 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(284@197) corner: (936@532)
		owner: 	a RubTextScrollPane(298053888)
		submorphs: 	an Array(a RubEditingArea(801348352))
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (763954944) [other:  (kmDispatcher -> a KMDispatche...etc...
		transform: 	a MorphicTransform(angle = 0.0; scale = 1.0; offset = (-284@ -197))
		smoothing: 	1
		localBounds: 	nil



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #+
Counter>>contador:
Counter>>initialize
Counter class(Behavior)>>new
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldState>>doOneSubCycleFor:
WorldMorph>>doOneSubCycle
MenuMorph>>invokeModalAt:in:allowKeyboard:
MenuMorph>>invokeModal:
MenuMorph>>invokeModal
RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
RubEditingArea(RubAbstractTextArea)>>mouseDown:
RubEditingArea(Morph)>>handleMouseDown:
MouseButtonEvent>>sentTo:
RubEditingArea(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubEditingArea(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
TransformWithLayoutMorph(Morph)>>processEvent:using:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubTextScrollPane(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubScrolledTextMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
LazyTabGroupMorph(Morph)>>processEvent:using:
MorphiTHERE_BE_DRAGONS_HERE
#+ was sent to nil
23 December 2017 5:18:20.855318 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

UndefinedObject(Object)>>doesNotUnderstand: #+
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	+ 0
		exception: 	MessageNotUnderstood: receiver of "+" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

Counter>>contador:
	Receiver: a Counter
	Arguments and temporary variables: 
		unValor: 	0
	Receiver's instance variables: 
		contador: 	nil


Counter>>initialize
	Receiver: a Counter
	Arguments and temporary variables: 

	Receiver's instance variables: 
		contador: 	nil


Counter class(Behavior)>>new
	Receiver: Counter
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#add:->Counter>>#add: #contador:->Counter>>#cont...etc...
		format: 	65537
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Counter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-User-Examples'
		traitComposition: 	{}
		localSelectors: 	nil
		contador: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'cont := Counter new.'
		itsSelection: 	a Text for 'cont := Counter new.'
		itsSelectionString: 	'cont := Counter new.'
	Receiver's instance variables: 
		ast: 	DoIt
	^ cont := Counter new
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(801348352)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(801348352)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(386355456)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(188343040))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(386355456)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(91113728))(a DropListM...etc...
		lastStepTime: 	4296492
		lastStepMessage: 	nil
		lastCycleTime: 	4296516
		alarms: 	a Heap()
		lastAlarmTime: 	4296492
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(700845824) a Na...etc...
		fullBounds: 	(0@0) corner: (1264@721)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(91113728))(a DropListM...etc...
		lastStepTime: 	4296492
		lastStepMessage: 	nil
		lastCycleTime: 	4296516
		alarms: 	a Heap()
		lastAlarmTime: 	4296492
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(91113728))(a DropListM...etc...
		lastStepTime: 	4296492
		lastStepMessage: 	nil
		lastCycleTime: 	4296516
		alarms: 	a Heap()
		lastAlarmTime: 	4296492
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(91113728))(a DropListM...etc...
		lastStepTime: 	4296492
		lastStepMessage: 	nil
		lastCycleTime: 	4296516
		alarms: 	a Heap()
		lastAlarmTime: 	4296492
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(700845824) a Na...etc...
		fullBounds: 	(0@0) corner: (1264@721)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(124456192)
	Arguments and temporary variables: 
		aPoint: 	(320@215)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		bounds: 	(318.0@207.0) corner: (525.0@441.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(372035328)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(318.0@207.0) corner: (525.0@441.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (196350208) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(402881280)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(124456192)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(318.0@207.0) corner: (525.0@441.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(372035328)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(318.0@207.0) corner: (525.0@441.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (196350208) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(402881280)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(124456192)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(318.0@207.0) corner: (525.0@441.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(372035328)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(318.0@207.0) corner: (525.0@441.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (196350208) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(402881280)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(124456192)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(188343040))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		evt: 	[(36@18) mouseDown yellow 287946484 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(188343040))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		anEvent: 	[(36@18) mouseDown yellow 287946484 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(188343040))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MouseButtonEvent>>sentTo:
	Receiver: [(36@18) mouseDown yellow 287946484 nil]
	Arguments and temporary variables: 
		anObject: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		timeStamp: 	287946484
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(36@18)
		handler: 	a RubEditingArea(801348352)
		wasHandled: 	true
		whichButton: 	2


RubEditingArea(Morph)>>handleEvent:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		anEvent: 	[(36@18) mouseDown yellow 287946484 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(188343040))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(36@18) mouseDown yellow 287946484 nil]
		aMorph: 	a RubEditingArea(801348352)
		globalPt: 	(36@18)
		localEvt: 	[(36@18) mouseDown yellow 287946484 nil]
		index: 	3
		child: 	a RubPrimarySelectionMorph(583179008)
		morphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456))
		handler: 	a RubEditingArea(801348352)
		inside: 	false
		lastHandler: 	a RubScrolledTextMorph(386355456)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(36@18) mouseDown yellow 287946484 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(36@18) mouseDown yellow 287946484 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	287946484
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(36@18)
		handler: 	a RubEditingArea(801348352)
		wasHandled: 	true
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(36@18) mouseDown yellow 287946484 nil]
		aMorph: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(36@18) mouseDown yellow 287946484 nil]
		aMorph: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		morph: 	nil


RubEditingArea(Morph)>>processEvent:using:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		anEvent: 	[(36@18) mouseDown yellow 287946484 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@50)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(583179008) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(188343040))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(320@215) mouseDown yellow 287946484 nil]
		aMorph: 	a TransformWithLayoutMorph(318322432)
		globalPt: 	(320@215)
		localEvt: 	[(36@18) mouseDown yellow 287946484 nil]
		index: 	1
		child: 	a RubEditingArea(801348352)
		morphs: 	an Array(a RubEditingArea(801348352))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(386355456)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(320@215) mouseDown yellow 287946484 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(320@215) mouseDown yellow 287946484 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	287946484
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(320@215)
		handler: 	a RubScrolledTextMorph(386355456)
		wasHandled: 	false
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(320@215) mouseDown yellow 287946484 nil]
		aMorph: 	a TransformWithLayoutMorph(318322432)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(320@215) mouseDown yellow 287946484 nil]
		aMorph: 	a TransformWithLayoutMorph(318322432)
	Receiver's instance variables: 
		morph: 	nil


TransformWithLayoutMorph(Morph)>>processEvent:using:
	Receiver: a TransformWithLayoutMorph(318322432)
	Arguments and temporary variables: 
		anEvent: 	[(320@215) mouseDown yellow 287946484 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(284@197) corner: (936@532)
		owner: 	a RubTextScrollPane(298053888)
		submorphs: 	an Array(a RubEditingArea(801348352))
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (763954944) [other:  (kmDispatcher -> a KMDispatche...etc...
		transform: 	a MorphicTransform(angle = 0.0; scale = 1.0; offset = (-284@ -197))
		smoothing: 	1
		localBounds: 	nil



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #+
Counter>>contador:
Counter>>initialize
Counter class(Behavior)>>new
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldState>>doOneSubCycleFor:
WorldMorph>>doOneSubCycle
MenuMorph>>invokeModalAt:in:allowKeyboard:
MenuMorph>>invokeModal:
MenuMorph>>invokeModal
RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
RubEditingArea(RubAbstractTextArea)>>mouseDown:
RubEditingArea(Morph)>>handleMouseDown:
MouseButtonEvent>>sentTo:
RubEditingArea(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubEditingArea(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
TransformWithLayoutMorph(Morph)>>processEvent:using:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubTextScrollPane(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubScrolledTextMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
LazyTabGroupMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMMorphBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicETHERE_BE_DRAGONS_HERE
#self was sent to nil
23 December 2017 5:22:43.875318 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

UndefinedObject(Object)>>doesNotUnderstand: #self
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	self
		exception: 	MessageNotUnderstood: receiver of "self" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

Counter class>>DoIt
	Receiver: Counter
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#initialize->Counter>>#initialize )
		format: 	65537
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Counter
		classPool: 	a Dictionary()
		sharedPools: 	nil
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-User-Examples'
		traitComposition: 	{}
		localSelectors: 	nil
		initialize: 	nil


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'initialize
	"inicia el contador en 0"

	self count: 0.'
		itsSelection: 	a Text for 'initialize
	"inicia el contador en 0"

	self count: 0...etc...
		itsSelectionString: 	'initialize
	"inicia el contador en 0"

	self count: 0.'
	Receiver's instance variables: 
		ast: 	<<error during printing>>

RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadWriteStream
		aBlock: 	[ :result | result ]
		result: 	nil
		rcvr: 	Counter
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(401960192)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>evaluateSelectionAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(401960192)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>evaluateSelection
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 

	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(401960192)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>doIt
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 

	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(401960192)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubScrolledTextMorph(Object)>>perform:orSendTo:
	Receiver: a RubScrolledTextMorph(562229504)
	Arguments and temporary variables: 
		selector: 	#doIt
		otherTarget: 	a RubSmalltalkEditor
	Receiver's instance variables: 
		bounds: 	(399.0@351.0) corner: (1239.0@597.0)
		owner: 	a PanelMorph(466987264)
		submorphs: 	an Array(a RubTextScrollPane(562363136) a RubAdornmentDisplayer(8753...etc...
		fullBounds: 	(399@351) corner: (1239@597)
		color: 	(Color r: 0.13 g: 0.13 b: 0.13 alpha: 1.0)
		extension: 	a MorphExtension (833948928) [other:  (announcer -> an Announcer) (k...etc...
		hasEditingConflicts: 	false
		hasUnacceptedEdits: 	true
		alwaysAccept: 	false
		setTextSelector: 	#setText:from:
		getTextSelector: 	#getText
		getSelectionSelector: 	#primarySelectionInterval
		setSelectionSelector: 	nil
		autoAccept: 	false
		scrollPane: 	a RubTextScrollPane(562363136)
		rulers: 	a SortedCollection(a NautilusAnnotationDisplayer(447751936) a RubTextSe...etc...
		enabled: 	true
		highlights: 	an OrderedCollection()


[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ].
		self showShortcut ].
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(301323008)'Do it'
	Arguments and temporary variables: 
		evt: 	[(517@383) mouseUp 288192250 nil]
		w: 	a WorldMorph(562956288) [world]
		selArgCount: 	2
	Receiver's instance variables: 
		bounds: 	(485.0@373.0) corner: (684.0@390.0)
		owner: 	a MenuMorph(716639488)
		submorphs: 	#()
		fullBounds: 	(485.0@373.0) corner: (684.0@390.0)
		color: 	Color white
		extension: 	a MorphExtension (628141824)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Do it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(562229504)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#doIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'd'


BlockClosure>>ensure:
	Receiver: [ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := select...etc...
	Arguments and temporary variables: 
		aBlock: 	[ oldcursor show ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
		startpc: 	138
		numArgs: 	0


CursorWithMask(Cursor)>>showWhile:
	Receiver: ((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2r100000000000000000000...etc...
	Arguments and temporary variables: 
		aBlock: 	[ | selArgCount |
"show cursor in case item opens a new MVC window"
(se...etc...
		oldcursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2...etc...
	Receiver's instance variables: 
		bits: 	a Bitmap of length 16
		width: 	16
		height: 	16
		depth: 	1
		offset: 	(-1@ -1)
		maskForm: 	Form(16x16x1)


ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(301323008)'Do it'
	Arguments and temporary variables: 
		evt: 	[(517@383) mouseUp 288192250 nil]
		w: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		bounds: 	(485.0@373.0) corner: (684.0@390.0)
		owner: 	a MenuMorph(716639488)
		submorphs: 	#()
		fullBounds: 	(485.0@373.0) corner: (684.0@390.0)
		color: 	Color white
		extension: 	a MorphExtension (628141824)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Do it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(562229504)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#doIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'd'


ToggleMenuItemMorph(MenuItemMorph)>>mouseUp:
	Receiver: a ToggleMenuItemMorph(301323008)'Do it'
	Arguments and temporary variables: 
		evt: 	[(517@383) mouseUp 288192250 nil]
	Receiver's instance variables: 
		bounds: 	(485.0@373.0) corner: (684.0@390.0)
		owner: 	a MenuMorph(716639488)
		submorphs: 	#()
		fullBounds: 	(485.0@373.0) corner: (684.0@390.0)
		color: 	Color white
		extension: 	a MorphExtension (628141824)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Do it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(562229504)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#doIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'd'


ToggleMenuItemMorph(MenuItemMorph)>>handleMouseUp:
	Receiver: a ToggleMenuItemMorph(301323008)'Do it'
	Arguments and temporary variables: 
		anEvent: 	[(517@383) mouseUp 288192250 nil]
	Receiver's instance variables: 
		bounds: 	(485.0@373.0) corner: (684.0@390.0)
		owner: 	a MenuMorph(716639488)
		submorphs: 	#()
		fullBounds: 	(485.0@373.0) corner: (684.0@390.0)
		color: 	Color white
		extension: 	a MorphExtension (628141824)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Do it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(562229504)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#doIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'd'


MouseButtonEvent>>sentTo:
	Receiver: [(517@383) mouseUp 288192250 nil]
	Arguments and temporary variables: 
		anObject: 	a ToggleMenuItemMorph(301323008)'Do it'
	Receiver's instance variables: 
		timeStamp: 	288192250
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(517@383)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


ToggleMenuItemMorph(Morph)>>handleEvent:
	Receiver: a ToggleMenuItemMorph(301323008)'Do it'
	Arguments and temporary variables: 
		anEvent: 	[(517@383) mouseUp 288192250 nil]
	Receiver's instance variables: 
		bounds: 	(485.0@373.0) corner: (684.0@390.0)
		owner: 	a MenuMorph(716639488)
		submorphs: 	#()
		fullBounds: 	(485.0@373.0) corner: (684.0@390.0)
		color: 	Color white
		extension: 	a MorphExtension (628141824)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Do it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(562229504)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#doIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'd'


MorphicEventDispatcher>>dispatchDefault:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
#new was sent to nil
23 December 2017 5:29:46.669318 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

UndefinedObject(Object)>>doesNotUnderstand: #new
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	new
		exception: 	MessageNotUnderstood: receiver of "new" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'CuentaBancaria new printString '
		itsSelection: 	a Text for 'CuentaBancaria new printString '
		itsSelectionString: 	'CuentaBancaria new printString '
	Receiver's instance variables: 
		ast: 	DoIt
	^ CuentaBancaria new printString
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(801348352)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | 
textMorph shoutStyler style: textMorph text.
GLMPrintPoppe...etc...
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(801348352)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 

	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(386355456)
		textModel: 	a GLMRubricSmalltalkTextModel


MorphicAlarm(MessageSend)>>value
	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		receiver: 	a GLMMorphicPharoScriptRenderer
		selector: 	#popupPrint
		arguments: 	#()
		scheduledTime: 	4982316
		numArgs: 	0


MorphicAlarm>>value:
	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)
	Arguments and temporary variables: 
		anArgument: 	4982336
		nArgs: 	0
	Receiver's instance variables: 
		receiver: 	a GLMMorphicPharoScriptRenderer
		selector: 	#popupPrint
		arguments: 	#()
		scheduledTime: 	4982316
		numArgs: 	0


WorldState>>triggerAlarmsBefore:
	Receiver: a WorldState
	Arguments and temporary variables: 
		nowTime: 	4982336
		pending: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(83827456)))
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(917140224))(a SearchMorp...etc...
		lastStepTime: 	4982312
		lastStepMessage: 	nil
		lastCycleTime: 	4982336
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(83827456)))
		lastAlarmTime: 	4982312
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>runLocalStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		now: 	4982336
		morphToStep: 	nil
		stepTime: 	nil
		priorWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(917140224))(a SearchMorp...etc...
		lastStepTime: 	4982312
		lastStepMessage: 	nil
		lastCycleTime: 	4982336
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(83827456)))
		lastAlarmTime: 	4982312
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	nil
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(917140224))(a SearchMorp...etc...
		lastStepTime: 	4982312
		lastStepMessage: 	nil
		lastCycleTime: 	4982336
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(83827456)))
		lastAlarmTime: 	4982312
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a FadingMorph(150237440) a GLMSys...etc...
		fullBounds: 	(0@0) corner: (1264@721)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(917140224))(a SearchMorp...etc...
		lastStepTime: 	4982312
		lastStepMessage: 	nil
		lastCycleTime: 	4982336
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(83827456)))
		lastAlarmTime: 	4982312
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(917140224))(a SearchMorp...etc...
		lastStepTime: 	4982312
		lastStepMessage: 	nil
		lastCycleTime: 	4982336
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(83827456)))
		lastAlarmTime: 	4982312
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a FadingMorph(150237440) a GLMSys...etc...
		fullBounds: 	(0@0) corner: (1264@721)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65549
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#ExtraWorldList->#() )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #new
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint
MorphicAlarm(MessageSend)>>value
MorphicAlarm>>value:
WorldState>>triggerAlarmsBefore:
WorldState>>runLocalStepMethodsIn:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
ShouldBeImplemented: #new should have been implemented in UndefinedObject
23 December 2017 5:30:46.678318 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

UndefinedObject(Object)>>shouldBeImplemented
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

UndefinedObject(Object)>>new
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'Counter new.'
		itsSelection: 	a Text for 'Counter new.'
		itsSelectionString: 	'Counter new.'
	Receiver's instance variables: 
		ast: 	DoIt
	^ Counter new
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(801348352)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(801348352)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(386355456)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@31)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(464198400) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(734944512))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(386355456)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(576993024))(a DropList...etc...
		lastStepTime: 	5042314
		lastStepMessage: 	nil
		lastCycleTime: 	5042337
		alarms: 	a Heap()
		lastAlarmTime: 	5042314
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(700845824) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(576993024))(a DropList...etc...
		lastStepTime: 	5042314
		lastStepMessage: 	nil
		lastCycleTime: 	5042337
		alarms: 	a Heap()
		lastAlarmTime: 	5042314
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(576993024))(a DropList...etc...
		lastStepTime: 	5042314
		lastStepMessage: 	nil
		lastCycleTime: 	5042337
		alarms: 	a Heap()
		lastAlarmTime: 	5042314
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(576993024))(a DropList...etc...
		lastStepTime: 	5042314
		lastStepMessage: 	nil
		lastCycleTime: 	5042337
		alarms: 	a Heap()
		lastAlarmTime: 	5042314
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(700845824) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(913171200)
	Arguments and temporary variables: 
		aPoint: 	(256@365)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		bounds: 	(254.0@357.0) corner: (461.0@591.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(542393600)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(254.0@357.0) corner: (461.0@591.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (960749312) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(1018656000)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(913171200)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(254.0@357.0) corner: (461.0@591.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(542393600)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(254.0@357.0) corner: (461.0@591.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (960749312) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(1018656000)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(913171200)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(254.0@357.0) corner: (461.0@591.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(542393600)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(254.0@357.0) corner: (461.0@591.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (960749312) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(1018656000)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(913171200)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@31)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(464198400) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(734944512))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		evt: 	[(46.0@18.0) mouseDown yellow 288692218 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@31)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(464198400) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(734944512))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		anEvent: 	[(46.0@18.0) mouseDown yellow 288692218 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@31)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(464198400) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(734944512))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MouseButtonEvent>>sentTo:
	Receiver: [(46.0@18.0) mouseDown yellow 288692218 nil]
	Arguments and temporary variables: 
		anObject: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		timeStamp: 	288692218
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(46.0@18.0)
		handler: 	a RubEditingArea(801348352)
		wasHandled: 	true
		whichButton: 	2


RubEditingArea(Morph)>>handleEvent:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		anEvent: 	[(46.0@18.0) mouseDown yellow 288692218 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@31)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(464198400) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(734944512))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(46.0@18.0) mouseDown yellow 288692218 nil]
		aMorph: 	a RubEditingArea(801348352)
		globalPt: 	(46.0@18.0)
		localEvt: 	[(46.0@18.0) mouseDown yellow 288692218 nil]
		index: 	3
		child: 	a RubPrimarySelectionMorph(464198400)
		morphs: 	an Array(a RubPrimarySelectionMorph(464198400) a RubCursor(83827456))
		handler: 	a RubEditingArea(801348352)
		inside: 	false
		lastHandler: 	a RubScrolledTextMorph(386355456)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(46.0@18.0) mouseDown yellow 288692218 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(46.0@18.0) mouseDown yellow 288692218 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	288692218
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(46.0@18.0)
		handler: 	a RubEditingArea(801348352)
		wasHandled: 	true
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(46.0@18.0) mouseDown yellow 288692218 nil]
		aMorph: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(46.0@18.0) mouseDown yellow 288692218 nil]
		aMorph: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		morph: 	nil


RubEditingArea(Morph)>>processEvent:using:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		anEvent: 	[(46.0@18.0) mouseDown yellow 288692218 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@31)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(464198400) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(734944512))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(256@365) mouseDown yellow 288692218 nil]
		aMorph: 	a TransformWithLayoutMorph(318322432)
		globalPt: 	(256@365)
		localEvt: 	[(46.0@18.0) mouseDown yellow 288692218 nil]
		index: 	1
		child: 	a RubEditingArea(801348352)
		morphs: 	an Array(a RubEditingArea(801348352))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(386355456)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(256@365) mouseDown yellow 288692218 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(256@365) mouseDown yellow 288692218 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	288692218
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(256@365)
		handler: 	a RubScrolledTextMorph(386355456)
		wasHandled: 	false
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(256@365) mouseDown yellow 288692218 nil]
		aMorph: 	a TransformWithLayoutMorph(318322432)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
ShouldBeImplemented: #new should have been implemented in UndefinedObject
23 December 2017 5:30:56.892318 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

UndefinedObject(Object)>>shouldBeImplemented
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

UndefinedObject(Object)>>new
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'Counter new.'
		itsSelection: 	a Text for 'Counter new.'
		itsSelectionString: 	'Counter new.'
	Receiver's instance variables: 
		ast: 	DoIt
	^ Counter new
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(801348352)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(801348352)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(386355456)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@31)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(464198400) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(799008000))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(386355456)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(673368320))(a SearchMorp...etc...
		lastStepTime: 	5052528
		lastStepMessage: 	nil
		lastCycleTime: 	5052552
		alarms: 	a Heap()
		lastAlarmTime: 	5052528
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(700845824) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(673368320))(a SearchMorp...etc...
		lastStepTime: 	5052528
		lastStepMessage: 	nil
		lastCycleTime: 	5052552
		alarms: 	a Heap()
		lastAlarmTime: 	5052528
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(673368320))(a SearchMorp...etc...
		lastStepTime: 	5052528
		lastStepMessage: 	nil
		lastCycleTime: 	5052552
		alarms: 	a Heap()
		lastAlarmTime: 	5052528
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(673368320))(a SearchMorp...etc...
		lastStepTime: 	5052528
		lastStepMessage: 	nil
		lastCycleTime: 	5052552
		alarms: 	a Heap()
		lastAlarmTime: 	5052528
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(700845824) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(348880640)
	Arguments and temporary variables: 
		aPoint: 	(297@363)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		bounds: 	(295.0@355.0) corner: (502.0@589.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(857730304)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(295.0@355.0) corner: (502.0@589.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (715969792) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(889769728)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(348880640)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(295.0@355.0) corner: (502.0@589.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(857730304)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(295.0@355.0) corner: (502.0@589.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (715969792) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(889769728)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(348880640)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(295.0@355.0) corner: (502.0@589.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(857730304)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(295.0@355.0) corner: (502.0@589.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (715969792) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(889769728)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(348880640)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@31)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(464198400) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(799008000))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		evt: 	[(87.0@16.0) mouseDown yellow 288702796 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@31)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(464198400) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(799008000))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		anEvent: 	[(87.0@16.0) mouseDown yellow 288702796 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@31)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(464198400) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(799008000))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MouseButtonEvent>>sentTo:
	Receiver: [(87.0@16.0) mouseDown yellow 288702796 nil]
	Arguments and temporary variables: 
		anObject: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		timeStamp: 	288702796
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(87.0@16.0)
		handler: 	a RubEditingArea(801348352)
		wasHandled: 	true
		whichButton: 	2


RubEditingArea(Morph)>>handleEvent:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		anEvent: 	[(87.0@16.0) mouseDown yellow 288702796 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@31)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(464198400) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(799008000))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(87.0@16.0) mouseDown yellow 288702796 nil]
		aMorph: 	a RubEditingArea(801348352)
		globalPt: 	(87.0@16.0)
		localEvt: 	[(87.0@16.0) mouseDown yellow 288702796 nil]
		index: 	3
		child: 	a RubPrimarySelectionMorph(464198400)
		morphs: 	an Array(a RubPrimarySelectionMorph(464198400) a RubCursor(83827456))
		handler: 	a RubEditingArea(801348352)
		inside: 	false
		lastHandler: 	a RubScrolledTextMorph(386355456)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(87.0@16.0) mouseDown yellow 288702796 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(87.0@16.0) mouseDown yellow 288702796 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	288702796
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(87.0@16.0)
		handler: 	a RubEditingArea(801348352)
		wasHandled: 	true
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(87.0@16.0) mouseDown yellow 288702796 nil]
		aMorph: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(87.0@16.0) mouseDown yellow 288702796 nil]
		aMorph: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		morph: 	nil


RubEditingArea(Morph)>>processEvent:using:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		anEvent: 	[(87.0@16.0) mouseDown yellow 288702796 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@31)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(464198400) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(799008000))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(297@363) mouseDown yellow 288702796 nil]
		aMorph: 	a TransformWithLayoutMorph(318322432)
		globalPt: 	(297@363)
		localEvt: 	[(87.0@16.0) mouseDown yellow 288702796 nil]
		index: 	1
		child: 	a RubEditingArea(801348352)
		morphs: 	an Array(a RubEditingArea(801348352))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(386355456)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(297@363) mouseDown yellow 288702796 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(297@363) mouseDown yellow 288702796 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	288702796
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(297@363)
		handler: 	a RubScrolledTextMorph(386355456)
		wasHandled: 	false
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(297@363) mouseDown yellow 288702796 nil]
		aMorph: 	a TransformWithLayoutMorph(318322432)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(297@363) mouseDown yellow 288702796 nil]
		aMorph: 	a TransformWithLayoutMorph(318322432)
	Receiver's instance variables: 
		morph: 	nil


TransformWithLayoutMorph(Morph)>>processEvent:using:
	Receiver: a TransformWithLayoutMorph(318322432)
	Arguments and temporary variables: 
		anEvent: 	[(297@363) mouseDown yellow 288702796 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(210.0@347.0) corner: (862.0@682.0)
		owner: 	a RubTextScrollPane(298053888)
		submorphs: 	an Array(a RubEditingArea(801348352))
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (763954944) [other:  (kmDispatcher -> a KMDispatche...etc...
		transform: 	a MorphicTransform(angle = 0.0; scale = 1.0; offset = (-210.0@ -347....etc...
		smoothing: 	1
		localBounds: 	nil


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(297@363) mouseDown yellow 288702796 nil]
		aMorph: 	a RubTextScrollPane(298053888)
		globalPt: 	(297@363)
		localEvt: 	[(297@363) mouseDown yellow 288702796 nil]
		index: 	1
		child: 	a TransformWithLayoutMorph(318322432)
		morphs: 	an Array(a TransformWithLayoutMorph(318322432))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(386355456)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(297@363) mouseDown yellow 288702796 nil]
	Receiver's instance variables: 
		morph: 	nil



--- The full stack ---
UndefinedObject(Object)>>shouldBeImplemented
UndefinedObject(Object)>>new
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldState>>doOneSubCycleFor:
WorldMorph>>doOneSubCycle
MenuMorph>>invokeModalAt:in:allowKeyboard:
MenuMorph>>invokeModal:
MenuMorph>>invokeModal
RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
RubEditingArea(RubAbstractTextArea)>>mouseDown:
RubEditingArea(Morph)>>handleMouseDown:
MouseButtonEvent>>sentTo:
RubEditingArea(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubEditingArea(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
TransformWithLayoutMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubTextScrollPane(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubScrolledTextMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
LazyTabGroupMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEventTHERE_BE_DRAGONS_HERE
#suma: was sent to nil
23 December 2017 5:33:15.837318 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

UndefinedObject(Object)>>doesNotUnderstand: #suma:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	suma: 5
		exception: 	MessageNotUnderstood: receiver of "suma:" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'Counter suma: 5.'
		itsSelection: 	a Text for 'Counter suma: 5.'
		itsSelectionString: 	'Counter suma: 5.'
	Receiver's instance variables: 
		ast: 	DoIt
	^ Counter suma: 5
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(801348352)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(801348352)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(386355456)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(464198400) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(24259840))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(386355456)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(673368320))(a SearchMorp...etc...
		lastStepTime: 	5191474
		lastStepMessage: 	nil
		lastCycleTime: 	5191497
		alarms: 	a Heap()
		lastAlarmTime: 	5191474
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(700845824) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(673368320))(a SearchMorp...etc...
		lastStepTime: 	5191474
		lastStepMessage: 	nil
		lastCycleTime: 	5191497
		alarms: 	a Heap()
		lastAlarmTime: 	5191474
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(673368320))(a SearchMorp...etc...
		lastStepTime: 	5191474
		lastStepMessage: 	nil
		lastCycleTime: 	5191497
		alarms: 	a Heap()
		lastAlarmTime: 	5191474
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(673368320))(a SearchMorp...etc...
		lastStepTime: 	5191474
		lastStepMessage: 	nil
		lastCycleTime: 	5191497
		alarms: 	a Heap()
		lastAlarmTime: 	5191474
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(700845824) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(787085056)
	Arguments and temporary variables: 
		aPoint: 	(234@404)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		bounds: 	(232.0@396.0) corner: (439.0@630.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(16704768)'Do it and go' a ToggleMenuI...etc...
		fullBounds: 	(232.0@396.0) corner: (439.0@630.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (790744320) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(510957312)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(787085056)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(232.0@396.0) corner: (439.0@630.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(16704768)'Do it and go' a ToggleMenuI...etc...
		fullBounds: 	(232.0@396.0) corner: (439.0@630.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (790744320) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(510957312)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(787085056)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(232.0@396.0) corner: (439.0@630.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(16704768)'Do it and go' a ToggleMenuI...etc...
		fullBounds: 	(232.0@396.0) corner: (439.0@630.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (790744320) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(510957312)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(787085056)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(464198400) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(24259840))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		evt: 	[(24.0@57.0) mouseDown yellow 288841921 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(464198400) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(24259840))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		anEvent: 	[(24.0@57.0) mouseDown yellow 288841921 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(464198400) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(24259840))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MouseButtonEvent>>sentTo:
	Receiver: [(24.0@57.0) mouseDown yellow 288841921 nil]
	Arguments and temporary variables: 
		anObject: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		timeStamp: 	288841921
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(24.0@57.0)
		handler: 	a RubEditingArea(801348352)
		wasHandled: 	true
		whichButton: 	2


RubEditingArea(Morph)>>handleEvent:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		anEvent: 	[(24.0@57.0) mouseDown yellow 288841921 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(464198400) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(24259840))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(24.0@57.0) mouseDown yellow 288841921 nil]
		aMorph: 	a RubEditingArea(801348352)
		globalPt: 	(24.0@57.0)
		localEvt: 	[(24.0@57.0) mouseDown yellow 288841921 nil]
		index: 	3
		child: 	a RubPrimarySelectionMorph(464198400)
		morphs: 	an Array(a RubPrimarySelectionMorph(464198400) a RubCursor(83827456))
		handler: 	a RubEditingArea(801348352)
		inside: 	false
		lastHandler: 	a RubScrolledTextMorph(386355456)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(24.0@57.0) mouseDown yellow 288841921 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(24.0@57.0) mouseDown yellow 288841921 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	288841921
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(24.0@57.0)
		handler: 	a RubEditingArea(801348352)
		wasHandled: 	true
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(24.0@57.0) mouseDown yellow 288841921 nil]
		aMorph: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(24.0@57.0) mouseDown yellow 288841921 nil]
		aMorph: 	a RubEditingArea(801348352)
	Receiver's instance variables: 
		morph: 	nil


RubEditingArea(Morph)>>processEvent:using:
	Receiver: a RubEditingArea(801348352)
	Arguments and temporary variables: 
		anEvent: 	[(24.0@57.0) mouseDown yellow 288841921 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(318322432)
		submorphs: 	an Array(a RubPrimarySelectionMorph(464198400) a RubCursor(83827456)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (62920448) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(298053888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(83827456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(24259840))
		getMenuPolicy: 	a RubEditingArea(801348352)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(234@404) mouseDown yellow 288841921 nil]
		aMorph: 	a TransformWithLayoutMorph(318322432)
		globalPt: 	(234@404)
		localEvt: 	[(24.0@57.0) mouseDown yellow 288841921 nil]
		index: 	1
		child: 	a RubEditingArea(801348352)
		morphs: 	an Array(a RubEditingArea(801348352))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(386355456)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(234@404) mouseDown yellow 288841921 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(234@404) mouseDown yellow 288841921 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	288841921
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(234@404)
		handler: 	a RubScrolledTextMorph(386355456)
		wasHandled: 	false
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(234@404) mouseDown yellow 288841921 nil]
		aMorph: 	a TransformWithLayoutMorph(318322432)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(234@404) mouseDown yellow 288841921 nil]
		aMorph: 	a TransformWithLayoutMorph(318322432)
	Receiver's instance variables: 
		morph: 	nil


TransformWithLayoutMorph(Morph)>>processEvent:using:
	Receiver: a TransformWithLayoutMorph(318322432)
	Arguments and temporary variables: 
		anEvent: 	[(234@404) mouseDown yellow 288841921 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(210.0@347.0) corner: (862.0@682.0)
		owner: 	a RubTextScrollPane(298053888)
		submorphs: 	an Array(a RubEditingArea(801348352))
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (763954944) [other:  (kmDispatcher -> a KMDispatche...etc...
		transform: 	a MorphicTransform(angle = 0.0; scale = 1.0; offset = (-210.0@ -347....etc...
		smoothing: 	1
		localBounds: 	nil


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(234@404) mouseDown yellow 288841921 nil]
		aMorph: 	a RubTextScrollPane(298053888)
		globalPt: 	(234@404)
		localEvt: 	[(234@404) mouseDown yellow 288841921 nil]
		index: 	1
		child: 	a TransformWithLayoutMorph(318322432)
		morphs: 	an Array(a TransformWithLayoutMorph(318322432))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(386355456)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(234@404) mouseDown yellow 288841921 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(234@404) mouseDown yellow 288841921 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	288841921
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(234@404)
		handler: 	a RubScrolledTextMorph(386355456)
		wasHandled: 	false
		whichButton: 	2



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #suma:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldState>>doOneSubCycleFor:
WorldMorph>>doOneSubCycle
MenuMorph>>invokeModalAt:in:allowKeyboard:
MenuMorph>>invokeModal:
MenuMorph>>invokeModal
RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
RubEditingArea(RubAbstractTextArea)>>mouseDown:
RubEditingArea(Morph)>>handleMouseDown:
MouseButtonEvent>>sentTo:
RubEditingArea(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubEditingArea(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
TransformWithLayoutMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubTextScrollPane(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubScrolledTextMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
LazyTabGroupMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEventTHERE_BE_DRAGONS_HERETHERE_BE_DRAGONS_HERETHERE_BE_DRAGONS_HERE
#add: was sent to nil
23 December 2017 8:30:16.096805 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

UndefinedObject(Object)>>doesNotUnderstand: #add:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	add: 'hola'
		exception: 	MessageNotUnderstood: receiver of "add:" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'a add: ''hola'''
		itsSelection: 	a Text for 'a add: ''hola'''
		itsSelectionString: 	'a add: ''hola'''
	Receiver's instance variables: 
		ast: 	DoIt
	^ a add: 'hola'
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(761684480)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | 
textMorph shoutStyler style: textMorph text.
GLMPrintPoppe...etc...
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(761684480)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 

	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(965515776)
		textModel: 	a GLMRubricSmalltalkTextModel


MorphicAlarm(MessageSend)>>value
	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		receiver: 	a GLMMorphicPharoScriptRenderer
		selector: 	#popupPrint
		arguments: 	#()
		scheduledTime: 	15314996
		numArgs: 	0


MorphicAlarm>>value:
	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)
	Arguments and temporary variables: 
		anArgument: 	15315012
		nArgs: 	0
	Receiver's instance variables: 
		receiver: 	a GLMMorphicPharoScriptRenderer
		selector: 	#popupPrint
		arguments: 	#()
		scheduledTime: 	15314996
		numArgs: 	0


WorldState>>triggerAlarmsBefore:
	Receiver: a WorldState
	Arguments and temporary variables: 
		nowTime: 	15315012
		pending: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(909024768)))
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(22544384))(a SearchMorph...etc...
		lastStepTime: 	15314989
		lastStepMessage: 	nil
		lastCycleTime: 	15315012
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(909024768)))
		lastAlarmTime: 	15314989
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>runLocalStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		now: 	15315012
		morphToStep: 	nil
		stepTime: 	nil
		priorWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(22544384))(a SearchMorph...etc...
		lastStepTime: 	15314989
		lastStepMessage: 	nil
		lastCycleTime: 	15315012
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(909024768)))
		lastAlarmTime: 	15314989
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	nil
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(22544384))(a SearchMorph...etc...
		lastStepTime: 	15314989
		lastStepMessage: 	nil
		lastCycleTime: 	15315012
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(909024768)))
		lastAlarmTime: 	15314989
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(731235840) a Na...etc...
		fullBounds: 	(0@0) corner: (1264@721)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(22544384))(a SearchMorph...etc...
		lastStepTime: 	15314989
		lastStepMessage: 	nil
		lastCycleTime: 	15315012
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(909024768)))
		lastAlarmTime: 	15314989
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(22544384))(a SearchMorph...etc...
		lastStepTime: 	15314989
		lastStepMessage: 	nil
		lastCycleTime: 	15315012
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(909024768)))
		lastAlarmTime: 	15314989
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(731235840) a Na...etc...
		fullBounds: 	(0@0) corner: (1264@721)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65549
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#ExtraWorldList->#() )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		interactiveParser: 	nil
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #add:
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint
MorphicAlarm(MessageSend)>>value
MorphicAlarm>>value:
WorldState>>triggerAlarmsBefore:
WorldState>>runLocalStepMethodsIn:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#add: was sent to nil
23 December 2017 8:30:19.921805 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

UndefinedObject(Object)>>doesNotUnderstand: #add:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	add: 'hola'
		exception: 	MessageNotUnderstood: receiver of "add:" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'a add: ''hola'''
		itsSelection: 	a Text for 'a add: ''hola'''
		itsSelectionString: 	'a add: ''hola'''
	Receiver's instance variables: 
		ast: 	DoIt
	^ a add: 'hola'
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(761684480)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(761684480)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(965515776)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(761684480)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(483987456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(890199552) a RubCursor(909024768...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (558919680) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(434358272)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(909024768)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(673081088))
		getMenuPolicy: 	a RubEditingArea(761684480)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(965515776)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(871031296))(a DropList...etc...
		lastStepTime: 	15318800
		lastStepMessage: 	nil
		lastCycleTime: 	15318821
		alarms: 	a Heap()
		lastAlarmTime: 	15318800
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(731235840) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(871031296))(a DropList...etc...
		lastStepTime: 	15318800
		lastStepMessage: 	nil
		lastCycleTime: 	15318821
		alarms: 	a Heap()
		lastAlarmTime: 	15318800
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(871031296))(a DropList...etc...
		lastStepTime: 	15318800
		lastStepMessage: 	nil
		lastCycleTime: 	15318821
		alarms: 	a Heap()
		lastAlarmTime: 	15318800
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(871031296))(a DropList...etc...
		lastStepTime: 	15318800
		lastStepMessage: 	nil
		lastCycleTime: 	15318821
		alarms: 	a Heap()
		lastAlarmTime: 	15318800
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(731235840) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(157673728)
	Arguments and temporary variables: 
		aPoint: 	(428@311)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(761684480)
	Receiver's instance variables: 
		bounds: 	(426.0@303.0) corner: (633.0@537.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(459928576)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(426.0@303.0) corner: (633.0@537.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (605972992) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(155681536)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(157673728)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(426.0@303.0) corner: (633.0@537.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(459928576)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(426.0@303.0) corner: (633.0@537.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (605972992) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(155681536)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(157673728)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(426.0@303.0) corner: (633.0@537.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(459928576)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(426.0@303.0) corner: (633.0@537.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (605972992) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(155681536)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(761684480)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(157673728)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(483987456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(890199552) a RubCursor(909024768...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (558919680) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(434358272)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(909024768)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(673081088))
		getMenuPolicy: 	a RubEditingArea(761684480)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(761684480)
	Arguments and temporary variables: 
		evt: 	[(83@58) mouseDown yellow 342666000 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(483987456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(890199552) a RubCursor(909024768...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (558919680) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecoratorTHERE_BE_DRAGONS_HERE
#add: was sent to nil
23 December 2017 8:30:21.739805 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

UndefinedObject(Object)>>doesNotUnderstand: #add:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	add: 'hola'
		exception: 	MessageNotUnderstood: receiver of "add:" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

Message>>sentTo:
	Receiver: add: 'hola'
	Arguments and temporary variables: 
		receiver: 	nil
	Receiver's instance variables: 
		selector: 	#add:
		args: 	#('hola')
		lookupClass: 	UndefinedObject


UndefinedObject(Object)>>doesNotUnderstand: #add:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	add: 'hola'
		exception: 	MessageNotUnderstood: receiver of "add:" is nil
		resumeValue: 	MessageNotUnderstood: receiver of "add:" is nil
	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'a add: ''hola'''
		itsSelection: 	a Text for 'a add: ''hola'''
		itsSelectionString: 	'a add: ''hola'''
	Receiver's instance variables: 
		ast: 	DoIt
	^ a add: 'hola'
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(761684480)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(761684480)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(965515776)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(761684480)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(483987456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(890199552) a RubCursor(909024768...etc...
		fullBounds: 	(0@0) corner: (652@69)
		color: 	Color transparent
		extension: 	a MorphExtension (558919680) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(434358272)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(909024768)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(673081088))
		getMenuPolicy: 	a RubEditingArea(761684480)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(965515776)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(22544384))(a SearchMorph...etc...
		lastStepTime: 	15320631
		lastStepMessage: 	nil
		lastCycleTime: 	15320654
		alarms: 	a Heap()
		lastAlarmTime: 	15320631
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(731235840) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(22544384))(a SearchMorph...etc...
		lastStepTime: 	15320631
		lastStepMessage: 	nil
		lastCycleTime: 	15320654
		alarms: 	a Heap()
		lastAlarmTime: 	15320631
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(22544384))(a SearchMorph...etc...
		lastStepTime: 	15320631
		lastStepMessage: 	nil
		lastCycleTime: 	15320654
		alarms: 	a Heap()
		lastAlarmTime: 	15320631
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(22544384))(a SearchMorph...etc...
		lastStepTime: 	15320631
		lastStepMessage: 	nil
		lastCycleTime: 	15320654
		alarms: 	a Heap()
		lastAlarmTime: 	15320631
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(731235840) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(157673728)
	Arguments and temporary variables: 
		aPoint: 	(428@311)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(761684480)
	Receiver's instance variables: 
		bounds: 	(426.0@303.0) corner: (633.0@537.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(459928576)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(426.0@303.0) corner: (633.0@537.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (605972992) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(155681536)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(157673728)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(426.0@303.0) corner: (633.0@537.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(459928576)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(426.0@303.0) corner: (633.0@537.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (605972992) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(155681536)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(157673728)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(426.0@303.0) corner: (633.0@537.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(459928576)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(426.0@303.0) corner: (633.0@537.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (605972992) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(155681536)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(761684480)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(157673728)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(483987456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(890199552) a RubCursor(909024768...etc...
		fullBounds: 	(0@0) corner: (652@69)
		color: 	Color transparent
		extension: 	a MorphExtension (558919680) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(434358272)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(909024768)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(673081088))
		getMenuPolicy: 	a RubEditingArea(761684480)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(761684480)
	Arguments and temporary variables: 
		evt: 	[(83@58) mouseDown yellow 342666000 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(483987456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(890199552) a RubCursor(909024768...etc...
		fullBounds: 	(0@0) corner: (652@69)
		color: 	Color transparent
		extension: 	a MorphExtension (558919680) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(434358272)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(909024768)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(673081088))
		getMenuPolicy: 	a RubEditingArea(761684480)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(761684480)
	Arguments and temporary variables: 
		anEvent: 	[(83@58) mouseDown yellow 342666000 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(483987456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(890199552) a RubCursor(909024768...etc...
		fullBounds: 	(0@0) corner: (652@69)
		color: 	Color transparent
		extension: 	a MorphExtension (558919680) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(434358272)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(909024768)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(673081088))
		getMenuPolicy: 	a RubEditingArea(761684480)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MouseButtonEvent>>sentTo:
	Receiver: [(83@58) mouseDown yellow 342666000 nil]
	Arguments and temporary variables: 
		anObject: 	a RubEditingArea(761684480)
	Receiver's instance variables: 
		timeStamp: 	342666000
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(83@58)
		handler: 	a RubEditingArea(761684480)
		wasHandled: 	true
		whichButton: 	2


RubEditingArea(Morph)>>handleEvent:
	Receiver: a RubEditingArea(761684480)
	Arguments and temporary variables: 
		anEvent: 	[(83@58) mouseDown yellow 342666000 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(483987456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(890199552) a RubCursor(909024768...etc...
		fullBounds: 	(0@0) corner: (652@69)
		color: 	Color transparent
		extension: 	a MorphExtension (558919680) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(434358272)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(909024768)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(673081088))
		getMenuPolicy: 	a RubEditingArea(761684480)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERETHERE_BE_DRAGONS_HERE
Instance of ByteString did not understand #printIt
23 December 2017 8:50:03.333805 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

ByteString(Object)>>doesNotUnderstand: #printIt
	Receiver: 'hola'
	Arguments and temporary variables: 
		aMessage: 	printIt
		exception: 	MessageNotUnderstood: ByteString>>printIt
		resumeValue: 	nil
	Receiver's instance variables: 
'hola'

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'''hola'' printIt'
		itsSelection: 	a Text for '''hola'' printIt'
		itsSelectionString: 	'''hola'' printIt'
	Receiver's instance variables: 
		ast: 	DoIt
	^ 'hola' printIt
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(761684480)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(761684480)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(965515776)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(761684480)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@145)
		owner: 	a TransformWithLayoutMorph(483987456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(351857408) a RubCursor(909024768...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (558919680) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(434358272)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(909024768)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(546581248))
		getMenuPolicy: 	a RubEditingArea(761684480)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(965515776)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(22544384))(a SearchMorph...etc...
		lastStepTime: 	16502218
		lastStepMessage: 	nil
		lastCycleTime: 	16502241
		alarms: 	a Heap()
		lastAlarmTime: 	16502218
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(731235840) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(22544384))(a SearchMorph...etc...
		lastStepTime: 	16502218
		lastStepMessage: 	nil
		lastCycleTime: 	16502241
		alarms: 	a Heap()
		lastAlarmTime: 	16502218
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(22544384))(a SearchMorph...etc...
		lastStepTime: 	16502218
		lastStepMessage: 	nil
		lastCycleTime: 	16502241
		alarms: 	a Heap()
		lastAlarmTime: 	16502218
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(22544384))(a SearchMorph...etc...
		lastStepTime: 	16502218
		lastStepMessage: 	nil
		lastCycleTime: 	16502241
		alarms: 	a Heap()
		lastAlarmTime: 	16502218
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(731235840) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(321507072)
	Arguments and temporary variables: 
		aPoint: 	(400@392)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(761684480)
	Receiver's instance variables: 
		bounds: 	(398.0@384.0) corner: (605.0@618.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(545940480)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(398.0@384.0) corner: (605.0@618.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (532688640) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(500719104)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(321507072)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(398.0@384.0) corner: (605.0@618.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(545940480)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(398.0@384.0) corner: (605.0@618.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (532688640) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(500719104)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(321507072)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(398.0@384.0) corner: (605.0@618.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(545940480)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(398.0@384.0) corner: (605.0@618.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (532688640) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(500719104)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(761684480)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(321507072)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@145)
		owner: 	a TransformWithLayoutMorph(483987456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(351857408) a RubCursor(909024768...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (558919680) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(434358272)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(909024768)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(546581248))
		getMenuPolicy: 	a RubEditingArea(761684480)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(761684480)
	Arguments and temporary variables: 
		evt: 	[(55@139) mouseDown yellow 343849484 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@145)
		owner: 	a TransformWithLayoutMorph(483987456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(351857408) a RubCursor(909024768...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (558919680) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(434358272)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(909024768)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(546581248))
		getMenuPolicy: 	a RubEditingArea(761684480)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(761684480)
	Arguments and temporary variables: 
		anEvent: 	[(55@139) mouseDown yellow 343849484 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@145)
		owner: 	a TransformWithLayoutMorph(483987456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(351857408) a RubCursor(909024768...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (558919680) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(434358272)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(909024768)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(546581248))
		getMenuPolicy: 	a RubEditingArea(761684480)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MouseButtonEvent>>sentTo:
	Receiver: [(55@139) mouseDown yellow 343849484 nil]
	Arguments and temporary variables: 
		anObject: 	a RubEditingArea(761684480)
	Receiver's instance variables: 
		timeStamp: 	343849484
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(55@139)
		handler: 	a RubEditingArea(761684480)
		wasHandled: 	true
		whichButton: 	2


RubEditingArea(Morph)>>handleEvent:
	Receiver: a RubEditingArea(761684480)
	Arguments and temporary variables: 
		anEvent: 	[(55@139) mouseDown yellow 343849484 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@145)
		owner: 	a TransformWithLayoutMorph(483987456)
		submorphs: 	an Array(a RubPrimarySelectionMorph(351857408) a RubCursor(909024768...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (558919680) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(434358272)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(909024768)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(546581248))
		getMenuPolicy: 	a RubEditingArea(761684480)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(55@139) mouseDown yellow 343849484 nil]
		aMorph: 	a RubEditingArea(761684480)
		globalPt: 	(55@139)
		localEvt: 	[(55@139) mouseDown yellow 343849484 nil]
		index: 	3
		child: 	a RubPrimarySelectionMorph(351857408)
		morphs: 	an Array(a RubPrimarySelectionMorph(351857408) a RubCursor(909024768))
		handler: 	a RubEditingArea(761684480)
		inside: 	false
		lastHandler: 	a RubScrolledTextMorph(965515776)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(55@139) mouseDown yellow 343849484 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(55@139) mouseDown yellow 343849484 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	343849484
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(55@139)
		handler: 	a RubEditingArea(761684480)
		wasHandled: 	true
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(55@139) mouseDown yellow 343849484 nil]
		aMorph: 	a RubEditingArea(761684480)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(55@139) mouseDown yellow 343849484 nil]
		aMorph: 	a RubEditingArea(761684480)
	Receiver's instance variables: 
		morph: 	nil


RubEditingArea(Morph)>>processEvent:using:
	Receiver: a RubEditingArea(761684480)
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
#theNonMetaClass was sent to nil
23 December 2017 8:55:53.800805 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

UndefinedObject(Object)>>doesNotUnderstand: #theNonMetaClass
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	theNonMetaClass
		exception: 	MessageNotUnderstood: receiver of "theNonMetaClass" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

ClassWidget>>selectClass:
	Receiver: a ClassWidget
	Arguments and temporary variables: 
		aClass: 	nil
	Receiver's instance variables: 
		dependents: 	THERE_BE_DRAGONS_HERE
Instance of Usuario class did not understand #numero
26 December 2017 11:09:51.679046 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

Usuario class(Object)>>doesNotUnderstand: #numero
	Receiver: Usuario
	Arguments and temporary variables: 
		aMessage: 	numero
		exception: 	MessageNotUnderstood: Usuario class>>numero
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#agregarAmigo:->Usuario>>#agregarAmigo: #agregar...etc...
		format: 	65543
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Usuario
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-User-Examples'
		traitComposition: 	{}
		localSelectors: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		usuario: 	Usuario
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
Instance of Usuario class did not understand #numero
26 December 2017 11:11:18.357046 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

Usuario class(Object)>>doesNotUnderstand: #numero
	Receiver: Usuario
	Arguments and temporary variables: 
		aMessage: 	numero
		exception: 	MessageNotUnderstood: Usuario class>>numero
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#agregarAmigo:->Usuario>>#agregarAmigo: #agregar...etc...
		format: 	65543
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Usuario
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-User-Examples'
		traitComposition: 	{}
		localSelectors: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		usuario: 	Usuario
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'| usuario |
usuario := Usuario newNumero: 2214505590.
usuario ...etc...
		itsSelection: 	a Text for '| usuario |
usuario := Usuario newNumero: 2214505590....etc...
		itsSelectionString: 	'| usuario |
usuario := Usuario newNumero: 2214505590.
usua...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	| usuario |
	usuario := Usuario newNumero: 2214505590.
	^ usuario nu...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(594001664)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(594001664)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(233510400)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(594001664)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(812262656)
		submorphs: 	an Array(a RubPrimarySelectionMorph(598260224) a RubCursor(575357696...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (56390144) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(580103936)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(575357696)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(711281408))
		getMenuPolicy: 	a RubEditingArea(594001664)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(233510400)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(141766400))(a SearchMorp...etc...
		lastStepTime: 	1636450
		lastStepMessage: 	nil
		lastCycleTime: 	1636473
		alarms: 	a Heap()
		lastAlarmTime: 	1636450
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(771465472) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(141766400))(a SearchMorp...etc...
		lastStepTime: 	1636450
		lastStepMessage: 	nil
		lastCycleTime: 	1636473
		alarms: 	a Heap()
		lastAlarmTime: 	1636450
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(141766400))(a SearchMorp...etc...
		lastStepTime: 	1636450
		lastStepMessage: 	nil
		lastCycleTime: 	1636473
		alarms: 	a Heap()
		lastAlarmTime: 	1636450
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(141766400))(a SearchMorp...etc...
		lastStepTime: 	1636450
		lastStepMessage: 	nil
		lastCycleTime: 	1636473
		alarms: 	a Heap()
		lastAlarmTime: 	1636450
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(771465472) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(945649408)
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
Instance of Usuario class did not understand #numero
26 December 2017 11:11:20.818046 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

Usuario class(Object)>>doesNotUnderstand: #numero
	Receiver: Usuario
	Arguments and temporary variables: 
		aMessage: 	numero
		exception: 	MessageNotUnderstood: Usuario class>>numero
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#agregarAmigo:->Usuario>>#agregarAmigo: #agregar...etc...
		format: 	65543
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Usuario
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-User-Examples'
		traitComposition: 	{}
		localSelectors: 	nil


Message>>sentTo:
	Receiver: numero
	Arguments and temporary variables: 
		receiver: 	Usuario
	Receiver's instance variables: 
		selector: 	#numero
		args: 	#()
		lookupClass: 	Usuario class


Usuario class(Object)>>doesNotUnderstand: #numero
	Receiver: Usuario
	Arguments and temporary variables: 
		aMessage: 	numero
		exception: 	MessageNotUnderstood: Usuario class>>numero
		resumeValue: 	MessageNotUnderstood: Usuario class>>numero
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#agregarAmigo:->Usuario>>#agregarAmigo: #agregar...etc...
		format: 	65543
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Usuario
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-User-Examples'
		traitComposition: 	{}
		localSelectors: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		usuario: 	Usuario
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'| usuario |
usuario := Usuario newNumero: 2214505590.
usuario ...etc...
		itsSelection: 	a Text for '| usuario |
usuario := Usuario newNumero: 2214505590....etc...
		itsSelectionString: 	'| usuario |
usuario := Usuario newNumero: 2214505590.
usua...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	| usuario |
	usuario := Usuario newNumero: 2214505590.
	^ usuario nu...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(594001664)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(594001664)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(233510400)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(594001664)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(812262656)
		submorphs: 	an Array(a RubPrimarySelectionMorph(598260224) a RubCursor(575357696...etc...
		fullBounds: 	(0@0) corner: (652@69)
		color: 	Color transparent
		extension: 	a MorphExtension (56390144) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(580103936)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(575357696)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(711281408))
		getMenuPolicy: 	a RubEditingArea(594001664)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(233510400)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(21042432))(a DropListM...etc...
		lastStepTime: 	1638928
		lastStepMessage: 	nil
		lastCycleTime: 	1638950
		alarms: 	a Heap()
		lastAlarmTime: 	1638928
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(771465472) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(21042432))(a DropListM...etc...
		lastStepTime: 	1638928
		lastStepMessage: 	nil
		lastCycleTime: 	1638950
		alarms: 	a Heap()
		lastAlarmTime: 	1638928
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(21042432))(a DropListM...etc...
		lastStepTime: 	1638928
		lastStepMessage: 	nil
		lastCycleTime: 	1638950
		alarms: 	a Heap()
		lastAlarmTime: 	1638928
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(21042432))(a DropListM...etc...
		lastStepTime: 	1638928
		lastStepMessage: 	nil
		lastCycleTime: 	1638950
		alarms: 	a Heap()
		lastAlarmTime: 	1638928
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(771465472) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(945649408)
	Arguments and temporary variables: 
		aPoint: 	(744@303)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(594001664)
	Receiver's instance variables: 
		bounds: 	(742.0@295.0) corner: (949.0@529.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(796143104)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(742.0@295.0) corner: (949.0@529.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (897552128) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(882700032)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(945649408)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(742.0@295.0) corner: (949.0@529.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(796143104)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(742.0@295.0) corner: (949.0@529.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (897552128) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(882700032)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(945649408)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(742.0@295.0) corner: (949.0@529.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(796143104)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(742.0@295.0) corner: (949.0@529.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (897552128) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(882700032)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(594001664)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(945649408)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(812262656)
		submorphs: 	an Array(a RubPrimarySelectionMorph(598260224) a RubCursor(575357696...etc...
		fullBounds: 	(0@0) corner: (652@69)
		color: 	Color transparent
		extension: 	a MorphExtension (56390144) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(580103936)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(575357696)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(711281408))
		getMenuPolicy: 	a RubEditingArea(594001664)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(594001664)
	Arguments and temporary variables: 
		evt: 	[(170@50) mouseDown yellow 74653369 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(812262656)
		submorphs: 	an Array(a RubPrimarySelectionMorph(598260224) a RubCursor(575357696...etc...
		fullBounds: 	(0@0) corner: (652@69)
		color: 	Color transparent
		extension: 	a MorphExtension (56390144) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(580103936)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(575357696)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(711281408))
		getMenuPolicy: 	a RubEditingArea(594001664)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(594001664)
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
Instance of LargePositiveInteger did not understand #numero
26 December 2017 11:17:25.787046 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

LargePositiveInteger(Object)>>doesNotUnderstand: #numero
	Receiver: 2214505590
	Arguments and temporary variables: 
		aMessage: 	numero
		exception: 	MessageNotUnderstood: LargePositiveInteger>>numero
		resumeValue: 	nil
	Receiver's instance variables: 
2214505590

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'Usuario newNumero: 2214505590 numero'
		itsSelection: 	a Text for 'Usuario newNumero: 2214505590 numero'
		itsSelectionString: 	'Usuario newNumero: 2214505590 numero'
	Receiver's instance variables: 
		ast: 	DoIt
	^ Usuario newNumero: 2214505590 numero
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(594001664)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | 
textMorph shoutStyler style: textMorph text.
GLMPrintPoppe...etc...
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(594001664)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 

	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(233510400)
		textModel: 	a GLMRubricSmalltalkTextModel


MorphicAlarm(MessageSend)>>value
	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		receiver: 	a GLMMorphicPharoScriptRenderer
		selector: 	#popupPrint
		arguments: 	#()
		scheduledTime: 	2003900
		numArgs: 	0


MorphicAlarm>>value:
	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)
	Arguments and temporary variables: 
		anArgument: 	2003918
		nArgs: 	0
	Receiver's instance variables: 
		receiver: 	a GLMMorphicPharoScriptRenderer
		selector: 	#popupPrint
		arguments: 	#()
		scheduledTime: 	2003900
		numArgs: 	0


WorldState>>triggerAlarmsBefore:
	Receiver: a WorldState
	Arguments and temporary variables: 
		nowTime: 	2003918
		pending: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(575357696)))
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(871031296))(a DropList...etc...
		lastStepTime: 	2003895
		lastStepMessage: 	nil
		lastCycleTime: 	2003918
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(575357696)))
		lastAlarmTime: 	2003895
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>runLocalStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		now: 	2003918
		morphToStep: 	nil
		stepTime: 	nil
		priorWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(871031296))(a DropList...etc...
		lastStepTime: 	2003895
		lastStepMessage: 	nil
		lastCycleTime: 	2003918
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(575357696)))
		lastAlarmTime: 	2003895
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	nil
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(871031296))(a DropList...etc...
		lastStepTime: 	2003895
		lastStepMessage: 	nil
		lastCycleTime: 	2003918
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(575357696)))
		lastAlarmTime: 	2003895
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(771465472) a Na...etc...
		fullBounds: 	(0@0) corner: (1264@721)
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(871031296))(a DropList...etc...
		lastStepTime: 	2003895
		lastStepMessage: 	nil
		lastCycleTime: 	2003918
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(575357696)))
		lastAlarmTime: 	2003895
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(871031296))(a DropList...etc...
		lastStepTime: 	2003895
		lastStepMessage: 	nil
		lastCycleTime: 	2003918
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(575357696)))
		lastAlarmTime: 	2003895
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
Instance of Usuario class did not understand #printIt
26 December 2017 11:22:35.131046 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

Usuario class(Object)>>doesNotUnderstand: #printIt
	Receiver: Usuario
	Arguments and temporary variables: 
		aMessage: 	printIt
		exception: 	MessageNotUnderstood: Usuario class>>printIt
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#agregarAmigo:->Usuario>>#agregarAmigo: #agregar...etc...
		format: 	65543
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Usuario
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-User-Examples'
		traitComposition: 	{}
		localSelectors: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		usuario: 	Usuario
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'| usuario |
usuario := Usuario newNumero: 2214505590.
usuario ...etc...
		itsSelection: 	a Text for '| usuario |
usuario := Usuario newNumero: 2214505590....etc...
		itsSelectionString: 	'| usuario |
usuario := Usuario newNumero: 2214505590.
usua...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	| usuario |
	usuario := Usuario newNumero: 2214505590.
	^ usuario pr...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(594001664)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(594001664)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(233510400)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(594001664)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(812262656)
		submorphs: 	an Array(a RubPrimarySelectionMorph(795049984) a RubCursor(575357696...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (56390144) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(580103936)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(575357696)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(252596480))
		getMenuPolicy: 	a RubEditingArea(594001664)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(233510400)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(891642624))(a SearchMorp...etc...
		lastStepTime: 	2313228
		lastStepMessage: 	nil
		lastCycleTime: 	2313251
		alarms: 	a Heap()
		lastAlarmTime: 	2313228
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(771465472) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(891642624))(a SearchMorp...etc...
		lastStepTime: 	2313228
		lastStepMessage: 	nil
		lastCycleTime: 	2313251
		alarms: 	a Heap()
		lastAlarmTime: 	2313228
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(891642624))(a SearchMorp...etc...
		lastStepTime: 	2313228
		lastStepMessage: 	nil
		lastCycleTime: 	2313251
		alarms: 	a Heap()
		lastAlarmTime: 	2313228
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(891642624))(a SearchMorp...etc...
		lastStepTime: 	2313228
		lastStepMessage: 	nil
		lastCycleTime: 	2313251
		alarms: 	a Heap()
		lastAlarmTime: 	2313228
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(771465472) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(411726592)
	Arguments and temporary variables: 
		aPoint: 	(647@304)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(594001664)
	Receiver's instance variables: 
		bounds: 	(645.0@296.0) corner: (852.0@530.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(317024768)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(645.0@296.0) corner: (852.0@530.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (699105792) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(330765056)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(411726592)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(645.0@296.0) corner: (852.0@530.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(317024768)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(645.0@296.0) corner: (852.0@530.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (699105792) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(330765056)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(411726592)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(645.0@296.0) corner: (852.0@530.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(317024768)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(645.0@296.0) corner: (852.0@530.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (699105792) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(330765056)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(594001664)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(411726592)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(812262656)
		submorphs: 	an Array(a RubPrimarySelectionMorph(795049984) a RubCursor(575357696...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (56390144) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(580103936)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(575357696)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(252596480))
		getMenuPolicy: 	a RubEditingArea(594001664)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(594001664)
	Arguments and temporary variables: 
		evt: 	[(73@51) mouseDown yellow 75329713 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(812262656)
		submorphs: 	an Array(a RubPrimarySelectionMorph(795049984) a RubCursor(575357696...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (56390144) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(580103936)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(575357696)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(252596480))
		getMenuPolicy: 	a RubEditingArea(594001664)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(594001664)
	Arguments and temporary variables: 
		anEvent: 	[(73@51) mouseDown yellow 75329713 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(812262656)
		submorphs: 	an Array(a RubPrimarySelectionMorph(795049984) a RubCursor(575357696...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (56390144) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(580103936)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(575357696)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(252596480))
		getMenuPolicy: 	a RubEditingArea(594001664)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MouseButtonEvent>>sentTo:
	Receiver: [(73@51) mouseDown yellow 75329713 nil]
	Arguments and temporary variables: 
		anObject: 	a RubEditingArea(594001664)
	Receiver's instance variables: 
		timeStamp: 	75329713
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(73@51)
		handler: 	a RubEditingArea(594001664)
		wasHandled: 	true
		whichButton: 	2


RubEditingArea(Morph)>>handleEvent:
	Receiver: a RubEditingArea(594001664)
	Arguments and temporary variables: 
		anEvent: 	[(73@51) mouseDown yellow 75329713 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(812262656)
		submorphs: 	an Array(a RubPrimarySelectionMorph(795049984) a RubCursor(575357696...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (56390144) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(580103936)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(575357696)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(252596480))
		getMenuPolicy: 	a RubEditingArea(594001664)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(73@51) mouseDown yellow 75329713 nil]
		aMorph: 	a RubEditingArea(594001664)
		globalPt: 	(73@51)
		localEvt: 	[(73@51) mouseDown yellow 75329713 nil]
		index: 	3
		child: 	a RubPrimarySelectionMorph(795049984)
		morphs: 	an Array(a RubPrimarySelectionMorph(795049984) a RubCursor(575357696))
		handler: 	a RubEditingArea(594001664)
		inside: 	false
		lastHandler: 	a RubScrolledTextMorph(233510400)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(73@51) mouseDown yellow 75329713 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(73@51) mouseDown yellow 75329713 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	75329713
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(73@51)
		handler: 	a RubEditingArea(594001664)
		wasHandled: 	true
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(73@51) mouseDown yellow 75329713 nil]
		aMorph: 	a RubEditingArea(594001664)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
Instance of Usuario class did not understand #suma10
26 December 2017 11:26:07.155046 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

Usuario class(Object)>>doesNotUnderstand: #suma10
	Receiver: Usuario
	Arguments and temporary variables: 
		aMessage: 	suma10
		exception: 	MessageNotUnderstood: Usuario class>>suma10
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#agregarAmigo:->Usuario>>#agregarAmigo: #agregar...etc...
		format: 	65543
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Usuario
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-User-Examples'
		traitComposition: 	{}
		localSelectors: 	nil


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		usuario: 	Usuario
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'| usuario |
usuario := Usuario newNumero: 2214505590.
usuario ...etc...
		itsSelection: 	a Text for '| usuario |
usuario := Usuario newNumero: 2214505590....etc...
		itsSelectionString: 	'| usuario |
usuario := Usuario newNumero: 2214505590.
usua...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	| usuario |
	usuario := Usuario newNumero: 2214505590.
	^ usuario su...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(774138112)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(774138112)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(862121216)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(774138112)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(411986944)
		submorphs: 	an Array(a RubPrimarySelectionMorph(56452352) a RubCursor(1049844224...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (203457024) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(781320192)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(1049844224)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(710654720))
		getMenuPolicy: 	a RubEditingArea(774138112)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(862121216)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(871031296))(a DropList...etc...
		lastStepTime: 	2525254
		lastStepMessage: 	nil
		lastCycleTime: 	2525278
		alarms: 	a Heap()
		lastAlarmTime: 	2525254
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(598111488) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(871031296))(a DropList...etc...
		lastStepTime: 	2525254
		lastStepMessage: 	nil
		lastCycleTime: 	2525278
		alarms: 	a Heap()
		lastAlarmTime: 	2525254
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(871031296))(a DropList...etc...
		lastStepTime: 	2525254
		lastStepMessage: 	nil
		lastCycleTime: 	2525278
		alarms: 	a Heap()
		lastAlarmTime: 	2525254
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(871031296))(a DropList...etc...
		lastStepTime: 	2525254
		lastStepMessage: 	nil
		lastCycleTime: 	2525278
		alarms: 	a Heap()
		lastAlarmTime: 	2525254
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(598111488) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(672207104)
	Arguments and temporary variables: 
		aPoint: 	(710@202)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(774138112)
	Receiver's instance variables: 
		bounds: 	(708.0@194.0) corner: (915.0@430.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(498637312)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(708.0@194.0) corner: (916.0@431.0)
		color: 	(Color r: 0.775 g: 0.775 b: 0.775 alpha: 1.0)
		extension: 	a MorphExtension (747604224) [other:  (basicColor -> Color lightGray...etc...
		borderWidth: 	1
		borderColor: 	Color gray
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(333649920)'Inspect it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(672207104)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(708.0@194.0) corner: (915.0@430.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(498637312)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(708.0@194.0) corner: (916.0@431.0)
		color: 	(Color r: 0.775 g: 0.775 b: 0.775 alpha: 1.0)
		extension: 	a MorphExtension (747604224) [other:  (basicColor -> Color lightGray...etc...
		borderWidth: 	1
		borderColor: 	Color gray
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(333649920)'Inspect it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(672207104)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(708.0@194.0) corner: (915.0@430.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(498637312)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(708.0@194.0) corner: (916.0@431.0)
		color: 	(Color r: 0.775 g: 0.775 b: 0.775 alpha: 1.0)
		extension: 	a MorphExtension (747604224) [other:  (basicColor -> Color lightGray...etc...
		borderWidth: 	1
		borderColor: 	Color gray
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(333649920)'Inspect it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(774138112)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(672207104)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(411986944)
		submorphs: 	an Array(a RubPrimarySelectionMorph(56452352) a RubCursor(1049844224...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (203457024) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(781320192)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(1049844224)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(710654720))
		getMenuPolicy: 	a RubEditingArea(774138112)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(774138112)
	Arguments and temporary variables: 
		evt: 	[(67.0@44.0) mouseDown yellow 75541978 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(411986944)
		submorphs: 	an Array(a RubPrimarySelectionMorph(56452352) a RubCursor(1049844224...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (203457024) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(781320192)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(1049844224)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(710654720))
		getMenuPolicy: 	a RubEditingArea(774138112)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(774138112)
	Arguments and temporary variables: 
		anEvent: 	[(67.0@44.0) mouseDown yellow 75541978 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(411986944)
		submorphs: 	an Array(a RubPrimarySelectionMorph(56452352) a RubCursor(1049844224...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (203457024) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(781320192)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(1049844224)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(710654720))
		getMenuPolicy: 	a RubEditingArea(774138112)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MouseButtonEvent>>sentTo:
	Receiver: [(67.0@44.0) mouseDown yellow 75541978 nil]
	Arguments and temporary variables: 
		anObject: 	a RubEditingArea(774138112)
	Receiver's instance variables: 
		timeStamp: 	75541978
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(67.0@44.0)
		handler: 	a RubEditingArea(774138112)
		wasHandled: 	true
		whichButton: 	2


RubEditingArea(Morph)>>handleEvent:
	Receiver: a RubEditingArea(774138112)
	Arguments and temporary variables: 
		anEvent: 	[(67.0@44.0) mouseDown yellow 75541978 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(411986944)
		submorphs: 	an Array(a RubPrimarySelectionMorph(56452352) a RubCursor(1049844224...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (203457024) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(781320192)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(1049844224)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(710654720))
		getMenuPolicy: 	a RubEditingArea(774138112)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(67.0@44.0) mouseDown yellow 75541978 nil]
		aMorph: 	a RubEditingArea(774138112)
		globalPt: 	(67.0@44.0)
		localEvt: 	[(67.0@44.0) mouseDown yellow 75541978 nil]
		index: 	3
		child: 	a RubPrimarySelectionMorph(56452352)
		morphs: 	an Array(a RubPrimarySelectionMorph(56452352) a RubCursor(1049844224))
		handler: 	a RubEditingArea(774138112)
		inside: 	false
		lastHandler: 	a RubScrolledTextMorph(862121216)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(67.0@44.0) mouseDown yellow 75541978 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(67.0@44.0) mouseDown yellow 75541978 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	75541978
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(67.0@44.0)
		handler: 	a RubEditingArea(774138112)
		wasHandled: 	true
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(67.0@44.0) mouseDown yellow 75541978 nil]
		aMorph: 	a RubEditingArea(774138112)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(67.0@44.0) mouseDown yellow 75541978 nil]
		aMorph: 	a RubEditingArea(774138112)
	Receiver's instance variables: 
		morph: 	nil


RubEditingArea(Morph)>>processEvent:using:
	Receiver: a RubEditingArea(774138112)
	Arguments and temporary variables: 
		anEvent: 	[(67.0@44.0) mouseDown yellow 75541978 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(411986944)
		submorphs: 	an Array(a RubPrimarySelectionMorph(56452352) a RubCursor(1049844224...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (203457024) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(781320192)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(1049844224)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(710654720))
		getMenuPolicy: 	a RubEditingArea(774138112)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(710@202) mouseDown yellow 75541978 nil]
		aMorph: 	a TransformWithLayoutMorph(411986944)
		globalPt: 	(710@202)
		localEvt: 	[(67.0@44.0) mouseDown yellow 75541978 nil]
		index: 	1
		child: 	a RubEditingArea(774138112)
		morphs: 	an Array(a RubEditingArea(774138112))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(862121216)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: THERE_BE_DRAGONS_HERETHERE_BE_DRAGONS_HERE
Instance of LargePositiveInteger did not understand #printIt
27 December 2017 3:03:53.80734 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

LargePositiveInteger(Object)>>doesNotUnderstand: #printIt
	Receiver: 2214505590
	Arguments and temporary variables: 
		aMessage: 	printIt
		exception: 	MessageNotUnderstood: LargePositiveInteger>>printIt
		resumeValue: 	nil
	Receiver's instance variables: 
2214505590

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		usuario: 	an Usuario
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'| usuario |
usuario := Usuario newNumero: 2214505590.
usuario ...etc...
		itsSelection: 	a Text for '| usuario |
usuario := Usuario newNumero: 2214505590....etc...
		itsSelectionString: 	'| usuario |
usuario := Usuario newNumero: 2214505590.
usua...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	| usuario |
	usuario := Usuario newNumero: 2214505590.
	^ usuario nu...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(774138112)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(774138112)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(862121216)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(774138112)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(411986944)
		submorphs: 	an Array(a RubPrimarySelectionMorph(787366912) a RubCursor(104984422...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (203457024) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(781320192)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(1049844224)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(890234880))
		getMenuPolicy: 	a RubEditingArea(774138112)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(862121216)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(22544384))(a SearchMorph...etc...
		lastStepTime: 	256876
		lastStepMessage: 	nil
		lastCycleTime: 	256900
		alarms: 	a Heap()
		lastAlarmTime: 	256876
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(598111488) a Na...etc...
		fullBounds: 	(0@0) corner: (1264@721)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(22544384))(a SearchMorph...etc...
		lastStepTime: 	256876
		lastStepMessage: 	nil
		lastCycleTime: 	256900
		alarms: 	a Heap()
		lastAlarmTime: 	256876
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(22544384))(a SearchMorph...etc...
		lastStepTime: 	256876
		lastStepMessage: 	nil
		lastCycleTime: 	256900
		alarms: 	a Heap()
		lastAlarmTime: 	256876
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(22544384))(a SearchMorph...etc...
		lastStepTime: 	256876
		lastStepMessage: 	nil
		lastCycleTime: 	256900
		alarms: 	a Heap()
		lastAlarmTime: 	256876
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(598111488) a Na...etc...
		fullBounds: 	(0@0) corner: (1264@721)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(286406656)
	Arguments and temporary variables: 
		aPoint: 	(726@196)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(774138112)
	Receiver's instance variables: 
		bounds: 	(724.0@188.0) corner: (931.0@424.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(294693376)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(724.0@188.0) corner: (932.0@425.0)
		color: 	(Color r: 0.775 g: 0.775 b: 0.775 alpha: 1.0)
		extension: 	a MorphExtension (991952896) [other:  (basicColor -> Color lightGray...etc...
		borderWidth: 	1
		borderColor: 	Color gray
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(1037703680)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(286406656)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(724.0@188.0) corner: (931.0@424.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(294693376)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(724.0@188.0) corner: (932.0@425.0)
		color: 	(Color r: 0.775 g: 0.775 b: 0.775 alpha: 1.0)
		extension: 	a MorphExtension (991952896) [other:  (basicColor -> Color lightGray...etc...
		borderWidth: 	1
		borderColor: 	Color gray
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(1037703680)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(286406656)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(724.0@188.0) corner: (931.0@424.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(294693376)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(724.0@188.0) corner: (932.0@425.0)
		color: 	(Color r: 0.775 g: 0.775 b: 0.775 alpha: 1.0)
		extension: 	a MorphExtension (991952896) [other:  (basicColor -> Color lightGray...etc...
		borderWidth: 	1
		borderColor: 	Color gray
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(1037703680)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(774138112)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(286406656)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(411986944)
		submorphs: 	an Array(a RubPrimarySelectionMorph(787366912) a RubCursor(104984422...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (203457024) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(781320192)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(1049844224)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(890234880))
		getMenuPolicy: 	a RubEditingArea(774138112)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(774138112)
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
Instance of ByteString did not understand #printIt
27 December 2017 3:04:19.44634 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

ByteString(Object)>>doesNotUnderstand: #printIt
	Receiver: '2214505590'
	Arguments and temporary variables: 
		aMessage: 	printIt
		exception: 	MessageNotUnderstood: ByteString>>printIt
		resumeValue: 	nil
	Receiver's instance variables: 
'2214505590'

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		usuario: 	an Usuario
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'| usuario |
usuario := Usuario newNumero: ''2214505590''.
usua...etc...
		itsSelection: 	a Text for '| usuario |
usuario := Usuario newNumero: ''221450559...etc...
		itsSelectionString: 	'| usuario |
usuario := Usuario newNumero: ''2214505590''.
...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	| usuario |
	usuario := Usuario newNumero: '2214505590'.
	^ usuario ...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(774138112)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(774138112)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(862121216)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(774138112)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(411986944)
		submorphs: 	an Array(a RubPrimarySelectionMorph(787366912) a RubCursor(104984422...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (203457024) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(781320192)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(1049844224)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(812139008))
		getMenuPolicy: 	a RubEditingArea(774138112)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(862121216)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(718702848))(a DropList...etc...
		lastStepTime: 	282516
		lastStepMessage: 	nil
		lastCycleTime: 	282539
		alarms: 	a Heap()
		lastAlarmTime: 	282516
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(598111488) a Na...etc...
		fullBounds: 	(0@0) corner: (1264@721)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(718702848))(a DropList...etc...
		lastStepTime: 	282516
		lastStepMessage: 	nil
		lastCycleTime: 	282539
		alarms: 	a Heap()
		lastAlarmTime: 	282516
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(718702848))(a DropList...etc...
		lastStepTime: 	282516
		lastStepMessage: 	nil
		lastCycleTime: 	282539
		alarms: 	a Heap()
		lastAlarmTime: 	282516
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1264@721)
		canvas: 	a FormCanvas on: DisplayScreen(1264x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(718702848))(a DropList...etc...
		lastStepTime: 	282516
		lastStepMessage: 	nil
		lastCycleTime: 	282539
		alarms: 	a Heap()
		lastAlarmTime: 	282516
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1264@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(598111488) a Na...etc...
		fullBounds: 	(0@0) corner: (1264@721)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(183651840)
	Arguments and temporary variables: 
		aPoint: 	(714@189)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(774138112)
	Receiver's instance variables: 
		bounds: 	(712.0@181.0) corner: (919.0@417.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(451171840)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(712.0@181.0) corner: (920.0@418.0)
		color: 	(Color r: 0.775 g: 0.775 b: 0.775 alpha: 1.0)
		extension: 	a MorphExtension (216929792) [other:  (basicColor -> Color lightGray...etc...
		borderWidth: 	1
		borderColor: 	Color gray
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(618783232)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(183651840)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(712.0@181.0) corner: (919.0@417.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(451171840)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(712.0@181.0) corner: (920.0@418.0)
		color: 	(Color r: 0.775 g: 0.775 b: 0.775 alpha: 1.0)
		extension: 	a MorphExtension (216929792) [other:  (basicColor -> Color lightGray...etc...
		borderWidth: 	1
		borderColor: 	Color gray
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(618783232)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(183651840)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(712.0@181.0) corner: (919.0@417.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(451171840)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(712.0@181.0) corner: (920.0@418.0)
		color: 	(Color r: 0.775 g: 0.775 b: 0.775 alpha: 1.0)
		extension: 	a MorphExtension (216929792) [other:  (basicColor -> Color lightGray...etc...
		borderWidth: 	1
		borderColor: 	Color gray
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(618783232)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(774138112)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(183651840)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(411986944)
		submorphs: 	an Array(a RubPrimarySelectionMorph(787366912) a RubCursor(104984422...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (203457024) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(781320192)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(1049844224)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(812139008))
		getMenuPolicy: 	a RubEditingArea(774138112)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(774138112)
	Arguments and temporary variables: 
		evt: 	[(71.0@31.0) mouseDown yellow 88637588 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(411986944)
		submorphs: 	an Array(a RubPrimarySelectionMorph(787366912) a RubCursor(104984422...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (203457024) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(781320192)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(1049844224)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(812139008))
		getMenuPolicy: 	a RubEditingArea(774138112)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(774138112)
	Arguments and temporary variables: 
		anEvent: 	[(71.0@31.0) mouseDown yellow 88637588 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(411986944)
		submorphs: 	an Array(a RubPrimarySelectionMorph(787366912) a RubCursor(104984422...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (203457024) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(781320192)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(1049844224)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(812139008))
		getMenuPolicy: 	a RubEditingArea(774138112)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MouseButtonEvent>>sentTo:
	Receiver: [(71.0@31.0) mouseDown yellow 88637588 nil]
	Arguments and temporary variables: 
		anObject: 	a RubEditingArea(774138112)
	Receiver's instance variables: 
		timeStamp: 	88637588
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(71.0@31.0)
		handler: 	a RubEditingArea(774138112)
		wasHandled: 	true
		whichButton: 	2


RubEditingArea(Morph)>>handleEvent:
	Receiver: a RubEditingArea(774138112)
	Arguments and temporary variables: 
		anEvent: 	[(71.0@31.0) mouseDown yellow 88637588 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@69)
		owner: 	a TransformWithLayoutMorph(411986944)
		submorphs: 	an Array(a RubPrimarySelectionMorph(787366912) a RubCursor(104984422...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (203457024) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(781320192)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(1049844224)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(812139008))
		getMenuPolicy: 	a RubEditingArea(774138112)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(71.0@31.0) mouseDown yellow 88637588 nil]
		aMorph: 	a RubEditingArea(774138112)
		globalPt: 	(71.0@31.0)
		localEvt: 	[(71.0@31.0) mouseDown yellow 88637588 nil]
		index: 	3
		child: 	a RubPrimarySelectionMorph(787366912)
		morphs: 	an Array(a RubPrimarySelectionMorph(787366912) a RubCursor(1049844224))...etc...
		handler: 	a RubEditingArea(774138112)
		inside: 	false
		lastHandler: 	a RubScrolledTextMorph(862121216)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(71.0@31.0) mouseDown yellow 88637588 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(71.0@31.0) mouseDown yellow 88637588 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	88637588
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(71.0@31.0)
		handler: 	a RubEditingArea(774138112)
		wasHandled: 	true
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(71.0@31.0) mouseDown yellow 88637588 nil]
		aMorph: 	a RubEditingArea(774138112)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
Instance of WSRootUI class did not understand #registerAsApplication:
29 December 2017 12:23:53.877378 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

WSRootUI class(Object)>>doesNotUnderstand: #registerAsApplication:
	Receiver: WSRootUI
	Arguments and temporary variables: 
		aMessage: 	registerAsApplication: 'blogView'
		exception: 	MessageNotUnderstood: WSRootUI class>>registerAsApplication:
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary()
		format: 	65539
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WSRootUI
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Whatsapp'
		traitComposition: 	{}
		localSelectors: 	nil


WSRootUI class>>initialize
	Receiver: WSRootUI
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary()
		format: 	65539
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WSRootUI
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Whatsapp'
		traitComposition: 	{}
		localSelectors: 	nil


WSRootUI class>>DoIt
	Receiver: WSRootUI
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary()
		format: 	65539
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WSRootUI
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Whatsapp'
		traitComposition: 	{}
		localSelectors: 	nil


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'WSRootUI initialize'
		itsSelection: 	a Text for 'WSRootUI initialize'
		itsSelectionString: 	'WSRootUI initialize'
	Receiver's instance variables: 
		ast: 	DoIt
	^ WSRootUI initialize
		source: 	a ReadStream
		context: 	nil
		receiver: 	WSRootUI
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadWriteStream
		aBlock: 	[ :result | result ]
		result: 	nil
		rcvr: 	WSRootUI
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(604086272)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>evaluateSelectionAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(604086272)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>evaluateSelection
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 

	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(604086272)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>doIt
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 

	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(604086272)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubScrolledTextMorph(Object)>>perform:orSendTo:
	Receiver: a RubScrolledTextMorph(875930368)
	Arguments and temporary variables: 
		selector: 	#doIt
		otherTarget: 	a RubSmalltalkEditor
	Receiver's instance variables: 
		bounds: 	(240.0@334.0) corner: (1080.0@607.0)
		owner: 	a PanelMorph(765321472)
		submorphs: 	an Array(a RubTextScrollPane(44325376) a RubAdornmentDisplayer(63238...etc...
		fullBounds: 	(240@334) corner: (1080@607)
		color: 	Color white
		extension: 	a MorphExtension (641012480) [other:  (announcer -> an Announcer) (k...etc...
		hasEditingConflicts: 	false
		hasUnacceptedEdits: 	false
		alwaysAccept: 	false
		setTextSelector: 	#setText:from:
		getTextSelector: 	#getText
		getSelectionSelector: 	#primarySelectionInterval
		setSelectionSelector: 	nil
		autoAccept: 	false
		scrollPane: 	a RubTextScrollPane(44325376)
		rulers: 	a SortedCollection(a NautilusAnnotationDisplayer(312635136) a RubTextSe...etc...
		enabled: 	true
		highlights: 	an OrderedCollection()


[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ].
		self showShortcut ].
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(336457984)'Do it'
	Arguments and temporary variables: 
		evt: 	[(482@380) mouseUp 251812947 nil]
		w: 	a WorldMorph(562956288) [world]
		selArgCount: 	2
	Receiver's instance variables: 
		bounds: 	(434.0@369.0) corner: (633.0@386.0)
		owner: 	a MenuMorph(718767360)
		submorphs: 	#()
		fullBounds: 	(434.0@369.0) corner: (633.0@386.0)
		color: 	Color black
		extension: 	a MorphExtension (645568768)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Do it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(875930368)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#doIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nilTHERE_BE_DRAGONS_HERETHERE_BE_DRAGONS_HERE
Instance of SmallInteger did not understand #numero
30 December 2017 12:46:20.340848 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

SmallInteger(Object)>>doesNotUnderstand: #numero
	Receiver: 1
	Arguments and temporary variables: 
		aMessage: 	numero
		exception: 	MessageNotUnderstood: SmallInteger>>numero
		resumeValue: 	nil
	Receiver's instance variables: 
1

ListaDeContactos class>>DoIt
	Receiver: ListaDeContactos
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#renderContentOn:->ListaDeContactos>>#renderCont...etc...
		format: 	65537
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#ListaDeContactos
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-User-Examples'
		traitComposition: 	{}
		localSelectors: 	nil


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'Storage usuarios at:1 numero'
		itsSelection: 	a Text for 'Storage usuarios at:1 numero'
		itsSelectionString: 	'Storage usuarios at:1 numero'
	Receiver's instance variables: 
		ast: 	DoIt
	^ Storage usuarios at: 1 numero
		source: 	a ReadStream
		context: 	nil
		receiver: 	ListaDeContactos
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadWriteStream
		aBlock: 	[ :result | result inspect ]
		result: 	nil
		rcvr: 	ListaDeContactos
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(101574400)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>evaluateSelectionAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(101574400)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>inspectIt
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 

	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(101574400)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubScrolledTextMorph(Object)>>perform:orSendTo:
	Receiver: a RubScrolledTextMorph(724438272)
	Arguments and temporary variables: 
		selector: 	#inspectIt
		otherTarget: 	a RubSmalltalkEditor
	Receiver's instance variables: 
		bounds: 	(238.0@408.0) corner: (1078.0@563.0)
		owner: 	a PanelMorph(478452992)
		submorphs: 	an Array(a RubTextScrollPane(561797632) a RubAdornmentDisplayer(1194...etc...
		fullBounds: 	(238@408) corner: (1078@563)
		color: 	Color white
		extension: 	a MorphExtension (547601408) [other:  (announcer -> an Announcer) (k...etc...
		hasEditingConflicts: 	false
		hasUnacceptedEdits: 	true
		alwaysAccept: 	false
		setTextSelector: 	#setText:from:
		getTextSelector: 	#getText
		getSelectionSelector: 	#primarySelectionInterval
		setSelectionSelector: 	nil
		autoAccept: 	false
		scrollPane: 	a RubTextScrollPane(561797632)
		rulers: 	a SortedCollection(a NautilusAnnotationDisplayer(317241600) a RubTextSe...etc...
		enabled: 	true
		highlights: 	an OrderedCollection()


[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ].
		self showShortcut ].
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(637157632)'Inspect it'
	Arguments and temporary variables: 
		evt: 	[(859@417) mouseUp 339559431 nil]
		w: 	a WorldMorph(562956288) [world]
		selArgCount: 	2
	Receiver's instance variables: 
		bounds: 	(794.0@405.0) corner: (993.0@423.0)
		owner: 	a MenuMorph(310329344)
		submorphs: 	#()
		fullBounds: 	(794.0@405.0) corner: (993.0@423.0)
		color: 	Color black
		extension: 	a MorphExtension (498917632)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Inspect it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(724438272)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#inspectIt a RubSmalltalkEditor)
		icon: 	Form(16x16x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'i'


BlockClosure>>ensure:
	Receiver: [ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := select...etc...
	Arguments and temporary variables: 
		aBlock: 	[ oldcursor show ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
		startpc: 	138
		numArgs: 	0


CursorWithMask(Cursor)>>showWhile:
	Receiver: ((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2r100000000000000000000...etc...
	Arguments and temporary variables: 
		aBlock: 	[ | selArgCount |
"show cursor in case item opens a new MVC window"
(se...etc...
		oldcursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2...etc...
	Receiver's instance variables: 
		bits: 	a Bitmap of length 16
		width: 	16
		height: 	16
		depth: 	1
		offset: 	(-1@ -1)
		maskForm: 	Form(16x16x1)


ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(637157632)'Inspect it'
	Arguments and temporary variables: 
		evt: 	[(859@417) mouseUp 339559431 nil]
		w: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		bounds: 	(794.0@405.0) corner: (993.0@423.0)
		owner: 	a MenuMorph(310329344)
		submorphs: 	#()
		fullBounds: 	(794.0@405.0) corner: (993.0@423.0)
		color: 	Color black
		extension: 	a MorphExtension (498917632)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Inspect it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(724438272)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#inspectIt a RubSmalltalkEditor)
		icon: 	Form(16x16x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'i'


ToggleMenuItemMorph(MenuItemMorph)>>mouseUp:
	Receiver: a ToggleMenuItemMorph(637157632)'Inspect it'
	Arguments and temporary variables: 
		evt: 	[(859@417) mouseUp 339559431 nil]
	Receiver's instance variables: 
		bounds: 	(794.0@405.0) corner: (993.0@423.0)
		owner: 	a MenuMorph(310329344)
		submorphs: 	#()
		fullBounds: 	(794.0@405.0) corner: (993.0@423.0)
		color: 	Color black
		extension: 	a MorphExtension (498917632)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Inspect it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(724438272)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#inspectIt a RubSmalltalkEditor)
		icon: 	Form(16x16x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'i'


ToggleMenuItemMorph(MenuItemMorph)>>handleMouseUp:
	Receiver: a ToggleMenuItemMorph(637157632)'Inspect it'
	Arguments and temporary variables: 
		anEvent: 	[(859@417) mouseUp 339559431 nil]
	Receiver's instance variables: 
		bounds: 	(794.0@405.0) corner: (993.0@423.0)
		owner: 	a MenuMorph(310329344)
		submorphs: 	#()
		fullBounds: 	(794.0@405.0) corner: (993.0@423.0)
		color: 	Color black
		extension: 	a MorphExtension (498917632)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Inspect it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(724438272)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#inspectIt a RubSmalltalkEditor)
		iTHERE_BE_DRAGONS_HERETHERE_BE_DRAGONS_HERE
SubscriptOutOfBounds: 1
1 January 2018 9:37:13.015369 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

OrderedCollection(Object)>>errorSubscriptBounds:
	Receiver: an OrderedCollection()
	Arguments and temporary variables: 
		index: 	1
	Receiver's instance variables: 
		array: 	#(nil nil nil nil nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	0


OrderedCollection>>at:
	Receiver: an OrderedCollection()
	Arguments and temporary variables: 
		anInteger: 	1
		index: 	1
	Receiver's instance variables: 
		array: 	#(nil nil nil nil nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	0


Login class>>DoIt
	Receiver: Login
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#actualizarUsuarioActualCon:->Login>>#actualizar...etc...
		format: 	65537
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Login
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-User-Examples'
		traitComposition: 	{}
		localSelectors: 	nil


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'((Storage usuarios select: [ :user | user numero = 1 ]) at: 1 ...etc...
		itsSelection: 	a Text for '((Storage usuarios select: [ :user | user numero = 1 ...etc...
		itsSelectionString: 	'((Storage usuarios select: [ :user | user numero = 1 ]) at...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	^ ((Storage usuarios select: [ :user | user numero = 1 ]) at: 1)
		n...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	Login
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadWriteStream
		aBlock: 	[ :result | 
printString := [ result printString ]
	on: Error
	do: [ '<...etc...
		result: 	nil
		rcvr: 	Login
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(70193408)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>evaluateSelectionAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | 
printString := [ result printString ]
	on: Error
	do: [ '<...etc...
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(70193408)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>printIt
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		printString: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(70193408)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubScrolledTextMorph(Object)>>perform:orSendTo:
	Receiver: a RubScrolledTextMorph(568964096)
	Arguments and temporary variables: 
		selector: 	#printIt
		otherTarget: 	a RubSmalltalkEditor
	Receiver's instance variables: 
		bounds: 	(21.0@371.0) corner: (1225.0@629.0)
		owner: 	a PanelMorph(911845632)
		submorphs: 	an Array(a RubTextScrollPane(95927552) a RubAdornmentDisplayer(55500...etc...
		fullBounds: 	(21@371) corner: (1225@629)
		color: 	Color white
		extension: 	a MorphExtension (383624960) [other:  (announcer -> an Announcer) (k...etc...
		hasEditingConflicts: 	false
		hasUnacceptedEdits: 	true
		alwaysAccept: 	false
		setTextSelector: 	#setText:from:
		getTextSelector: 	#getText
		getSelectionSelector: 	#primarySelectionInterval
		setSelectionSelector: 	nil
		autoAccept: 	false
		scrollPane: 	a RubTextScrollPane(95927552)
		rulers: 	a SortedCollection(a NautilusAnnotationDisplayer(968234240) a RubTextSe...etc...
		enabled: 	true
		highlights: 	an OrderedCollection()


[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ].
		self showShortcut ].
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(944028416)'Print it'
	Arguments and temporary variables: 
		evt: 	[(175@396) mouseUp 50543457 nil]
		w: 	a WorldMorph(562956288) [world]
		selArgCount: 	2
	Receiver's instance variables: 
		bounds: 	(107.0@387.0) corner: (306.0@404.0)
		owner: 	a MenuMorph(49756160)
		submorphs: 	#()
		fullBounds: 	(107.0@387.0) corner: (306.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (842824960)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


BlockClosure>>ensure:
	Receiver: [ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := select...etc...
	Arguments and temporary variables: 
		aBlock: 	[ oldcursor show ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
		startpc: 	138
		numArgs: 	0


CursorWithMask(Cursor)>>showWhile:
	Receiver: ((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2r100000000000000000000...etc...
	Arguments and temporary variables: 
		aBlock: 	[ | selArgCount |
"show cursor in case item opens a new MVC window"
(se...etc...
		oldcursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2...etc...
	Receiver's instance variables: 
		bits: 	a Bitmap of length 16
		width: 	16
		height: 	16
		depth: 	1
		offset: 	(-1@ -1)
		maskForm: 	Form(16x16x1)


ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(944028416)'Print it'
	Arguments and temporary variables: 
		evt: 	[(175@396) mouseUp 50543457 nil]
		w: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		bounds: 	(107.0@387.0) corner: (306.0@404.0)
		owner: 	a MenuMorph(49756160)
		submorphs: 	#()
		fullBounds: 	(107.0@387.0) corner: (306.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (842824960)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


ToggleMenuItemMorph(MenuItemMorph)>>mouseUp:
	Receiver: a ToggleMenuItemMorph(944028416)'Print it'
	Arguments and temporary variables: 
		evt: 	[(175@396) mouseUp 50543457 nil]
	Receiver's instance variables: 
		bounds: 	(107.0@387.0) corner: (306.0@404.0)
		owner: 	a MenuMorph(49756160)
		submorphs: 	#()
		fullBounds: 	(107.0@387.0) corner: (306.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (842824960)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


ToggleMenuItemMorph(MenuItemMorph)>>handleMouseUp:
	Receiver: a ToggleMenuItemMorph(944028416)'Print it'
	Arguments and temporary variables: 
		anEvent: 	[(175@396) mouseUp 50543457 nil]
	Receiver's instance variables: 
		bounds: 	(107.0@387.0) corner: (306.0@404.0)
		owner: 	a MenuMorph(49756160)
		submorphs: 	#()
		fullBounds: 	(107.0@387.0) corner: (306.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (842824960)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


MouseButtonEvent>>sentTo:
	Receiver: [(175@396) mouseUp 50543457 nil]
	Arguments and temporary variables: 
		anObject: 	a ToggleMenuItemMorph(944028416)'Print it'
	Receiver's instance variables: 
		timeStamp: 	50543457
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(175@396)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


ToggleMenuItemMorph(Morph)>>handleEvent:
	Receiver: a ToggleMenuItemMorph(944028416)'Print it'
	Arguments and temporary variables: 
		anEvent: 	[(175@396) mouseUp 50543457 nil]
	Receiver's instance variables: 
		bounds: 	(107.0@387.0) corner: (306.0@404.0)
		owner: 	a MenuMorph(49756160)
		submorphs: 	#()
		fullBounds: 	(107.0@387.0) corner: (306.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (842824960)
THERE_BE_DRAGONS_HERE
SubscriptOutOfBounds: 0
1 January 2018 9:42:53.468369 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

OrderedCollection(Object)>>errorSubscriptBounds:
	Receiver: an OrderedCollection()
	Arguments and temporary variables: 
		index: 	0
	Receiver's instance variables: 
		array: 	#(nil nil nil nil nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	0


OrderedCollection>>at:
	Receiver: an OrderedCollection()
	Arguments and temporary variables: 
		anInteger: 	0
		index: 	nil
	Receiver's instance variables: 
		array: 	#(nil nil nil nil nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	0


Login class>>DoIt
	Receiver: Login
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#actualizarUsuarioActualCon:->Login>>#actualizar...etc...
		format: 	65537
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Login
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-User-Examples'
		traitComposition: 	{}
		localSelectors: 	nil


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'((Storage usuarios select: [ :user | user numero = 1 ]) at: 0 ...etc...
		itsSelection: 	a Text for '((Storage usuarios select: [ :user | user numero = 1 ...etc...
		itsSelectionString: 	'((Storage usuarios select: [ :user | user numero = 1 ]) at...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	^ ((Storage usuarios select: [ :user | user numero = 1 ]) at: 0)
		n...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	Login
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadWriteStream
		aBlock: 	[ :result | 
printString := [ result printString ]
	on: Error
	do: [ '<...etc...
		result: 	nil
		rcvr: 	Login
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(70193408)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>evaluateSelectionAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | 
printString := [ result printString ]
	on: Error
	do: [ '<...etc...
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(70193408)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>printIt
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		printString: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(70193408)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubScrolledTextMorph(Object)>>perform:orSendTo:
	Receiver: a RubScrolledTextMorph(568964096)
	Arguments and temporary variables: 
		selector: 	#printIt
		otherTarget: 	a RubSmalltalkEditor
	Receiver's instance variables: 
		bounds: 	(21.0@371.0) corner: (1225.0@629.0)
		owner: 	a PanelMorph(911845632)
		submorphs: 	an Array(a RubTextScrollPane(95927552) a RubAdornmentDisplayer(55500...etc...
		fullBounds: 	(21@371) corner: (1225@629)
		color: 	Color white
		extension: 	a MorphExtension (383624960) [other:  (announcer -> an Announcer) (k...etc...
		hasEditingConflicts: 	false
		hasUnacceptedEdits: 	true
		alwaysAccept: 	false
		setTextSelector: 	#setText:from:
		getTextSelector: 	#getText
		getSelectionSelector: 	#primarySelectionInterval
		setSelectionSelector: 	nil
		autoAccept: 	false
		scrollPane: 	a RubTextScrollPane(95927552)
		rulers: 	a SortedCollection(a NautilusAnnotationDisplayer(968234240) a RubTextSe...etc...
		enabled: 	true
		highlights: 	an OrderedCollection()


[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ].
		self showShortcut ].
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(129067776)'Print it'
	Arguments and temporary variables: 
		evt: 	[(146@399) mouseUp 50883910 nil]
		w: 	a WorldMorph(562956288) [world]
		selArgCount: 	2
	Receiver's instance variables: 
		bounds: 	(93.0@387.0) corner: (292.0@404.0)
		owner: 	a MenuMorph(557726976)
		submorphs: 	#()
		fullBounds: 	(93.0@387.0) corner: (292.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (1117440)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


BlockClosure>>ensure:
	Receiver: [ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := select...etc...
	Arguments and temporary variables: 
		aBlock: 	[ oldcursor show ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
		startpc: 	138
		numArgs: 	0


CursorWithMask(Cursor)>>showWhile:
	Receiver: ((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2r100000000000000000000...etc...
	Arguments and temporary variables: 
		aBlock: 	[ | selArgCount |
"show cursor in case item opens a new MVC window"
(se...etc...
		oldcursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2...etc...
	Receiver's instance variables: 
		bits: 	a Bitmap of length 16
		width: 	16
		height: 	16
		depth: 	1
		offset: 	(-1@ -1)
		maskForm: 	Form(16x16x1)


ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(129067776)'Print it'
	Arguments and temporary variables: 
		evt: 	[(146@399) mouseUp 50883910 nil]
		w: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		bounds: 	(93.0@387.0) corner: (292.0@404.0)
		owner: 	a MenuMorph(557726976)
		submorphs: 	#()
		fullBounds: 	(93.0@387.0) corner: (292.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (1117440)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


ToggleMenuItemMorph(MenuItemMorph)>>mouseUp:
	Receiver: a ToggleMenuItemMorph(129067776)'Print it'
	Arguments and temporary variables: 
		evt: 	[(146@399) mouseUp 50883910 nil]
	Receiver's instance variables: 
		bounds: 	(93.0@387.0) corner: (292.0@404.0)
		owner: 	a MenuMorph(557726976)
		submorphs: 	#()
		fullBounds: 	(93.0@387.0) corner: (292.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (1117440)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


ToggleMenuItemMorph(MenuItemMorph)>>handleMouseUp:
	Receiver: a ToggleMenuItemMorph(129067776)'Print it'
	Arguments and temporary variables: 
		anEvent: 	[(146@399) mouseUp 50883910 nil]
	Receiver's instance variables: 
		bounds: 	(93.0@387.0) corner: (292.0@404.0)
		owner: 	a MenuMorph(557726976)
		submorphs: 	#()
		fullBounds: 	(93.0@387.0) corner: (292.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (1117440)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


MouseButtonEvent>>sentTo:
	Receiver: [(146@399) mouseUp 50883910 nil]
	Arguments and temporary variables: 
		anObject: 	a ToggleMenuItemMorph(129067776)'Print it'
	Receiver's instance variables: 
		timeStamp: 	50883910
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(146@399)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


ToggleMenuItemMorph(Morph)>>handleEvent:
	Receiver: a ToggleMenuItemMorph(129067776)'Print it'
	Arguments and temporary variables: 
		anEvent: 	[(146@399) mouseUp 50883910 nil]
	Receiver's instance variables: 
		bounds: 	(93.0@387.0) corner: (292.0@404.0)
		owner: 	a MenuMorph(557726976)
		submorphs: 	#()
		fullBounds: 	(93.0@387.0) corner: (292.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (1117440)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


MorphicEventDispatcher>>dispatchDefault:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(146@399) mouseUp 50883910 nil]
		aMorph: 	a ToggleMenuItemMorph(129067776)'Print it'
		localEvt: 	nil
		index: 	1
		child: 	nil
		morphs: 	#()
		inside: 	true
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(129067776)'Print it'


MorphicEventDispatcher>>handleMouseUp:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(146@399) mouseUp 50883910 nil]
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(129067776)'Print it'


MouseButtonEvent>>sentTo:
	Receiver: [(146@399) mouseUp 50883910 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	50883910
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(146@399)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(146@399) mouseUp 50883910 nil]
		aMorph: 	a ToggleMenuItemMorph(129067776)'Print it'
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(129067776)'Print it'


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(146@399) mouseUp 50883910 nil]
		aMorph: 	a ToggleMenuItemMorph(129067776)'Print it'
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(129067776)'Print it'


ToggleMenuItemMorph(Morph)>>processEvent:using:
	Receiver: a ToggleMenuItemMorph(129067776)'Print it'
	Arguments and temporary variables: 
		anEvent: 	[(146@399) mouseUp 50883910 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(93.0@387.0) corner: (292.0@404.0)
		owner: 	a MenuMorph(557726976)
		submorphs: 	#()
		fullBounds: 	(93.0@387.0) corner: (292.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (1117440)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


MorphicEventDispatcher>>dispatchDefault:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(146@399) mouseUp 50883910 nil]
		aMorph: 	a MenuMorph(557726976)
		localEvt: 	[(146@399) mouseUp 50883910 nil]
		index: 	6
		child: 	a ToggleMenuItemMorph(129067776)'Print it'
		morphs: 	an Array(a ToggleMenuItemMorph(653739520)'Format' a ToggleMenuItemMorph...etc...
		inside: 	false
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(129067776)'Print it'


MorphicEventDispatcher>>handleMouseUp:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(146@399) mouseUp 50883910 nil]
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(129067776)'Print it'


MouseButtonEvent>>sentTo:
	Receiver: [(146@399) mouseUp 50883910 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	50883910
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(146@399)
		handler: 	nil
		wasHandled: 	false
		whichButton: 	4


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(146@399) mouseUp 50883910 nil]
		aMorph: 	a MenuMorph(557726976)
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(129067776)'Print it'


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(146@399) mouseUp 50883910 nil]
		aMorph: 	a MenuMorph(557726976)
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(129067776)'Print it'


MenuMorph(Morph)>>processEvent:using:
	Receiver: a MenuMorph(557726976)
	Arguments and temporary variables: 
		anEvent: 	[(146@399) mouseUp 50883910 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(89.0@307.0) corner: (296.0@703.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(653739520)'Format' a ToggleMenuItemMo...etc...
		fullBounds: 	(89.0@307.0) corner: (297.0@704.0)
		color: 	(Color r: 0.775 g: 0.775 b: 0.775 alpha: 1.0)
		extension: 	a MorphExtension (877803008) [other:  (basicColor -> Color lightGray...etc...
		borderWidth: 	1
		borderColor: 	Color gray
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(129067776)'Print it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph(Morph)>>processEvent:
	Receiver: a MenuMorph(557726976)
	Arguments and temporary variables: 
		anEvent: 	[(146@399) mouseUp 50883910 nil]
	Receiver's instance variables: 
		bounds: 	(89.0@307.0) corner: (296.0@703.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(653739520)'Format' a ToggleMenuItemMo...etc...
		fullBounds: 	(89.0@307.0) corner: (297.0@704.0)
		color: 	(Color r: 0.775 g: 0.775 b: 0.775 alpha: 1.0)
		extension: 	a MorphExtension (877803008) [other:  (basicColor -> Color lightGray...etc...
		borderWidth: 	1
		borderColor: 	Color gray
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(129067776)'Print it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>handleFocusEvent:
	Receiver: a MenuMorph(557726976)
	Arguments and temporary variables: 
		evt: 	[(146@399) mouseUp 50883910 nil]
	Receiver's instance variables: 
		bounds: 	(89.0@307.0) corner: (296.0@703.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(653739520)'Format' a ToggleMenuItemMo...etc...
		fullBounds: 	(89.0@307.0) corner: (297.0@704.0)
		color: 	(Color r: 0.775 g: 0.775 b: 0.775 alpha: 1.0)
		extension: 	a MorphExtension (877803008) [other:  (basicColor -> Color lightGray...etc...
		borderWidth: 	1
		borderColor: 	Color gray
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(129067776)'Print it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(146@399) mouseUp 50883910 nil]
		focusHolder: 	a MenuMorph(557726976)
		aBlock: 	[ self mouseFocus: nil ]
		w: 	a WorldMorph(562956288) [world]
		result: 	nil
	Receiver's instance variables: 
		bounds: 	(146@399.0) corner: (162@415.0)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	(146@399.0) corner: (162@415.0)
		color: 	Color blue
		extension: 	a MorphExtension (144318720)
		mouseFocus: 	nil
		keyboardFocus: 	nil
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: THERE_BE_DRAGONS_HERE
SubscriptOutOfBounds: 0
1 January 2018 9:44:09.947369 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

OrderedCollection(Object)>>errorSubscriptBounds:
	Receiver: an OrderedCollection(an Usuario)
	Arguments and temporary variables: 
		index: 	0
	Receiver's instance variables: 
		array: 	an Array(an Usuario nil nil nil nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	1


OrderedCollection>>at:
	Receiver: an OrderedCollection(an Usuario)
	Arguments and temporary variables: 
		anInteger: 	0
		index: 	nil
	Receiver's instance variables: 
		array: 	an Array(an Usuario nil nil nil nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	1


Login class>>DoIt
	Receiver: Login
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#actualizarUsuarioActualCon:->Login>>#actualizar...etc...
		format: 	65537
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Login
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-User-Examples'
		traitComposition: 	{}
		localSelectors: 	nil


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'((Storage usuarios select: [ :user | user numero = ''1'' ]) at...etc...
		itsSelection: 	a Text for '((Storage usuarios select: [ :user | user numero = ''...etc...
		itsSelectionString: 	'((Storage usuarios select: [ :user | user numero = ''1'' ]...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	^ ((Storage usuarios select: [ :user | user numero = '1' ]) at: 0)
	...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	Login
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadWriteStream
		aBlock: 	[ :result | 
printString := [ result printString ]
	on: Error
	do: [ '<...etc...
		result: 	nil
		rcvr: 	Login
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(70193408)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>evaluateSelectionAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | 
printString := [ result printString ]
	on: Error
	do: [ '<...etc...
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(70193408)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>printIt
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		printString: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(70193408)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubScrolledTextMorph(Object)>>perform:orSendTo:
	Receiver: a RubScrolledTextMorph(568964096)
	Arguments and temporary variables: 
		selector: 	#printIt
		otherTarget: 	a RubSmalltalkEditor
	Receiver's instance variables: 
		bounds: 	(21.0@371.0) corner: (1225.0@629.0)
		owner: 	a PanelMorph(911845632)
		submorphs: 	an Array(a RubTextScrollPane(95927552) a RubAdornmentDisplayer(55500...etc...
		fullBounds: 	(21@371) corner: (1225@629)
		color: 	Color white
		extension: 	a MorphExtension (383624960) [other:  (announcer -> an Announcer) (k...etc...
		hasEditingConflicts: 	false
		hasUnacceptedEdits: 	true
		alwaysAccept: 	false
		setTextSelector: 	#setText:from:
		getTextSelector: 	#getText
		getSelectionSelector: 	#primarySelectionInterval
		setSelectionSelector: 	nil
		autoAccept: 	false
		scrollPane: 	a RubTextScrollPane(95927552)
		rulers: 	a SortedCollection(a NautilusAnnotationDisplayer(968234240) a RubTextSe...etc...
		enabled: 	true
		highlights: 	an OrderedCollection()


[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ].
		self showShortcut ].
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(116850432)'Print it'
	Arguments and temporary variables: 
		evt: 	[(253@396) mouseUp 50960394 nil]
		w: 	a WorldMorph(562956288) [world]
		selArgCount: 	2
	Receiver's instance variables: 
		bounds: 	(207.0@387.0) corner: (406.0@404.0)
		owner: 	a MenuMorph(791564544)
		submorphs: 	#()
		fullBounds: 	(207.0@387.0) corner: (406.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (65132800)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


BlockClosure>>ensure:
	Receiver: [ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := select...etc...
	Arguments and temporary variables: 
		aBlock: 	[ oldcursor show ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
		startpc: 	138
		numArgs: 	0


CursorWithMask(Cursor)>>showWhile:
	Receiver: ((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2r100000000000000000000...etc...
	Arguments and temporary variables: 
		aBlock: 	[ | selArgCount |
"show cursor in case item opens a new MVC window"
(se...etc...
		oldcursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2...etc...
	Receiver's instance variables: 
		bits: 	a Bitmap of length 16
		width: 	16
		height: 	16
		depth: 	1
		offset: 	(-1@ -1)
		maskForm: 	Form(16x16x1)


ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(116850432)'Print it'
	Arguments and temporary variables: 
		evt: 	[(253@396) mouseUp 50960394 nil]
		w: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		bounds: 	(207.0@387.0) corner: (406.0@404.0)
		owner: 	a MenuMorph(791564544)
		submorphs: 	#()
		fullBounds: 	(207.0@387.0) corner: (406.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (65132800)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


ToggleMenuItemMorph(MenuItemMorph)>>mouseUp:
	Receiver: a ToggleMenuItemMorph(116850432)'Print it'
	Arguments and temporary variables: 
		evt: 	[(253@396) mouseUp 50960394 nil]
	Receiver's instance variables: 
		bounds: 	(207.0@387.0) corner: (406.0@404.0)
		owner: 	a MenuMorph(791564544)
		submorphs: 	#()
		fullBounds: 	(207.0@387.0) corner: (406.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (65132800)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


ToggleMenuItemMorph(MenuItemMorph)>>handleMouseUp:
	Receiver: a ToggleMenuItemMorph(116850432)'Print it'
	Arguments and temporary variables: 
		anEvent: 	[(253@396) mouseUp 50960394 nil]
	Receiver's instance variables: 
		bounds: 	(207.0@387.0) corner: (406.0@404.0)
		owner: 	a MenuMorph(791564544)
		submorphs: 	#()
		fullBounds: 	(207.0@387.0) corner: (406.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (65132800)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


MouseButtonEvent>>sentTo:
	Receiver: [(253@396) mouseUp 50960394 nil]
	Arguments and temporary variables: 
		anObject: 	a ToggleMenuItemMorph(116850432)'Print it'
	Receiver's instance variables: 
		timeStamp: 	50960394
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(253@396)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


ToggleMenuItemMorph(Morph)>>handleEvent:
	Receiver: a ToggleMenuItemMorph(116850432)'Print it'
	Arguments and temporary variables: 
		anEvent: 	[(253@396) mouseUp 50960394 nil]
	Receiver's instance variables: 
		bounds: 	(207.0@387.0) corner: (406.0@404.0)
		owner: 	a MenuMorph(791564544)
		submorphs: 	#()
		fullBounds: 	(207.0@387.0) corner: (406.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (65132800)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


MorphicEventDispatcher>>dispatchDefault:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(253@396) mouseUp 50960394 nil]
		aMorph: 	a ToggleMenuItemMorph(116850432)'Print it'
		localEvt: 	nil
		index: 	1
		child: 	nil
		morphs: 	#()
		inside: 	true
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(116850432)'Print it'


MorphicEventDispatcher>>handleMouseUp:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(253@396) mouseUp 50960394 nil]
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(116850432)'Print it'


MouseButtonEvent>>sentTo:
	Receiver: [(253@396) mouseUp 50960394 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	50960394
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(253@396)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(253@396) mouseUp 50960394 nil]
		aMorph: 	a ToggleMenuItemMorph(116850432)'Print it'
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(116850432)'Print it'


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(253@396) mouseUp 50960394 nil]
		aMorph: 	a ToggleMenuItemMorph(116850432)'Print it'
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(116850432)'Print it'


ToggleMenuItemMorph(Morph)>>processEvent:using:
	Receiver: a ToggleMenuItemMorph(116850432)'Print it'
	Arguments and temporary variables: 
		anEvent: 	[(253@396) mouseUp 50960394 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(207.0@387.0) corner: (406.0@404.0)
		owner: 	a MenuMorph(791564544)
		submorphs: 	#()
		fullBounds: 	(207.0@387.0) corner: (406.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (65132800)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


MorphicEventDispatcher>>dispatchDefault:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(253@396) mouseUp 50960394 nil]
		aMorph: 	a MenuMorph(791564544)
		localEvt: 	[(253@396) mouseUp 50960394 nil]
		index: 	6
		child: 	a ToggleMenuItemMorph(116850432)'Print it'
		morphs: 	an Array(a ToggleMenuItemMorph(548084480)'Format' a ToggleMenuItemMorph...etc...
		inside: 	false
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(116850432)'Print it'


MorphicEventDispatcher>>handleMouseUp:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(253@396) mouseUp 50960394 nil]
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(116850432)'Print it'


MouseButtonEvent>>sentTo:
	Receiver: [(253@396) mouseUp 50960394 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	50960394
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(253@396)
		handler: 	nil
		wasHandled: 	false
		whichButton: 	4


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(253@396) mouseUp 50960394 nil]
		aMorph: 	a MenuMorph(791564544)
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(116850432)'Print it'


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(253@396) mouseUp 50960394 nil]
		aMorph: 	a MenuMorph(791564544)
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(116850432)'Print it'


MenuMorph(Morph)>>processEvent:using:
	Receiver: a MenuMorph(791564544)
	Arguments and temporary variables: 
		anEvent: 	[(253@396) mouseUp 50960394 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(203.0@307.0) corner: (410.0@703.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(548084480)'Format' a ToggleMenuItemMo...etc...
		fullBounds: 	(203.0@307.0) corner: (411.0@704.0)
		color: 	(Color r: 0.775 g: 0.775 b: 0.775 alpha: 1.0)
		extension: 	a MorphExtension (27167232) [other:  (basicColor -> Color lightGray)...etc...
		borderWidth: 	1
		borderColor: 	Color gray
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(116850432)'Print it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph(Morph)>>processEvent:
	Receiver: a MenuMorph(791564544)
	Arguments and temporary variables: 
		anEvent: 	[(253@396) mouseUp 50960394 nil]
	Receiver's instance variables: 
		bounds: 	(203.0@307.0) corner: (410.0@703.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(548084480)'Format' a ToggleMenuItemMo...etc...
		fullBounds: 	(203.0@307.0) corner: (411.0@704.0)
		color: 	(Color r: 0.775 g: 0.775 b: 0.775 alpha: 1.0)
		extension: 	a MorphExtension (27167232) [other:  (basicColor -> Color lightGray)...etc...
		borderWidth: 	1
		borderColor: 	Color gray
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(116850432)'Print it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>handleFocusEvent:
	Receiver: a MenuMorph(791564544)
	Arguments and temporary variables: 
		evt: 	[(253@396) mouseUp 50960394 nil]
	Receiver's instance variables: 
		bounds: 	(203.0@307.0) corner: (410.0@703.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(548084480)'Format' a ToggleMenuItemMo...etc...
		fullBounds: 	(203.0@307.0) corner: (411.0@704.0)
		color: 	(Color r: 0.775 g: 0.775 b: 0.775 alpha: 1.0)
		extension: 	a MorphExtension (27167232) [other:  (basicColor -> Color lightGray)...etc...
		borderWidth: 	1
		borderColor: 	Color gray
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(116850432)'Print it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(253@396) mouseUp 50960394 nil]
		focusHolder: 	a MenuMorph(791564544)
		aBlock: 	[ self mouseFocus: nil ]
		w: 	a WorldMorph(562956288) [world]
		result: 	nil
	Receiver's instance variables: 
		bounds: 	(253@396.0) corner: (269@412.0)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	(253@396.0) corner: (269@412.0)
		color: 	Color blue
		extension: 	a MorphExtension (144318720)
		mouseFocus: 	nil
		keyboardFocus: 	nil
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(253@396) mouseUp 50960394 nil]
		targetOffset: 	(46.0@9.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 50960394 253 396 0 0 1 1)
		lastKeyScanCode: 	243
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


BlockClosure>>on:do:
	Receiver: [ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (an...etc...
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[ :ex | 
ActiveWorld := priorWorld.
ActiveEvent := priorEvent.
A...etc...
	Receiver's instance variables: 
		outerContext: 	HandMorph>>sendFocusEvent:to:clear:
		startpc: 	67
		numArgs: 	0


WorldMorph(PasteUpMorph)>>becomeActiveDuriTHERE_BE_DRAGONS_HERE
SubscriptOutOfBounds: 1
1 January 2018 10:14:32.392369 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

OrderedCollection(Object)>>errorSubscriptBounds:
	Receiver: an OrderedCollection()
	Arguments and temporary variables: 
		index: 	1
	Receiver's instance variables: 
		array: 	#(nil nil nil nil nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	0


OrderedCollection>>at:
	Receiver: an OrderedCollection()
	Arguments and temporary variables: 
		anInteger: 	1
		index: 	1
	Receiver's instance variables: 
		array: 	#(nil nil nil nil nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	0


Login class>>DoIt
	Receiver: Login
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#actualizarUsuarioActualCon:->Login>>#actualizar...etc...
		format: 	65537
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Login
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-User-Examples'
		traitComposition: 	{}
		localSelectors: 	nil


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'(Storage usuarios select: [ :user | user numero = ''2'' ]) at:...etc...
		itsSelection: 	a Text for '(Storage usuarios select: [ :user | user numero = ''2...etc...
		itsSelectionString: 	'(Storage usuarios select: [ :user | user numero = ''2'' ])...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	^ (Storage usuarios select: [ :user | user numero = '2' ]) at: 1
		source: 	a ReadStream
		context: 	nil
		receiver: 	Login
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadWriteStream
		aBlock: 	[ :result | 
printString := [ result printString ]
	on: Error
	do: [ '<...etc...
		result: 	nil
		rcvr: 	Login
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(70193408)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>evaluateSelectionAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | 
printString := [ result printString ]
	on: Error
	do: [ '<...etc...
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(70193408)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>printIt
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		printString: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(70193408)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubScrolledTextMorph(Object)>>perform:orSendTo:
	Receiver: a RubScrolledTextMorph(568964096)
	Arguments and temporary variables: 
		selector: 	#printIt
		otherTarget: 	a RubSmalltalkEditor
	Receiver's instance variables: 
		bounds: 	(21.0@371.0) corner: (1225.0@629.0)
		owner: 	a PanelMorph(911845632)
		submorphs: 	an Array(a RubTextScrollPane(95927552) a RubAdornmentDisplayer(55500...etc...
		fullBounds: 	(21@371) corner: (1225@629)
		color: 	Color white
		extension: 	a MorphExtension (383624960) [other:  (announcer -> an Announcer) (k...etc...
		hasEditingConflicts: 	false
		hasUnacceptedEdits: 	true
		alwaysAccept: 	false
		setTextSelector: 	#setText:from:
		getTextSelector: 	#getText
		getSelectionSelector: 	#primarySelectionInterval
		setSelectionSelector: 	nil
		autoAccept: 	false
		scrollPane: 	a RubTextScrollPane(95927552)
		rulers: 	a SortedCollection(a NautilusAnnotationDisplayer(968234240) a RubTextSe...etc...
		enabled: 	true
		highlights: 	an OrderedCollection()


[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ].
		self showShortcut ].
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(331367936)'Print it'
	Arguments and temporary variables: 
		evt: 	[(169@392) mouseUp 52782832 nil]
		w: 	a WorldMorph(562956288) [world]
		selArgCount: 	2
	Receiver's instance variables: 
		bounds: 	(124.0@387.0) corner: (323.0@404.0)
		owner: 	a MenuMorph(868717056)
		submorphs: 	#()
		fullBounds: 	(124.0@387.0) corner: (323.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (784570880)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


BlockClosure>>ensure:
	Receiver: [ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := select...etc...
	Arguments and temporary variables: 
		aBlock: 	[ oldcursor show ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
		startpc: 	138
		numArgs: 	0


CursorWithMask(Cursor)>>showWhile:
	Receiver: ((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2r100000000000000000000...etc...
	Arguments and temporary variables: 
		aBlock: 	[ | selArgCount |
"show cursor in case item opens a new MVC window"
(se...etc...
		oldcursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2...etc...
	Receiver's instance variables: 
		bits: 	a Bitmap of length 16
		width: 	16
		height: 	16
		depth: 	1
		offset: 	(-1@ -1)
		maskForm: 	Form(16x16x1)


ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(331367936)'Print it'
	Arguments and temporary variables: 
		evt: 	[(169@392) mouseUp 52782832 nil]
		w: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		bounds: 	(124.0@387.0) corner: (323.0@404.0)
		owner: 	a MenuMorph(868717056)
		submorphs: 	#()
		fullBounds: 	(124.0@387.0) corner: (323.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (784570880)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


ToggleMenuItemMorph(MenuItemMorph)>>mouseUp:
	Receiver: a ToggleMenuItemMorph(331367936)'Print it'
	Arguments and temporary variables: 
		evt: 	[(169@392) mouseUp 52782832 nil]
	Receiver's instance variables: 
		bounds: 	(124.0@387.0) corner: (323.0@404.0)
		owner: 	a MenuMorph(868717056)
		submorphs: 	#()
		fullBounds: 	(124.0@387.0) corner: (323.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (784570880)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


ToggleMenuItemMorph(MenuItemMorph)>>handleMouseUp:
	Receiver: a ToggleMenuItemMorph(331367936)'Print it'
	Arguments and temporary variables: 
		anEvent: 	[(169@392) mouseUp 52782832 nil]
	Receiver's instance variables: 
		bounds: 	(124.0@387.0) corner: (323.0@404.0)
		owner: 	a MenuMorph(868717056)
		submorphs: 	#()
		fullBounds: 	(124.0@387.0) corner: (323.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (784570880)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


MouseButtonEvent>>sentTo:
	Receiver: [(169@392) mouseUp 52782832 nil]
	Arguments and temporary variables: 
		anObject: 	a ToggleMenuItemMorph(331367936)'Print it'
	Receiver's instance variables: 
		timeStamp: 	52782832
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(169@392)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


ToggleMenuItemMorph(Morph)>>handleEvent:
	Receiver: a ToggleMenuItemMorph(331367936)'Print it'
	Arguments and temporary variables: 
		anEvent: 	[(169@392) mouseUp 52782832 nil]
	Receiver's instance variables: 
		bounds: 	(124.0@387.0) corner: (323.0@404.0)
		owner: 	a MenuMorph(868717056)
		submorphs: 	#()
		fullBounds: 	(124.0@387.0) corner: (323.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (784570880)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


MorphicEventDispatcher>>dispatchDefault:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(169@392) mouseUp 52782832 nil]
		aMorph: 	a ToggleMenuItemMorph(331367936)'Print it'
		localEvt: 	nil
		index: 	1
		child: 	nil
		morphs: 	#()
		inside: 	true
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(331367936)'Print it'


MorphicEventDispatcher>>handleMouseUp:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(169@392) mouseUp 52782832 nil]
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(331367936)'Print it'


MouseButtonEvent>>sentTo:
	Receiver: [(169@392) mouseUp 52782832 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	52782832
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(169@392)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(169@392) mouseUp 52782832 nil]
		aMorph: 	a ToggleMenuItemMorph(331367936)'Print it'
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(331367936)'Print it'


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(169@392) mouseUp 52782832 nil]
		aMorph: 	a ToggleMenuItemMorph(331367936)'Print it'
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(331367936)'Print it'


ToggleMenuItemMorph(Morph)>>processEvent:using:
	Receiver: a ToggleMenuItemMorph(331367936)'Print it'
	Arguments and temporary variables: 
		anEvent: 	[(169@392) mouseUp 52782832 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(124.0@387.0) corner: (323.0@404.0)
		owner: 	a MenuMorph(868717056)
		submorphs: 	#()
		fullBounds: 	(124.0@387.0) corner: (323.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (784570880)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


MorphicEventDispatcher>>dispatchDefault:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(169@392) mouseUp 52782832 nil]
		aMorph: 	a MenuMorph(868717056)
		localEvt: 	[(169@392) mouseUp 52782832 nil]
		index: 	6
		child: 	a ToggleMenuItemMorph(331367936)'Print it'
		morphs: 	an Array(a ToggleMenuItemMorph(735601408)'Format' a ToggleMenuItemMorph...etc...
		inside: 	false
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(331367936)'Print it'


MorphicEventDispatcher>>handleMouseUp:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(169@392) mouseUp 52782832 nil]
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(331367936)'Print it'


MouseButtonEvent>>sentTo:
	Receiver: [(169@392) mouseUp 52782832 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	52782832
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(169@392)
		handler: 	nil
		wasHandled: 	false
		whichButton: 	4


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(169@392) mouseUp 52782832 nil]
		aMorph: 	a MenuMorph(868717056)
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(331367936)'Print it'


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(169@392) mouseUp 52782832 nil]
		aMorph: 	a MenuMorph(868717056)
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(331367936)'Print it'


MenuMorph(Morph)>>processEvent:using:
	Receiver: a MenuMorph(868717056)
	Arguments and temporary variables: 
		anEvent: 	[(169@392) mouseUp 52782832 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(120.0@307.0) corner: (327.0@703.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(735601408)'Format' a ToggleMenuItemMo...etc...
		fullBounds: 	(120.0@307.0) corner: (328.0@704.0)
		color: 	(Color r: 0.775 g: 0.775 b: 0.775 alpha: 1.0)
		extension: 	a MorphExtension (193536256) [other:  (basicColor -> Color lightGray...etc...
		borderWidth: 	1
		borderColor: 	Color gray
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(331367936)'Print it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph(Morph)>>processEvent:
	Receiver: a MenuMorph(868717056)
	Arguments and temporary variables: 
		anEvent: 	[(169@392) mouseUp 52782832 nil]
	Receiver's instance variables: 
		bounds: 	(120.0@307.0) corner: (327.0@703.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(735601408)'Format' a ToggleMenuItemMo...etc...
		fullBounds: 	(120.0@307.0) corner: (328.0@704.0)
		color: 	(Color r: 0.775 g: 0.775 b: 0.775 alpha: 1.0)
		extension: 	a MorphExtension (193536256) [other:  (basicColor -> Color lightGray...etc...
		borderWidth: 	1
		borderColor: 	Color gray
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(331367936)'Print it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>handleFocusEvent:
	Receiver: a MenuMorph(868717056)
	Arguments and temporary variables: 
		evt: 	[(169@392) mouseUp 52782832 nil]
	Receiver's instance variables: 
		bounds: 	(120.0@307.0) corner: (327.0@703.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(735601408)'Format' a ToggleMenuItemMo...etc...
		fullBounds: 	(120.0@307.0) corner: (328.0@704.0)
		color: 	(Color r: 0.775 g: 0.775 b: 0.775 alpha: 1.0)
		extension: 	a MorphExtension (193536256) [other:  (basicColor -> Color lightGray...etc...
		borderWidth: 	1
		borderColor: 	Color gray
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(331367936)'Print it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(169@392) mouseUp 52782832 nil]
		focusHolder: 	a MenuMorph(868717056)
		aBlock: 	[ self mouseFocus: nil ]
		w: 	a WorldMorph(562956288) [world]
		result: 	nil
	Receiver's instance variables: 
		bounds: 	(169@392.0) corner: (185@408.0)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	(169@392.0) corner: (185@408.0)
		color: 	Color blue
		extension: 	a MorphExtension (144318720)
		mouseFocus: 	nil
		keyboardFocus: 	nil
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(169@392) mouseUp 52782832 nil]
		targetOffset: 	(45.0@5.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 52782832 169 392 0 0 1 1)
		lastKeyScanCode: 	50
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


BlockClosure>>on:do:
	Receiver: [ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (an...etc...
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[ :ex | 
ActiveWorld := priorWorld.
ActiveEvent := priorEvent.
A...etc...
	Receiver's instance variables: 
		outerContext: 	HandMorph>>sendFocusEvent:to:clear:
		startpc: 	67
		numArgs: 	0


WorldMorph(PasteUpMorph)>>becomeActiveDuring:
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 
		aBlock: 	[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	ha...etc...
		priorWorld: 	a WorldMorph(562956288) [world]
		priorHand: 	a HandMorph(58125568)
		priorEvent: 	[(169@392) mouseOver red 52782722 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1259@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a NautilusWindow(67923200) an Ima...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		result: 	nil
		anEvent: 	[(169@392) mouseUp 52782832 nil]
		focusHolder: 	a MenuMorph(868717056)
		aBlock: 	[ self mouseFocus: nil ]
		w: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		bounds: 	(169@392.0) corner: (185@408.0)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	(169@392.0) corner: (185@408.0)
		color: 	Color blue
		extension: 	a MorphExtension (144318720)
		mouseFocus: 	nil
		keyboardFocus: 	nil
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(169@392) mouseUp 52782832 nil]
		targetOffset: 	(45.0@5.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 52782832 169 392 0 0 1 1)
		lastKeyScanCode: 	50
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>sendEvent:focus:clear:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(169@392) mouseUp 52782832 nil]
		focusHolder: 	a MenuMorph(868717056)
		aBlock: 	[ self mouseFocus: nil ]
		result: 	nil
	Receiver's instance variables: 
		bounds: 	(169@392.0) corner: (185@408.0)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	(169@392.0) corner: (185@408.0)
		color: 	Color blue
		extension: 	a MorphExtension (144318720)
		mouseFocus: 	nil
		keyboardFocus: 	nil
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(169@392) mouseUp 52782832 nil]
		targetOffset: 	(45.0@5.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 52782832 169 392 0 0 1 1)
		lastKeyScanCode: 	50
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>sendMouseEvent:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(169@392) mouseUp 52782832 nil]
	Receiver's instance variables: 
		bounds: 	(169@392.0) corner: (185@408.0)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	(169@392.0) corner: (185@408.0)
		color: 	Color blue
		extension: 	a MorphExtension (144318720)
		mouseFocus: 	nil
		keyboardFocus: 	nil
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(169@392) mouseUp 52782832 nil]
		targetOffset: 	(45.0@5.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 52782832 169 392 0 0 1 1)
		lastKeyScanCode: 	50
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>handleEvent:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
SubscriptOutOfBounds: 1
2 January 2018 12:33:02.151369 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

OrderedCollection(Object)>>errorSubscriptBounds:
	Receiver: an OrderedCollection()
	Arguments and temporary variables: 
		index: 	1
	Receiver's instance variables: 
		array: 	#(nil nil nil nil nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	0


OrderedCollection>>at:
	Receiver: an OrderedCollection()
	Arguments and temporary variables: 
		anInteger: 	1
		index: 	1
	Receiver's instance variables: 
		array: 	#(nil nil nil nil nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	0


Storage class>>DoIt
	Receiver: Storage
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary()
		format: 	65540
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Storage
		classPool: 	a Dictionary(#default->nil )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-User-Examples'
		traitComposition: 	{}
		localSelectors: 	nil
		usuarios: 	an OrderedCollection(an Usuario an Usuario an Usuario an Usuario an U...etc...
		mensajes: 	an OrderedCollection()
		chatActual: 	an Usuario
		usuarioActual: 	an Usuario


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'(usuarios select: [ :e | e numero = 2 ]) at: 1.'
		itsSelection: 	a Text for '(usuarios select: [ :e | e numero = 2 ]) at: 1.'
		itsSelectionString: 	'(usuarios select: [ :e | e numero = 2 ]) at: 1.'
	Receiver's instance variables: 
		ast: 	DoIt
	^ (usuarios select: [ :e | e numero = 2 ]) at: 1
		source: 	a ReadStream
		context: 	nil
		receiver: 	Storage
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadWriteStream
		aBlock: 	[ :result | 
printString := [ result printString ]
	on: Error
	do: [ '<...etc...
		result: 	nil
		rcvr: 	Storage
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(70193408)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>evaluateSelectionAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | 
printString := [ result printString ]
	on: Error
	do: [ '<...etc...
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(70193408)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>printIt
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		printString: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(70193408)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubScrolledTextMorph(Object)>>perform:orSendTo:
	Receiver: a RubScrolledTextMorph(568964096)
	Arguments and temporary variables: 
		selector: 	#printIt
		otherTarget: 	a RubSmalltalkEditor
	Receiver's instance variables: 
		bounds: 	(21.0@371.0) corner: (1225.0@629.0)
		owner: 	a PanelMorph(911845632)
		submorphs: 	an Array(a RubTextScrollPane(95927552) a RubAdornmentDisplayer(55500...etc...
		fullBounds: 	(21@371) corner: (1225@629)
		color: 	Color white
		extension: 	a MorphExtension (383624960) [other:  (announcer -> an Announcer) (k...etc...
		hasEditingConflicts: 	false
		hasUnacceptedEdits: 	true
		alwaysAccept: 	false
		setTextSelector: 	#setText:from:
		getTextSelector: 	#getText
		getSelectionSelector: 	#primarySelectionInterval
		setSelectionSelector: 	nil
		autoAccept: 	false
		scrollPane: 	a RubTextScrollPane(95927552)
		rulers: 	a SortedCollection(a NautilusAnnotationDisplayer(968234240) a RubTextSe...etc...
		enabled: 	true
		highlights: 	an OrderedCollection()


[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ].
		self showShortcut ].
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(860117248)'Print it'
	Arguments and temporary variables: 
		evt: 	[(133@398) mouseUp 61092551 nil]
		w: 	a WorldMorph(562956288) [world]
		selArgCount: 	2
	Receiver's instance variables: 
		bounds: 	(81.0@387.0) corner: (280.0@404.0)
		owner: 	a MenuMorph(355428608)
		submorphs: 	#()
		fullBounds: 	(81.0@387.0) corner: (280.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (38636288)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


BlockClosure>>ensure:
	Receiver: [ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := select...etc...
	Arguments and temporary variables: 
		aBlock: 	[ oldcursor show ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
		startpc: 	138
		numArgs: 	0


CursorWithMask(Cursor)>>showWhile:
	Receiver: ((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2r100000000000000000000...etc...
	Arguments and temporary variables: 
		aBlock: 	[ | selArgCount |
"show cursor in case item opens a new MVC window"
(se...etc...
		oldcursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2...etc...
	Receiver's instance variables: 
		bits: 	a Bitmap of length 16
		width: 	16
		height: 	16
		depth: 	1
		offset: 	(-1@ -1)
		maskForm: 	Form(16x16x1)


ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(860117248)'Print it'
	Arguments and temporary variables: 
		evt: 	[(133@398) mouseUp 61092551 nil]
		w: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		bounds: 	(81.0@387.0) corner: (280.0@404.0)
		owner: 	a MenuMorph(355428608)
		submorphs: 	#()
		fullBounds: 	(81.0@387.0) corner: (280.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (38636288)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


ToggleMenuItemMorph(MenuItemMorph)>>mouseUp:
	Receiver: a ToggleMenuItemMorph(860117248)'Print it'
	Arguments and temporary variables: 
		evt: 	[(133@398) mouseUp 61092551 nil]
	Receiver's instance variables: 
		bounds: 	(81.0@387.0) corner: (280.0@404.0)
		owner: 	a MenuMorph(355428608)
		submorphs: 	#()
		fullBounds: 	(81.0@387.0) corner: (280.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (38636288)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


ToggleMenuItemMorph(MenuItemMorph)>>handleMouseUp:
	Receiver: a ToggleMenuItemMorph(860117248)'Print it'
	Arguments and temporary variables: 
		anEvent: 	[(133@398) mouseUp 61092551 nil]
	Receiver's instance variables: 
		bounds: 	(81.0@387.0) corner: (280.0@404.0)
		owner: 	a MenuMorph(355428608)
		submorphs: 	#()
		fullBounds: 	(81.0@387.0) corner: (280.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (38636288)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


MouseButtonEvent>>sentTo:
	Receiver: [(133@398) mouseUp 61092551 nil]
	Arguments and temporary variables: 
		anObject: 	a ToggleMenuItemMorph(860117248)'Print it'
	Receiver's instance variables: 
		timeStamp: 	61092551
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(133@398)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


ToggleMenuItemMorph(Morph)>>handleEvent:
	Receiver: a ToggleMenuItemMorph(860117248)'Print it'
	Arguments and temporary variables: 
		anEvent: 	[(133@398) mouseUp 61092551 nil]
	Receiver's instance variables: 
		bounds: 	(81.0@387.0) corner: (280.0@404.0)
		owner: 	a MenuMorph(355428608)
		submorphs: 	#()
		fullBounds: 	(81.0@387.0) corner: (280.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (38636288)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


MorphicEventDispatcher>>dispatchDefault:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(133@398) mouseUp 61092551 nil]
		aMorph: 	a ToggleMenuItemMorph(860117248)'Print it'
		localEvt: 	nil
		index: 	1
		child: 	nil
		morphs: 	#()
		inside: 	true
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(860117248)'Print it'


MorphicEventDispatcher>>handleMouseUp:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(133@398) mouseUp 61092551 nil]
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(860117248)'Print it'


MouseButtonEvent>>sentTo:
	Receiver: [(133@398) mouseUp 61092551 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	61092551
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(133@398)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(133@398) mouseUp 61092551 nil]
		aMorph: 	a ToggleMenuItemMorph(860117248)'Print it'
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(860117248)'Print it'


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(133@398) mouseUp 61092551 nil]
		aMorph: 	a ToggleMenuItemMorph(860117248)'Print it'
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(860117248)'Print it'


ToggleMenuItemMorph(Morph)>>processEvent:using:
	Receiver: a ToggleMenuItemMorph(860117248)'Print it'
	Arguments and temporary variables: 
		anEvent: 	[(133@398) mouseUp 61092551 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(81.0@387.0) corner: (280.0@404.0)
		owner: 	a MenuMorph(355428608)
		submorphs: 	#()
		fullBounds: 	(81.0@387.0) corner: (280.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (38636288)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


MorphicEventDispatcher>>dispatchDefault:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(133@398) mouseUp 61092551 nil]
		aMorph: 	a MenuMorph(355428608)
		localEvt: 	[(133@398) mouseUp 61092551 nil]
		index: 	6
		child: 	a ToggleMenuItemMorph(860117248)'Print it'
		morphs: 	an Array(a ToggleMenuItemMorph(824064256)'Format' a ToggleMenuItemMorph...etc...
		inside: 	false
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(860117248)'Print it'


MorphicEventDispatcher>>handleMouseUp:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(133@398) mouseUp 61092551 nil]
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(860117248)'Print it'


MouseButtonEvent>>sentTo:
	Receiver: [(133@398) mouseUp 61092551 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	61092551
		source: 	a HandMorph(58125568)
	THERE_BE_DRAGONS_HERE
Instance of SmallInteger did not understand #value:
2 January 2018 12:38:43.229369 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

SmallInteger(Object)>>doesNotUnderstand: #value:
	Receiver: 0
	Arguments and temporary variables: 
		aMessage: 	value: an Usuario
		exception: 	MessageNotUnderstood: SmallInteger>>value:
		resumeValue: 	nil
	Receiver's instance variables: 
0

OrderedCollection>>select:
	Receiver: an OrderedCollection(an Usuario an Usuario an Usuario an Usuario an Usuario an Usuario an ...etc...
	Arguments and temporary variables: 
		selectBlock: 	0
		newCollection: 	an OrderedCollection()
		element: 	an Usuario
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(an Usuario an Usuario an Usuario an Usuario an Usuario an Usuar...etc...
		firstIndex: 	1
		lastIndex: 	10


Storage class>>DoIt
	Receiver: Storage
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary()
		format: 	65540
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Storage
		classPool: 	a Dictionary(#default->nil )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-User-Examples'
		traitComposition: 	{}
		localSelectors: 	nil
		usuarios: 	an OrderedCollection(an Usuario an Usuario an Usuario an Usuario an U...etc...
		mensajes: 	an OrderedCollection()
		chatActual: 	an Usuario
		usuarioActual: 	an Usuario


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'usuarios select: [ :e | e numero = 1 ] size'
		itsSelection: 	a Text for 'usuarios select: [ :e | e numero = 1 ] size'
		itsSelectionString: 	'usuarios select: [ :e | e numero = 1 ] size'
	Receiver's instance variables: 
		ast: 	DoIt
	^ usuarios select: [ :e | e numero = 1 ] size
		source: 	a ReadStream
		context: 	nil
		receiver: 	Storage
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadWriteStream
		aBlock: 	[ :result | result basicInspect ]
		result: 	nil
		rcvr: 	Storage
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(70193408)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>evaluateSelectionAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result basicInspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(70193408)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>basicInspectIt
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 

	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(70193408)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubScrolledTextMorph(Object)>>perform:orSendTo:
	Receiver: a RubScrolledTextMorph(568964096)
	Arguments and temporary variables: 
		selector: 	#basicInspectIt
		otherTarget: 	a RubSmalltalkEditor
	Receiver's instance variables: 
		bounds: 	(21.0@371.0) corner: (1225.0@629.0)
		owner: 	a PanelMorph(911845632)
		submorphs: 	an Array(a RubTextScrollPane(95927552) a RubAdornmentDisplayer(55500...etc...
		fullBounds: 	(21@371) corner: (1225@629)
		color: 	Color white
		extension: 	a MorphExtension (383624960) [other:  (announcer -> an Announcer) (k...etc...
		hasEditingConflicts: 	false
		hasUnacceptedEdits: 	true
		alwaysAccept: 	false
		setTextSelector: 	#setText:from:
		getTextSelector: 	#getText
		getSelectionSelector: 	#primarySelectionInterval
		setSelectionSelector: 	nil
		autoAccept: 	false
		scrollPane: 	a RubTextScrollPane(95927552)
		rulers: 	a SortedCollection(a NautilusAnnotationDisplayer(968234240) a RubTextSe...etc...
		enabled: 	true
		highlights: 	an OrderedCollection()


[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ].
		self showShortcut ].
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(421953280)'Basic Inspect it'
	Arguments and temporary variables: 
		evt: 	[(237@431) mouseUp 61433644 nil]
		w: 	a WorldMorph(562956288) [world]
		selArgCount: 	2
	Receiver's instance variables: 
		bounds: 	(236.0@424.0) corner: (435.0@442.0)
		owner: 	a MenuMorph(774905344)
		submorphs: 	#()
		fullBounds: 	(236.0@424.0) corner: (435.0@442.0)
		color: 	Color black
		extension: 	a MorphExtension (493825792)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Basic Inspect it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#basicInspectIt a RubSmalltalkEditor)
		icon: 	Form(16x16x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'I'


BlockClosure>>ensure:
	Receiver: [ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := select...etc...
	Arguments and temporary variables: 
		aBlock: 	[ oldcursor show ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
		startpc: 	138
		numArgs: 	0


CursorWithMask(Cursor)>>showWhile:
	Receiver: ((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2r100000000000000000000...etc...
	Arguments and temporary variables: 
		aBlock: 	[ | selArgCount |
"show cursor in case item opens a new MVC window"
(se...etc...
		oldcursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2...etc...
	Receiver's instance variables: 
		bits: 	a Bitmap of length 16
		width: 	16
		height: 	16
		depth: 	1
		offset: 	(-1@ -1)
		maskForm: 	Form(16x16x1)


ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(421953280)'Basic Inspect it'
	Arguments and temporary variables: 
		evt: 	[(237@431) mouseUp 61433644 nil]
		w: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		bounds: 	(236.0@424.0) corner: (435.0@442.0)
		owner: 	a MenuMorph(774905344)
		submorphs: 	#()
		fullBounds: 	(236.0@424.0) corner: (435.0@442.0)
		color: 	Color black
		extension: 	a MorphExtension (493825792)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Basic Inspect it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#basicInspectIt a RubSmalltalkEditor)
		icon: 	Form(16x16x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'I'


ToggleMenuItemMorph(MenuItemMorph)>>mouseUp:
	Receiver: a ToggleMenuItemMorph(421953280)'Basic Inspect it'
	Arguments and temporary variables: 
		evt: 	[(237@431) mouseUp 61433644 nil]
	Receiver's instance variables: 
		bounds: 	(236.0@424.0) corner: (435.0@442.0)
		owner: 	a MenuMorph(774905344)
		submorphs: 	#()
		fullBounds: 	(236.0@424.0) corner: (435.0@442.0)
		color: 	Color black
		extension: 	a MorphExtension (493825792)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Basic Inspect it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#basicInspectIt a RubSmalltalkEditor)
		icon: 	Form(16x16x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'I'


ToggleMenuItemMorph(MenuItemMorph)>>handleMouseUp:
	Receiver: a ToggleMenuItemMorph(421953280)'Basic Inspect it'
	Arguments and temporary variables: 
		anEvent: 	[(237@431) mouseUp 61433644 nil]
	Receiver's instance variables: 
		bounds: 	(236.0@424.0) corner: (435.0@442.0)
		owner: 	a MenuMorph(774905344)
		submorphs: 	#()
		fullBounds: 	(236.0@424.0) corner: (435.0@442.0)
		color: 	Color black
		extension: 	a MorphExtension (493825792)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Basic Inspect it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#basicInspectIt a RubSmalltalkEditor)
		icon: 	Form(16x16x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'I'


MouseButtonEvent>>sentTo:
	Receiver: [(237@431) mouseUp 61433644 nil]
	Arguments and temporary variables: 
		anObject: 	a ToggleMenuItemMorph(421953280)'Basic Inspect it'
	Receiver's instance variables: 
		timeStamp: 	61433644
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		posiTHERE_BE_DRAGONS_HERE
Instance of SmallInteger did not understand #value:
2 January 2018 12:38:48.318369 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

SmallInteger(Object)>>doesNotUnderstand: #value:
	Receiver: 0
	Arguments and temporary variables: 
		aMessage: 	value: an Usuario
		exception: 	MessageNotUnderstood: SmallInteger>>value:
		resumeValue: 	nil
	Receiver's instance variables: 
0

OrderedCollection>>select:
	Receiver: an OrderedCollection(an Usuario an Usuario an Usuario an Usuario an Usuario an Usuario an ...etc...
	Arguments and temporary variables: 
		selectBlock: 	0
		newCollection: 	an OrderedCollection()
		element: 	an Usuario
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(an Usuario an Usuario an Usuario an Usuario an Usuario an Usuar...etc...
		firstIndex: 	1
		lastIndex: 	10


Storage class>>DoIt
	Receiver: Storage
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary()
		format: 	65540
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Storage
		classPool: 	a Dictionary(#default->nil )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-User-Examples'
		traitComposition: 	{}
		localSelectors: 	nil
		usuarios: 	an OrderedCollection(an Usuario an Usuario an Usuario an Usuario an U...etc...
		mensajes: 	an OrderedCollection()
		chatActual: 	an Usuario
		usuarioActual: 	an Usuario


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'usuarios select: [ :e | e numero = 1 ] size'
		itsSelection: 	a Text for 'usuarios select: [ :e | e numero = 1 ] size'
		itsSelectionString: 	'usuarios select: [ :e | e numero = 1 ] size'
	Receiver's instance variables: 
		ast: 	DoIt
	^ usuarios select: [ :e | e numero = 1 ] size
		source: 	a ReadStream
		context: 	nil
		receiver: 	Storage
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadWriteStream
		aBlock: 	[ :result | 
printString := [ result printString ]
	on: Error
	do: [ '<...etc...
		result: 	nil
		rcvr: 	Storage
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(70193408)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>evaluateSelectionAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | 
printString := [ result printString ]
	on: Error
	do: [ '<...etc...
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(70193408)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>printIt
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		printString: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(70193408)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubScrolledTextMorph(Object)>>perform:orSendTo:
	Receiver: a RubScrolledTextMorph(568964096)
	Arguments and temporary variables: 
		selector: 	#printIt
		otherTarget: 	a RubSmalltalkEditor
	Receiver's instance variables: 
		bounds: 	(21.0@371.0) corner: (1225.0@629.0)
		owner: 	a PanelMorph(911845632)
		submorphs: 	an Array(a RubTextScrollPane(95927552) a RubAdornmentDisplayer(55500...etc...
		fullBounds: 	(21@371) corner: (1225@629)
		color: 	Color white
		extension: 	a MorphExtension (383624960) [other:  (announcer -> an Announcer) (k...etc...
		hasEditingConflicts: 	false
		hasUnacceptedEdits: 	true
		alwaysAccept: 	false
		setTextSelector: 	#setText:from:
		getTextSelector: 	#getText
		getSelectionSelector: 	#primarySelectionInterval
		setSelectionSelector: 	nil
		autoAccept: 	false
		scrollPane: 	a RubTextScrollPane(95927552)
		rulers: 	a SortedCollection(a NautilusAnnotationDisplayer(968234240) a RubTextSe...etc...
		enabled: 	true
		highlights: 	an OrderedCollection()


[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ].
		self showShortcut ].
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(524242688)'Print it'
	Arguments and temporary variables: 
		evt: 	[(358@398) mouseUp 61438769 nil]
		w: 	a WorldMorph(562956288) [world]
		selArgCount: 	2
	Receiver's instance variables: 
		bounds: 	(275.0@387.0) corner: (474.0@404.0)
		owner: 	a MenuMorph(944891392)
		submorphs: 	#()
		fullBounds: 	(275.0@387.0) corner: (474.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (771524608)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


BlockClosure>>ensure:
	Receiver: [ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := select...etc...
	Arguments and temporary variables: 
		aBlock: 	[ oldcursor show ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
		startpc: 	138
		numArgs: 	0


CursorWithMask(Cursor)>>showWhile:
	Receiver: ((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2r100000000000000000000...etc...
	Arguments and temporary variables: 
		aBlock: 	[ | selArgCount |
"show cursor in case item opens a new MVC window"
(se...etc...
		oldcursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0
		2...etc...
	Receiver's instance variables: 
		bits: 	a Bitmap of length 16
		width: 	16
		height: 	16
		depth: 	1
		offset: 	(-1@ -1)
		maskForm: 	Form(16x16x1)


ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
	Receiver: a ToggleMenuItemMorph(524242688)'Print it'
	Arguments and temporary variables: 
		evt: 	[(358@398) mouseUp 61438769 nil]
		w: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		bounds: 	(275.0@387.0) corner: (474.0@404.0)
		owner: 	a MenuMorph(944891392)
		submorphs: 	#()
		fullBounds: 	(275.0@387.0) corner: (474.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (771524608)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


ToggleMenuItemMorph(MenuItemMorph)>>mouseUp:
	Receiver: a ToggleMenuItemMorph(524242688)'Print it'
	Arguments and temporary variables: 
		evt: 	[(358@398) mouseUp 61438769 nil]
	Receiver's instance variables: 
		bounds: 	(275.0@387.0) corner: (474.0@404.0)
		owner: 	a MenuMorph(944891392)
		submorphs: 	#()
		fullBounds: 	(275.0@387.0) corner: (474.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (771524608)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


ToggleMenuItemMorph(MenuItemMorph)>>handleMouseUp:
	Receiver: a ToggleMenuItemMorph(524242688)'Print it'
	Arguments and temporary variables: 
		anEvent: 	[(358@398) mouseUp 61438769 nil]
	Receiver's instance variables: 
		bounds: 	(275.0@387.0) corner: (474.0@404.0)
		owner: 	a MenuMorph(944891392)
		submorphs: 	#()
		fullBounds: 	(275.0@387.0) corner: (474.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (771524608)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


MouseButtonEvent>>sentTo:
	Receiver: [(358@398) mouseUp 61438769 nil]
	Arguments and temporary variables: 
		anObject: 	a ToggleMenuItemMorph(524242688)'Print it'
	Receiver's instance variables: 
		timeStamp: 	61438769
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(358@398)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


ToggleMenuItemMorph(Morph)>>handleEvent:
	Receiver: a ToggleMenuItemMorph(524242688)'Print it'
	Arguments and temporary variables: 
		anEvent: 	[(358@398) mouseUp 61438769 nil]
	Receiver's instance variables: 
		bounds: 	(275.0@387.0) corner: (474.0@404.0)
		owner: 	a MenuMorph(944891392)
		submorphs: 	#()
		fullBounds: 	(275.0@387.0) corner: (474.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (771524608)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


MorphicEventDispatcher>>dispatchDefault:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(358@398) mouseUp 61438769 nil]
		aMorph: 	a ToggleMenuItemMorph(524242688)'Print it'
		localEvt: 	nil
		index: 	1
		child: 	nil
		morphs: 	#()
		inside: 	true
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(524242688)'Print it'


MorphicEventDispatcher>>handleMouseUp:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(358@398) mouseUp 61438769 nil]
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(524242688)'Print it'


MouseButtonEvent>>sentTo:
	Receiver: [(358@398) mouseUp 61438769 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	61438769
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(358@398)
		handler: 	nil
		wasHandled: 	true
		whichButton: 	4


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(358@398) mouseUp 61438769 nil]
		aMorph: 	a ToggleMenuItemMorph(524242688)'Print it'
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(524242688)'Print it'


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(358@398) mouseUp 61438769 nil]
		aMorph: 	a ToggleMenuItemMorph(524242688)'Print it'
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(524242688)'Print it'


ToggleMenuItemMorph(Morph)>>processEvent:using:
	Receiver: a ToggleMenuItemMorph(524242688)'Print it'
	Arguments and temporary variables: 
		anEvent: 	[(358@398) mouseUp 61438769 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(275.0@387.0) corner: (474.0@404.0)
		owner: 	a MenuMorph(944891392)
		submorphs: 	#()
		fullBounds: 	(275.0@387.0) corner: (474.0@404.0)
		color: 	Color black
		extension: 	a MorphExtension (771524608)
		font: 	a LogicalFont
 familyName: Source Sans Pro
 emphasis: nil
 pointSize: 10
...etc...
		emphasis: 	0
		contents: 	'Print it'
		hasFocus: 	false
		backgroundColor: 	Color transparent
		isEnabled: 	true
		subMenu: 	nil
		isSelected: 	false
		target: 	a RubScrolledTextMorph(568964096)
		selector: 	#perform:orSendTo:
		arguments: 	an Array(#printIt a RubSmalltalkEditor)
		icon: 	Form(13x13x32)
		getStateSelector: 	nil
		enablementSelector: 	nil
		keyText: 	'p'


MorphicEventDispatcher>>dispatchDefault:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(358@398) mouseUp 61438769 nil]
		aMorph: 	a MenuMorph(944891392)
		localEvt: 	[(358@398) mouseUp 61438769 nil]
		index: 	6
		child: 	a ToggleMenuItemMorph(524242688)'Print it'
		morphs: 	an Array(a ToggleMenuItemMorph(510240000)'Format' a ToggleMenuItemMorph...etc...
		inside: 	false
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(524242688)'Print it'


MorphicEventDispatcher>>handleMouseUp:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(358@398) mouseUp 61438769 nil]
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(524242688)'Print it'


MouseButtonEvent>>sentTo:
	Receiver: [(358@398) mouseUp 61438769 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	61438769
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseUp
		buttons: 	0
		position: 	(358@398)
		handler: 	nil
		wasHandled: 	false
		whichButton: 	4


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(358@398) mouseUp 61438769 nil]
		aMorph: 	a MenuMorph(944891392)
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(524242688)'Print it'


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(358@398) mouseUp 61438769 nil]
		aMorph: 	a MenuMorph(944891392)
	Receiver's instance variables: 
		morph: 	a ToggleMenuItemMorph(524242688)'Print it'


MenuMorph(Morph)>>processEvent:using:
	Receiver: a MenuMorph(944891392)
	Arguments and temporary variables: 
		anEvent: 	[(358@398) mouseUp 61438769 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(271.0@307.0) corner: (478.0@703.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(510240000)'Format' a ToggleMenuItemMo...etc...
		fullBounds: 	(271.0@307.0) corner: (479.0@704.0)
		color: 	(Color r: 0.775 g: 0.775 b: 0.775 alpha: 1.0)
		extension: 	a MorphExtension (705507072) [other:  (basicColor -> Color lightGray...etc...
		borderWidth: 	1
		borderColor: 	Color gray
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(524242688)'Print it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph(Morph)>>processEvent:
	Receiver: a MenuMorph(944891392)
	Arguments and temporary variables: 
		anEvent: 	[(358@398) mouseUp 61438769 nil]
	Receiver's instance variables: 
		bounds: 	(271.0@307.0) corner: (478.0@703.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(510240000)'Format' a ToggleMenuItemMo...etc...
		fullBounds: 	(271.0@307.0) corner: (479.0@704.0)
		color: 	(Color r: 0.775 g: 0.775 b: 0.775 alpha: 1.0)
		extension: 	a MorphExtension (705507072) [other:  (basicColor -> Color lightGray...etc...
		borderWidth: 	1
		borderColor: 	Color gray
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(524242688)'Print it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>handleFocusEvent:
	Receiver: a MenuMorph(944891392)
	Arguments and temporary variables: 
		evt: 	[(358@398) mouseUp 61438769 nil]
	Receiver's instance variables: 
		bounds: 	(271.0@307.0) corner: (478.0@703.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(510240000)'Format' a ToggleMenuItemMo...etc...
		fullBounds: 	(271.0@307.0) corner: (479.0@704.0)
		color: 	(Color r: 0.775 g: 0.775 b: 0.775 alpha: 1.0)
		extension: 	a MorphExtension (705507072) [other:  (basicColor -> Color lightGray...etc...
		borderWidth: 	1
		borderColor: 	Color gray
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(524242688)'Print it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(358@398) mouseUp 61438769 nil]
		focusHolder: 	a MenuMorph(944891392)
		aBlock: 	[ self mouseFocus: nil ]
		w: 	a WorldMorph(562956288) [world]
		result: 	nil
	Receiver's instance variables: 
		bounds: 	(358@398.0) corner: (374@414.0)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	(358@398.0) corner: (374@414.0)
		color: 	Color blue
		extension: 	a MorphExtension (144318720)
		mouseFocus: 	nil
		keyboardFocus: 	nil
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(358@398) mouseUp 61438769 nil]
		targetOffset: 	(83.0@11.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 61438769 358 398 0 0 1 1)
		lastKeyScanCode: 	69
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


BlockClosure>>on:do:
	Receiver: [ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (an...etc...
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[ :ex | 
ActiveWorld := priorWorld.
ActiveEvent := priorEvent.
A...etc...
	Receiver's instance variables: 
		outerContext: 	HandMorph>>sendFocusEvent:to:clear:
		startpc: 	67
		numArgs: 	0


WorldMorph(PasteUpMorph)>>becomeActiveDuring:
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 
		aBlock: 	[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	ha...etc...
		priorWorld: 	a WorldMorph(562956288) [world]
		priorHand: 	a HandMorph(58125568)
		priorEvent: 	[(358@398) mouseOver red 61438676 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1259@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a NautilusWindow(67923200) a GLMS...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


HandMorph>>sendFocusEvent:to:clear:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		result: 	nil
		anEvent: 	[(358@398) mouseUp 61438769 nil]
		focusHolder: 	a MenuMorph(944891392)
		aBlock: 	[ self mouseFocus: nil ]
		w: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		bounds: 	(358@398.0) corner: (374@414.0)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	(358@398.0) corner: (374@414.0)
		color: 	Color blue
		extension: 	a MorphExtension (144318720)
		mouseFocus: 	nil
		keyboardFocus: 	nil
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(358@398) mouseUp 61438769 nil]
		targetOffset: 	(83.0@11.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 61438769 358 398 0 0 1 1)
		lastKeyScanCode: 	69
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>sendEvent:focus:clear:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(358@398) mouseUp 61438769 nil]
		focusHolder: 	a MenuMorph(944891392)
		aBlock: 	[ self mouseFocus: nil ]
		result: 	nil
	Receiver's instance variables: 
		bounds: 	(358@398.0) corner: (374@414.0)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	(358@398.0) corner: (374@414.0)
		color: 	Color blue
		extension: 	a MorphExtension (144318720)
		mouseFocus: 	nil
		keyboardFocus: 	nil
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(358@398) mouseUp 61438769 nil]
		targetOffset: 	(83.0@11.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 61438769 358 398 0 0 1 1)
		lastKeyScanCode: 	69
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>sendMouseEvent:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
		anEvent: 	[(358@398) mouseUp 61438769 nil]
	Receiver's instance variables: 
		bounds: 	(358@398.0) corner: (374@414.0)
		owner: 	a WorldMorph(562956288) [world]
		submorphs: 	#()
		fullBounds: 	(358@398.0) corner: (374@414.0)
		color: 	Color blue
		extension: 	a MorphExtension (144318720)
		mouseFocus: 	nil
		keyboardFocus: 	nil
		eventListeners: 	nil
		mouseListeners: 	nil
		keyboardListeners: 	nil
		mouseClickState: 	nil
		mouseOverHandler: 	a MouseOverHandler
		lastMouseEvent: 	[(358@398) mouseUp 61438769 nil]
		targetOffset: 	(83.0@11.0)
		damageRecorder: 	a DamageRecorder
		cacheCanvas: 	nil
		cachedCanvasHasHoles: 	true
		temporaryCursor: 	nil
		temporaryCursorOffset: 	nil
		hardwareCursor: 	nil
		hasChanged: 	true
		savedPatch: 	nil
		lastEventBuffer: 	#(1 61438769 358 398 0 0 1 1)
		lastKeyScanCode: 	69
		combinedChar: 	nil
		eventSource: 	nil
		lastSystemEvent: 	nil
		captureBlock: 	nil
		recentModifiers: 	0


HandMorph>>handleEvent:
	Receiver: a HandMorph(58125568)
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
Instance of Storage class did not understand #amigos
2 January 2018 12:54:22.469369 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

Storage class(Object)>>doesNotUnderstand: #amigos
	Receiver: Storage
	Arguments and temporary variables: 
		aMessage: 	amigos
		exception: 	MessageNotUnderstood: Storage class>>amigos
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary()
		format: 	65540
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Storage
		classPool: 	a Dictionary(#default->nil )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-User-Examples'
		traitComposition: 	{}
		localSelectors: 	nil
		usuarios: 	an OrderedCollection(an Usuario an Usuario an Usuario an Usuario an U...etc...
		mensajes: 	an OrderedCollection()
		chatActual: 	an Usuario
		usuarioActual: 	an Usuario


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'Storage amigos'
		itsSelection: 	a Text for 'Storage amigos'
		itsSelectionString: 	'Storage amigos'
	Receiver's instance variables: 
		ast: 	DoIt
	^ Storage amigos
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(965671168)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(965671168)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(461888768)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(965671168)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@31)
		owner: 	a TransformWithLayoutMorph(430070784)
		submorphs: 	an Array(a RubPrimarySelectionMorph(63795200) a RubCursor(630249472)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (902115328) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(847482880)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(630249472)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(620182784))
		getMenuPolicy: 	a RubEditingArea(965671168)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(461888768)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1259@721)
		canvas: 	a FormCanvas on: DisplayScreen(1259x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(713000192))(a DropList...etc...
		lastStepTime: 	12865285
		lastStepMessage: 	nil
		lastCycleTime: 	12865307
		alarms: 	a Heap()
		lastAlarmTime: 	12865285
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1259@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(230381056) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1259@721)
		canvas: 	a FormCanvas on: DisplayScreen(1259x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(713000192))(a DropList...etc...
		lastStepTime: 	12865285
		lastStepMessage: 	nil
		lastCycleTime: 	12865307
		alarms: 	a Heap()
		lastAlarmTime: 	12865285
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1259@721)
		canvas: 	a FormCanvas on: DisplayScreen(1259x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(713000192))(a DropList...etc...
		lastStepTime: 	12865285
		lastStepMessage: 	nil
		lastCycleTime: 	12865307
		alarms: 	a Heap()
		lastAlarmTime: 	12865285
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1259@721)
		canvas: 	a FormCanvas on: DisplayScreen(1259x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(713000192))(a DropList...etc...
		lastStepTime: 	12865285
		lastStepMessage: 	nil
		lastCycleTime: 	12865307
		alarms: 	a Heap()
		lastAlarmTime: 	12865285
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1259@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(230381056) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(607088128)
	Arguments and temporary variables: 
		aPoint: 	(498@276.0)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(965671168)
	Receiver's instance variables: 
		bounds: 	(496.0@268.0) corner: (703.0@504.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(919770368)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(496.0@268.0) corner: (704.0@505.0)
		color: 	(Color r: 0.775 g: 0.775 b: 0.775 alpha: 1.0)
		extension: 	a MorphExtension (727336704) [other:  (basicColor -> Color lightGray...etc...
		borderWidth: 	1
		borderColor: 	Color gray
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(378717440)'Inspect it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(607088128)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(496.0@268.0) corner: (703.0@504.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(919770368)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(496.0@268.0) corner: (704.0@505.0)
		color: 	(Color r: 0.775 g: 0.775 b: 0.775 alpha: 1.0)
		extension: 	a MorphExtension (727336704) [other:  (basicColor -> Color lightGray...etc...
		borderWidth: 	1
		borderColor: 	Color gray
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(378717440)'Inspect it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorTHERE_BE_DRAGONS_HERE
Instance of ByteString did not understand #cleanFriends
2 January 2018 1:11:36.595369 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

ByteString(Object)>>doesNotUnderstand: #cleanFriends
	Receiver: '4505590'
	Arguments and temporary variables: 
		aMessage: 	cleanFriends
		exception: 	MessageNotUnderstood: ByteString>>cleanFriends
		resumeValue: 	nil
	Receiver's instance variables: 
'4505590'

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'Storage usuarioConNumero: ''4505590'' cleanFriends'
		itsSelection: 	a Text for 'Storage usuarioConNumero: ''4505590'' cleanFriends'
		itsSelectionString: 	'Storage usuarioConNumero: ''4505590'' cleanFriends'
	Receiver's instance variables: 
		ast: 	DoIt
	^ Storage usuarioConNumero: '4505590' cleanFriends
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(280679936)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(280679936)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(820026624)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(280679936)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@31)
		owner: 	a TransformWithLayoutMorph(442271488)
		submorphs: 	an Array(a RubPrimarySelectionMorph(372581376) a RubCursor(101724569...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (212528128) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(297947392)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(1017245696)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(697360640))
		getMenuPolicy: 	a RubEditingArea(280679936)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(820026624)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1259@721)
		canvas: 	a FormCanvas on: DisplayScreen(1259x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(696327424))(a SearchMorp...etc...
		lastStepTime: 	13899428
		lastStepMessage: 	nil
		lastCycleTime: 	13899451
		alarms: 	a Heap()
		lastAlarmTime: 	13899428
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1259@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(738514432) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1259@721)
		canvas: 	a FormCanvas on: DisplayScreen(1259x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(696327424))(a SearchMorp...etc...
		lastStepTime: 	13899428
		lastStepMessage: 	nil
		lastCycleTime: 	13899451
		alarms: 	a Heap()
		lastAlarmTime: 	13899428
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1259@721)
		canvas: 	a FormCanvas on: DisplayScreen(1259x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(696327424))(a SearchMorp...etc...
		lastStepTime: 	13899428
		lastStepMessage: 	nil
		lastCycleTime: 	13899451
		alarms: 	a Heap()
		lastAlarmTime: 	13899428
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1259@721)
		canvas: 	a FormCanvas on: DisplayScreen(1259x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(696327424))(a SearchMorp...etc...
		lastStepTime: 	13899428
		lastStepMessage: 	nil
		lastCycleTime: 	13899451
		alarms: 	a Heap()
		lastAlarmTime: 	13899428
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1259@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(738514432) a Na...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(507731456)
	Arguments and temporary variables: 
		aPoint: 	(642@143.0)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(280679936)
	Receiver's instance variables: 
		bounds: 	(640.0@135.0) corner: (847.0@371.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(115025152)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(640.0@135.0) corner: (848.0@372.0)
		color: 	(Color r: 0.775 g: 0.775 b: 0.775 alpha: 1.0)
		extension: 	a MorphExtension (652301056) [other:  (basicColor -> Color lightGray...etc...
		borderWidth: 	1
		borderColor: 	Color gray
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(924143872)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(507731456)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(640.0@135.0) corner: (847.0@371.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(115025152)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(640.0@135.0) corner: (848.0@372.0)
		color: 	(Color r: 0.775 g: 0.775 b: 0.775 alpha: 1.0)
		extension: 	a MorphExtension (652301056) [other:  (basicColor -> Color lightGray...etc...
		borderWidth: 	1
		borderColor: 	Color gray
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(924143872)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(507731456)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(640.0@135.0) corner: (847.0@371.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(115025152)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(640.0@135.0) corner: (848.0@372.0)
		color: 	(Color r: 0.775 g: 0.775 b: 0.775 alpha: 1.0)
		extension: 	a MorphExtension (652301056) [other:  (basicColor -> Color lightGray...etc...
		borderWidth: 	1
		borderColor: 	Color gray
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(924143872)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(280679936)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(507731456)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@31)
		owner: 	a TransformWithLayoutMorph(442271488)
		submorphs: 	an Array(a RubPrimarySelectionMorph(372581376) a RubCursor(101724569...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (212528128) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(297947392)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(1017245696)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(697360640))
		getMenuPolicy: 	a RubEditingArea(280679936)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(280679936)
	Arguments and temporary variables: 
		evt: 	[(73@10) mouseDown yellow 63406207 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@31)
		owner: 	a TransformWithLayoutMorph(442271488)
		submorphs: 	an Array(a RubPrimarySelectionMorph(372581376) a RubCursor(101724569...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (212528128) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(297947392)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(1017245696)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(697360640))
		getMenuPolicy: 	a RubEditingArea(280679936)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(280679936)
	Arguments and temporary variables: 
		anEvent: 	[(73@10) mouseDown yellow 63406207 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@31)
		owner: 	a TransformWithLayoutMorph(442271488)
		submorphs: 	an Array(a RubPrimarySelectionMorph(372581376) a RubCursor(101724569...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (212528128) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(297947392)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(1017245696)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(697360640))
		getMenuPolicy: 	a RubEditingArea(280679936)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MouseButtonEvent>>sentTo:
	Receiver: [(73@10) mouseDown yellow 63406207 nil]
	Arguments and temporary variables: 
		anObject: 	a RubEditingArea(280679936)
	Receiver's instance variables: 
		timeStamp: 	63406207
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(73@10)
		handler: 	a RubEditingArea(280679936)
		wasHandled: 	true
		whichButton: 	2


RubEditingArea(Morph)>>handleEvent:
	Receiver: a RubEditingArea(280679936)
	Arguments and temporary variables: 
		anEvent: 	[(73@10) mouseDown yellow 63406207 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@31)
		owner: 	a TransformWithLayoutMorph(442271488)
		submorphs: 	an Array(a RubPrimarySelectionMorph(372581376) a RubCursor(101724569...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (212528128) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(297947392)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(1017245696)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(697360640))
		getMenuPolicy: 	a RubEditingArea(280679936)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(73@10) mouseDown yellow 63406207 nil]
		aMorph: 	a RubEditingArea(280679936)
		globalPt: 	(73@10)
		localEvt: 	[(73@10) mouseDown yellow 63406207 nil]
		index: 	3
		child: 	a RubPrimarySelectionMorph(372581376)
		morphs: 	an Array(a RubPrimarySelectionMorph(372581376) a RubCursor(1017245696))...etc...
		handler: 	a RubEditingArea(280679936)
		inside: 	false
		lastHandler: 	a RubScrolledTextMorph(820026624)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(73@10) mouseDown yellow 63406207 nil]THERE_BE_DRAGONS_HERE
Error: Instances of Usuario are not indexable
2 January 2018 1:45:34.415369 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

Usuario(Object)>>error:
	Receiver: an Usuario
	Arguments and temporary variables: 
		aString: 	'Instances of Usuario are not indexable'
	Receiver's instance variables: 
		nombre: 	''
		apellido: 	''
		numero: 	'1'
		estado: 	'Hey there! Im using STWhatsapp'
		foto: 	nil
		amigos: 	an OrderedCollection()
		conversaciones: 	an OrderedCollection()


Usuario(Object)>>errorNotIndexable
	Receiver: an Usuario
	Arguments and temporary variables: 

	Receiver's instance variables: 
		nombre: 	''
		apellido: 	''
		numero: 	'1'
		estado: 	'Hey there! Im using STWhatsapp'
		foto: 	nil
		amigos: 	an OrderedCollection()
		conversaciones: 	an OrderedCollection()


Usuario(Object)>>size
	Receiver: an Usuario
	Arguments and temporary variables: 

	Receiver's instance variables: 
		nombre: 	''
		apellido: 	''
		numero: 	'1'
		estado: 	'Hey there! Im using STWhatsapp'
		foto: 	nil
		amigos: 	an OrderedCollection()
		conversaciones: 	an OrderedCollection()


[ :result | 
"withSmalltalkSearch;
		showOnly: 50;
		helpMessage: 'Quick selection field. Given your INPUT, it executes: self select: [:each | INPUT ]'."
result isNil
	ifTrue: [ nil ]
	ifFalse: [ result size = 1
			ifTrue: [ result anyOne ]
			ifFalse: [ self species withAll: result ] ] ] in OrderedCollection(SequenceableCollection)>>gtInspectorItemsIn:
	Receiver: an OrderedCollection(an Usuario an Usuario)
	Arguments and temporary variables: 
		composite: 	a GLMCompositePresentation(id=792932608 title=nil pane=a GLMPane(610...etc...
		result: 	an Usuario
	Receiver's instance variables: 
		array: 	an Array(an Usuario an Usuario nil nil nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	2


BlockClosure>>glamourValueWithArgs:
	Receiver: [ :result | 
"withSmalltalkSearch;
		showOnly: 50;
		helpMessage: 'Quick selection field. ...etc...
	Arguments and temporary variables: 
		anArray: 	an Array(an Usuario)
	Receiver's instance variables: 
		outerContext: 	OrderedCollection(SequenceableCollection)>>gtInspectorItemsIn:
		startpc: 	151
		numArgs: 	1


BlockClosure(ProtoObject)>>glamourValue:
	Receiver: [ :result | 
"withSmalltalkSearch;
		showOnly: 50;
		helpMessage: 'Quick selection field. ...etc...
	Arguments and temporary variables: 
		anObject: 	an Usuario
		args: 	an Array(an Usuario)
	Receiver's instance variables: 
		outerContext: 	OrderedCollection(SequenceableCollection)>>gtInspectorItemsIn:
		startpc: 	151
		numArgs: 	1


GLMFastTablePresentation(GLMPresentation)>>strongSelection:
	Receiver: a GLMFastTablePresentation(id=949168896 title=Items pane=a GLMPane(610984960 1))
	Arguments and temporary variables: 
		anObject: 	an Usuario
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(610984960 1)
		title: 	'Items'
		titleIcon: 	nil
		transformation: 	[ self ]
		actions: 	an OrderedCollection()
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	false
		acceptsSelection: 	true
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	false
		rTHERE_BE_DRAGONS_HERE
Error: Instances of Usuario are not indexable
2 January 2018 1:45:42.114369 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

Usuario(Object)>>error:
	Receiver: an Usuario
	Arguments and temporary variables: 
		aString: 	'Instances of Usuario are not indexable'
	Receiver's instance variables: 
		nombre: 	''
		apellido: 	''
		numero: 	'1'
		estado: 	'Hey there! Im using STWhatsapp'
		foto: 	nil
		amigos: 	an OrderedCollection()
		conversaciones: 	an OrderedCollection()


Usuario(Object)>>errorNotIndexable
	Receiver: an Usuario
	Arguments and temporary variables: 

	Receiver's instance variables: 
		nombre: 	''
		apellido: 	''
		numero: 	'1'
		estado: 	'Hey there! Im using STWhatsapp'
		foto: 	nil
		amigos: 	an OrderedCollection()
		conversaciones: 	an OrderedCollection()


Usuario(Object)>>size
	Receiver: an Usuario
	Arguments and temporary variables: 

	Receiver's instance variables: 
		nombre: 	''
		apellido: 	''
		numero: 	'1'
		estado: 	'Hey there! Im using STWhatsapp'
		foto: 	nil
		amigos: 	an OrderedCollection()
		conversaciones: 	an OrderedCollection()


[ :result | 
"withSmalltalkSearch;
		showOnly: 50;
		helpMessage: 'Quick selection field. Given your INPUT, it executes: self select: [:each | INPUT ]'."
result isNil
	ifTrue: [ nil ]
	ifFalse: [ result size = 1
			ifTrue: [ result anyOne ]
			ifFalse: [ self species withAll: result ] ] ] in OrderedCollection(SequenceableCollection)>>gtInspectorItemsIn:
	Receiver: an OrderedCollection(an Usuario an Usuario)
	Arguments and temporary variables: 
		composite: 	a GLMCompositePresentation(id=792932608 title=nil pane=a GLMPane(610...etc...
		result: 	an Usuario
	Receiver's instance variables: 
		array: 	an Array(an Usuario an Usuario nil nil nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	2


BlockClosure>>glamourValueWithArgs:
	Receiver: [ :result | 
"withSmalltalkSearch;
		showOnly: 50;
		helpMessage: 'Quick selection field. ...etc...
	Arguments and temporary variables: 
		anArray: 	an Array(an Usuario)
	Receiver's instance variables: 
		outerContext: 	OrderedCollection(SequenceableCollection)>>gtInspectorItemsIn:
		startpc: 	151
		numArgs: 	1


BlockClosure(ProtoObject)>>glamourValue:
	Receiver: [ :result | 
"withSmalltalkSearch;
		showOnly: 50;
		helpMessage: 'Quick selection field. ...etc...
	Arguments and temporary variables: 
		anObject: 	an Usuario
		args: 	an Array(an Usuario)
	Receiver's instance variables: 
		outerContext: 	OrderedCollection(SequenceableCollection)>>gtInspectorItemsIn:
		startpc: 	151
		numArgs: 	1


GLMFastTablePresentation(GLMPresentation)>>strongSelection:
	Receiver: a GLMFastTablePresentation(id=949168896 title=Items pane=a GLMPane(610984960 1))
	Arguments and temporary variables: 
		anObject: 	an Usuario
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(610984960 1)
		title: 	'Items'
		titleIcon: 	nil
		transformation: 	[ self ]
		actions: 	an OrderedCollection()
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	false
		acceptsSelection: 	true
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	false
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	an OrderedCollection(an Usuario an Usuario)
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	true
		format: 	nil
		icon: 	[ nil ]
		searchBlock: 	nil
		filterBlock: 	nil
		amountToShowBlock: 	nil
		allowsMultipleSelection: 	true
		allowsDeselection: 	false
		tagsStyle: 	nil
		helpMessage: 	nil
		sortBlock: 	nil
		textBackgroundColor: 	nil
		dropOnItemBlock: 	nil
		allowDropOnItemBlock: 	nil
		allowItemDragBlock: 	nil
		transformDraggedItemBlock: 	nil
		allowsRecursiveSearch: 	nil
		columns: 	an OrderedCollection(a GLMTableColumn a GLMTableColumn)
		children: 	[ #() ]
		rootsExpanded: 	nil
		shouldShowHeader: 	true
		parameters: 	a Dictionary('withRowIndex'->true )


[ :ann | 
tableModel glamourPresentation
	strongSelection: ann strongSelectionValue ] in GLMMorphicFastTableRenderer(GLMMorphicFTRenderer)>>initializeAnnouncementForDataSource
	Receiver: a GLMMorphicFastTableRenderer
	Arguments and temporary variables: 
		ann: 	a GLMTreeMorphStrongSelectionChanged
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tableModel: 	a GLMFastTableDataSource
		tableMorph: 	a FTTableMorph(206780672)


BlockClosure>>cull:
	Receiver: [ :ann | 
tableModel glamourPresentation
	strongSelection: ann strongSelectionValue ]
	Arguments and temporary variables: 
		anArg: 	a GLMTreeMorphStrongSelectionChanged
	Receiver's instance variables: 
		outerContext: 	GLMMorphicFastTableRenderer(GLMMorphicFTRenderer)>>initializeAnno...etc...
		startpc: 	119
		numArgs: 	1


BlockClosure>>cull:cull:
	Receiver: [ :ann | 
tableModel glamourPresentation
	strongSelection: ann strongSelectionValue ]
	Arguments and temporary variables: 
		firstArg: 	a GLMTreeMorphStrongSelectionChanged
		secondArg: 	a GLMAnnouncer
	Receiver's instance variables: 
		outerContext: 	GLMMorphicFastTableRenderer(GLMMorphicFTRenderer)>>initializeAnno...etc...
		startpc: 	119
		numArgs: 	1


[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:
	Receiver: an AnnouncementSubscription
	Arguments and temporary variables: 
		anAnnouncement: 	a GLMTreeMorphStrongSelectionChanged
	Receiver's instance variables: 
		announcer: 	a GLMAnnouncer
		announcementClass: 	GLMTreeMorphStrongSelectionChanged
		subscriber: 	a GLMMorphicFastTableRenderer
		action: 	[ :ann | 
tableModel glamourPresentation
	strongSelection: ann strongSe...etc...


BlockClosure>>on:do:
	Receiver: [ action cull: anAnnouncement cull: announcer ]
	Arguments and temporary variables: 
		exception: 	UnhandledError
		handlerAction: 	[ :ex | 
| copy onDoCtx process handler bottom thisCtx |
onDoCtx...etc...
	Receiver's instance variables: 
		outerContext: 	AnnouncementSubscription>>deliver:
		startpc: 	47
		numArgs: 	0


[ Processor terminateActive ] in [ :ex | 
| copy onDoCtx process handler bottom thisCtx |
onDoCtx := thisContext.
thisCtx := onDoCtx home.

"find the context on stack for which this method's is sender"
[ onDoCtx sender == thisCtx ]
	whileFalse: [ onDoCtx := onDoCtx sender.
		onDoCtx
			ifNil: [ "Can't find our home context. seems like we're already forked
				and handling another exception in new thread. In this case, just pass it through handler." ^ handlerAction cull: ex ] ].
bottom := [ Processor terminateActive ] asContext.
onDoCtx privSender: bottom.
handler := [ handlerAction cull: ex ] asContext.
handler privSender: thisContext sender.
(Process forContext: handler priority: Processor activePriority)
	resume.

"cut the stack of current process"
thisContext privSender: thisCtx.
nil ] in BlockClosure>>on:fork:
	Receiver: [ action cull: anAnnouncement cull: announcer ]
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		outerContext: 	AnnouncementSubscription>>deliver:
		startpc: 	47
		numArgs: 	0



--- The full stack ---
Usuario(Object)>>error:
Usuario(Object)>>errorNotIndexable
Usuario(Object)>>size
[ :result | 
"withSmalltalkSearch;
		showOnly: 50;
		helpMessage: 'Quick selection field. Given your INPUT, it executes: self select: [:each | INPUT ]'."
result isNil
	ifTrue: [ nil ]
	ifFalse: [ result size = 1
			ifTrue: [ result anyOne ]
			ifFalse: [ self species withAll: result ] ] ] in OrderedCollection(SequenceableCollection)>>gtInspectorItemsIn:
BlockClosure>>glamourValueWithArgs:
BlockClosure(ProtoObject)>>glamourValue:
GLMFastTablePresentation(GLMPresentation)>>strongSelection:
[ :ann | 
tableModel glamourPresentation
	strongSelection: ann strongSelectionValue ] in GLMMorphicFastTableRenderer(GLMMorphicFTRenderer)>>initializeAnnouncementForDataSource
BlockClosure>>cull:
BlockClosure>>cull:cull:
[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:
BlockClosure>>on:do:
[ Processor terminateActive ] in [ :ex | 
| copy onDoCtx process handler bottom thisCtx |
onDoCtx := thisContext.
thisCtx := onDoCtx home.

"find the context on stack for which this method's is sender"
[ onDoCtx sender == thisCtx ]
	whileFalse: [ onDoCtx := onDoCtx sender.
		onDoCtx
			ifNil: [ "Can't find our home context. seems like we're already forked
				and handling another exception in new thread. In this case, just pass it through handler." ^ handlerAction cull: ex ] ].
bottom := [ Processor terminateActive ] asContext.
onDoCtx privSender: bottom.
handler := [ handlerAction cull: ex ] asContext.
handler privSender: thisContext sender.
(Process forContext: handler priority: Processor activePriority)
	resume.

"cut the stack of current process"
thisContext privSender: thisCtx.
nil ] in BlockClosure>>on:fork:
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of Storage class did not understand #cleanFriends
2 January 2018 1:49:55.523369 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

Storage class(Object)>>doesNotUnderstand: #cleanFriends
	Receiver: Storage
	Arguments and temporary variables: 
		aMessage: 	cleanFriends
		exception: 	MessageNotUnderstood: Storage class>>cleanFriends
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary()
		format: 	65540
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Storage
		classPool: 	a Dictionary(#default->nil )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-User-Examples'
		traitComposition: 	{}
		localSelectors: 	nil
		usuarios: 	an OrderedCollection()
		mensajes: 	an OrderedCollection()
		chatActual: 	an Usuario
		usuarioActual: 	an Usuario


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'(Storage usuarioConNumero: ''4505590'') cleanFriends '
		itsSelection: 	a Text for '(Storage usuarioConNumero: ''4505590'') cleanFriends ...etc...
		itsSelectionString: 	'(Storage usuarioConNumero: ''4505590'') cleanFriends '
	Receiver's instance variables: 
		ast: 	DoIt
	^ (Storage usuarioConNumero: '4505590') cleanFriends
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(965671168)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(965671168)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(461888768)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(965671168)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@107)
		owner: 	a TransformWithLayoutMorph(430070784)
		submorphs: 	an Array(a RubPrimarySelectionMorph(125751552) a RubCursor(630249472...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (902115328) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(847482880)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(630249472)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(1000776192))
		getMenuPolicy: 	a RubEditingArea(965671168)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(461888768)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1259@721)
		canvas: 	a FormCanvas on: DisplayScreen(1259x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(713000192))(a DropList...etc...
		lastStepTime: 	16198353
		lastStepMessage: 	nil
		lastCycleTime: 	16198376
		alarms: 	a Heap()
		lastAlarmTime: 	16198353
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1259@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(230381056) a Na...etc...
		fullBounds: 	(0@0) corner: (1259@721)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1259@721)
		canvas: 	a FormCanvas on: DisplayScreen(1259x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(713000192))(a DropList...etc...
		lastStepTime: 	16198353
		lastStepMessage: 	nil
		lastCycleTime: 	16198376
		alarms: 	a Heap()
		lastAlarmTime: 	16198353
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1259@721)
		canvas: 	a FormCanvas on: DisplayScreen(1259x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(713000192))(a DropList...etc...
		lastStepTime: 	16198353
		lastStepMessage: 	nil
		lastCycleTime: 	16198376
		alarms: 	a Heap()
		lastAlarmTime: 	16198353
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1259@721)
		canvas: 	a FormCanvas on: DisplayScreen(1259x721x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(713000192))(a DropList...etc...
		lastStepTime: 	16198353
		lastStepMessage: 	nil
		lastCycleTime: 	16198376
		alarms: 	a Heap()
		lastAlarmTime: 	16198353
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1259@721)
		owner: 	nil
		submorphs: 	an Array(a TaskbarMorph(804941056) a GLMSystemWindow(230381056) a Na...etc...
		fullBounds: 	(0@0) corner: (1259@721)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (167909120) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(857488128)
	Arguments and temporary variables: 
		aPoint: 	(513@261.0)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(965671168)
	Receiver's instance variables: 
		bounds: 	(511.0@253.0) corner: (718.0@489.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(623446784)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(511.0@253.0) corner: (719.0@490.0)
		color: 	(Color r: 0.775 g: 0.775 b: 0.775 alpha: 1.0)
		extension: 	a MorphExtension (955947776) [other:  (basicColor -> Color lightGray...etc...
		borderWidth: 	1
		borderColor: 	Color gray
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(268914688)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(857488128)
	Arguments and temporary variables: 
		allowKeyboardControl: 	true
	Receiver's instance variables: 
		bounds: 	(511.0@253.0) corner: (718.0@489.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(623446784)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(511.0@253.0) corner: (719.0@490.0)
		color: 	(Color r: 0.775 g: 0.775 b: 0.775 alpha: 1.0)
		extension: 	a MorphExtension (955947776) [other:  (basicColor -> Color lightGray...etc...
		borderWidth: 	1
		borderColor: 	Color gray
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(268914688)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal
	Receiver: a MenuMorph(857488128)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(511.0@253.0) corner: (718.0@489.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(623446784)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(511.0@253.0) corner: (719.0@490.0)
		color: 	(Color r: 0.775 g: 0.775 b: 0.775 alpha: 1.0)
		extension: 	a MorphExtension (955947776) [other:  (basicColor -> Color lightGray...etc...
		borderWidth: 	1
		borderColor: 	Color gray
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(268914688)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
	Receiver: a RubEditingArea(965671168)
	Arguments and temporary variables: 
		shiftKeyState: 	false
		menu: 	a MenuMorph(857488128)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@107)
		owner: 	a TransformWithLayoutMorph(430070784)
		submorphs: 	an Array(a RubPrimarySelectionMorph(125751552) a RubCursor(630249472...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (902115328) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(847482880)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(630249472)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(1000776192))
		getMenuPolicy: 	a RubEditingArea(965671168)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(RubAbstractTextArea)>>mouseDown:
	Receiver: a RubEditingArea(965671168)
	Arguments and temporary variables: 
		evt: 	[(97.0@8.0) mouseDown yellow 65704879 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@107)
		owner: 	a TransformWithLayoutMorph(430070784)
		submorphs: 	an Array(a RubPrimarySelectionMorph(125751552) a RubCursor(630249472...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (902115328) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(847482880)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(630249472)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(1000776192))
		getMenuPolicy: 	a RubEditingArea(965671168)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


RubEditingArea(Morph)>>handleMouseDown:
	Receiver: a RubEditingArea(965671168)
	Arguments and temporary variables: 
		anEvent: 	[(97.0@8.0) mouseDown yellow 65704879 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@107)
		owner: 	a TransformWithLayoutMorph(430070784)
		submorphs: 	an Array(a RubPrimarySelectionMorph(125751552) a RubCursor(630249472...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (902115328) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(847482880)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(630249472)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(1000776192))
		getMenuPolicy: 	a RubEditingArea(965671168)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MouseButtonEvent>>sentTo:
	Receiver: [(97.0@8.0) mouseDown yellow 65704879 nil]
	Arguments and temporary variables: 
		anObject: 	a RubEditingArea(965671168)
	Receiver's instance variables: 
		timeStamp: 	65704879
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(97.0@8.0)
		handler: 	a RubEditingArea(965671168)
		wasHandled: 	true
		whichButton: 	2


RubEditingArea(Morph)>>handleEvent:
	Receiver: a RubEditingArea(965671168)
	Arguments and temporary variables: 
		anEvent: 	[(97.0@8.0) mouseDown yellow 65704879 nil]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@107)
		owner: 	a TransformWithLayoutMorph(430070784)
		submorphs: 	an Array(a RubPrimarySelectionMorph(125751552) a RubCursor(630249472...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (902115328) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(847482880)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(630249472)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(1000776192))
		getMenuPolicy: 	a RubEditingArea(965671168)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(97.0@8.0) mouseDown yellow 65704879 nil]
		aMorph: 	a RubEditingArea(965671168)
		globalPt: 	(97.0@8.0)
		localEvt: 	[(97.0@8.0) mouseDown yellow 65704879 nil]
		index: 	3
		child: 	a RubPrimarySelectionMorph(125751552)
		morphs: 	an Array(a RubPrimarySelectionMorph(125751552) a RubCursor(630249472))
		handler: 	a RubEditingArea(965671168)
		inside: 	false
		lastHandler: 	a RubScrolledTextMorph(461888768)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(97.0@8.0) mouseDown yellow 65704879 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(97.0@8.0) mouseDown yellow 65704879 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	65704879
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(97.0@8.0)
		handler: 	a RubEditingArea(965671168)
		wasHandled: 	true
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(97.0@8.0) mouseDown yellow 65704879 nil]
		aMorph: 	a RubEditingArea(965671168)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(97.0@8.0) mouseDown yellow 65704879 nil]
		aMorph: 	a RubEditingArea(965671168)
	Receiver's instance variables: 
		morph: 	nil


RubEditingArea(Morph)>>processEvent:using:
	Receiver: a RubEditingArea(965671168)
	Arguments and temporary variables: 
		anEvent: 	[(97.0@8.0) mouseDown yellow 65704879 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (652@107)
		owner: 	a TransformWithLayoutMorph(430070784)
		submorphs: 	an Array(a RubPrimarySelectionMorph(125751552) a RubCursor(630249472...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (902115328) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(847482880)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(630249472)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(1000776192))
		getMenuPolicy: 	a RubEditingArea(965671168)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(513@261) mouseDown yellow 65704879 nil]
		aMorph: 	a TransformWithLayoutMorph(430070784)
		globalPt: 	(513@261)
		localEvt: 	[(97.0@8.0) mouseDown yellow 65704879 nil]
		index: 	1
		child: 	a RubEditingArea(965671168)
		morphs: 	an Array(a RubEditingArea(965671168))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(461888768)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(513@261) mouseDown yellow 65704879 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(513@261) mouseDown yellow 65704879 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	65704879
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(513@261)
		handler: 	a RubScrolledTextMorph(461888768)
		wasHandled: 	false
		whichButton: 	2


[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(513@261) mouseDown yellow 65704879 nil]
		aMorph: 	a TransformWithLayoutMorph(430070784)
	Receiver's instance variables: 
		morph: 	nil


BlockClosure>>ensure:
	Receiver: [ ^ anEvent sentTo: self ]
	Arguments and temporary variables: 
		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:
		startpc: 	28
		numArgs: 	0


MorphicEventDispatcher>>dispatchEvent:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(513@261) mouseDown yellow 65704879 nil]
		aMorph: 	a TransformWithLayoutMorph(430070784)
	Receiver's instance variables: 
		morph: 	nil


TransformWithLayoutMorph(Morph)>>processEvent:using:
	Receiver: a TransformWithLayoutMorph(430070784)
	Arguments and temporary variables: 
		anEvent: 	[(513@261) mouseDown yellow 65704879 nil]
		defaultDispatcher: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		bounds: 	(416.0@253.0) corner: (1068.0@588.0)
		owner: 	a RubTextScrollPane(847482880)
		submorphs: 	an Array(a RubEditingArea(965671168))
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (219392256) [other:  (kmDispatcher -> a KMDispatche...etc...
		transform: 	a MorphicTransform(angle = 0.0; scale = 1.0; offset = (-416.0@ -253....etc...
		smoothing: 	1
		localBounds: 	nil


MorphicEventDispatcher>>dispatchMouseDown:with:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(513@261) mouseDown yellow 65704879 nil]
		aMorph: 	a RubTextScrollPane(847482880)
		globalPt: 	(513@261)
		localEvt: 	[(513@261) mouseDown yellow 65704879 nil]
		index: 	1
		child: 	a TransformWithLayoutMorph(430070784)
		morphs: 	an Array(a TransformWithLayoutMorph(430070784))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(461888768)
	Receiver's instance variables: 
		morph: 	nil


MorphicEventDispatcher>>handleMouseDown:
	Receiver: a MorphicEventDispatcher
	Arguments and temporary variables: 
		anEvent: 	[(513@261) mouseDown yellow 65704879 nil]
	Receiver's instance variables: 
		morph: 	nil


MouseButtonEvent>>sentTo:
	Receiver: [(513@261) mouseDown yellow 65704879 nil]
	Arguments and temporary variables: 
		anObject: 	a MorphicEventDispatcher
	Receiver's instance variables: 
		timeStamp: 	65704879
		source: 	a HandMorph(58125568)
		windowIndex: 	nil
		type: 	#mouseDown
		buttons: 	2
		position: 	(513@261)
		handler: 	a RubScrolledTextMorph(461888768)
		wasHandled: 	false
		whichButton: 	2



--- The full stack ---
Storage class(Object)>>doesNotUnderstand: #cleanFriends
UndefinedObject>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldState>>doOneSubCycleFor:
WorldMorph>>doOneSubCycle
MenuMorph>>invokeModalAt:in:allowKeyboard:
MenuMorph>>invokeModal:
MenuMorph>>invokeModal
RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
RubEditingArea(RubAbstractTextArea)>>mouseDown:
RubEditingArea(Morph)>>handleMouseDown:
MouseButtonEvent>>sentTo:
RubEditingArea(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubEditingArea(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
TransformWithLayoutMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubTextScrollPane(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubScrolledTextMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicTHERE_BE_DRAGONS_HERE
Instance of False did not understand #usuarioConNumero:
2 January 2018 6:48:17.355369 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60528]

False(Object)>>doesNotUnderstand: #usuarioConNumero:
	Receiver: false
	Arguments and temporary variables: 
		aMessage: 	usuarioConNumero: '4505051'
		exception: 	MessageNotUnderstood: False>>usuarioConNumero:
		resumeValue: 	nil
	Receiver's instance variables: 
false

[ :e | e = Storage usuarioConNumero: '4505051' ] in UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 
		e: 	an Usuario
	Receiver's instance variables: 
nil

[ :item | 
(aBlock value: item)
	ifTrue: [ ^ false ] ] in OrderedCollection(Collection)>>noneSatisfy:
	Receiver: an OrderedCollection(an Usuario an Usuario an Usuario an Usuario an Usuario)
	Arguments and temporary variables: 
		aBlock: 	[ :e | e = Storage usuarioConNumero: '4505051' ]
		item: 	an Usuario
	Receiver's instance variables: 
		array: 	an Array(an Usuario an Usuario an Usuario an Usuario an Usuario nil nil ...etc...
		firstIndex: 	1
		lastIndex: 	5


OrderedCollection>>do:
	Receiver: an OrderedCollection(an Usuario an Usuario an Usuario an Usuario an Usuario)
	Arguments and temporary variables: 
		aBlock: 	[ :item | 
(aBlock value: item)
	ifTrue: [ ^ false ] ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(an Usuario an Usuario an Usuario an Usuario an Usuario nil nil ...etc...
		firstIndex: 	1
		lastIndex: 	5


OrderedCollection(Collection)>>noneSatisfy:
	Receiver: an OrderedCollection(an Usuario an Usuario an Usuario an Usuario an Usuario)
	Arguments and temporary variables: 
		aBlock: 	[ :e | e = Storage usuarioConNumero: '4505051' ]
	Receiver's instance variables: 
		array: 	an Array(an Usuario an Usuario an Usuario an Usuario an Usuario nil nil ...etc...
		firstIndex: 	1
		lastIndex: 	5


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'(Storage usuarioActual) amigos noneSatisfy: [ :e | e = Storage...etc...
		itsSelection: 	a Text for '(Storage usuarioActual) amigos noneSatisfy: [ :e | e ...etc...
		itsSelectionString: 	'(Storage usuarioActual) amigos noneSatisfy: [ :e | e = Sto...etc...
	Receiver's instance variables: 
		ast: 	DoIt
	^ Storage usuarioActual amigos
		noneSatisfy: [ :e | e = Storage usu...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(965671168)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | 
textMorph shoutStyler style: textMorph text.
GLMPrintPoppe...etc...
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(965671168)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 

	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(461888768)
		textModel: 	a GLMRubricSmalltalkTextModel


MorphicAlarm(MessageSend)>>value
	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)
	Arguments and temporary variables: 
